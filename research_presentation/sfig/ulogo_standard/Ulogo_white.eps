%!PS-Adobe-3.1 EPSF-3.0%ADO_DSC_Encoding: MacOS Roman%%Title: Ulogoª_white.eps%%Creator: Adobe Illustrator(R) 12%%AI8_CreatorVersion: 12.0.1%AI9_PrintingDataBegin%%For: UCOMM%%CreationDate: 5/18/06%%BoundingBox: 0 0 234 161%%HiResBoundingBox: 0 0 233.8594 160.9551%%CropBox: 0 0 233.8594 160.9551%%LanguageLevel: 2%%DocumentData: Clean7Bit%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0%%+ procset Adobe_CoolType_Utility_T42 1.0 0%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0%%+ procset Adobe_CoolType_Core 2.23 0%%+ procset Adobe_AGM_Core 2.0 0%%+ procset Adobe_AGM_Utils 1.0 0%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors: %%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %ADO_BuildNumber: Adobe Illustrator(R) 12.0.1 x205 R agm 4.3861 ct 5.530%ADO_ContainsXMP: MainFirst%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 70 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 	exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/set_gvm{	currentglobal exch setglobal}bdf/reset_gvm{	setglobal}bdf/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup () cvn eq{						pop (Process)					}if				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust	AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse	AGMUTIL_GSTATE_flt setflat	end}def/get_gstate_and_matrix{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_ctm matrix currentmatrix def	end	get_gstate}def/set_gstate_and_matrix{	set_gstate	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_ctm setmatrix	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/thold_halftone{ 	level3		{sethalftone currenthalftone}		{			dup /HalftoneType get 3 eq			{				sethalftone currenthalftone			}			{				begin				Width Height mul {					Thresholds read {pop} if				} repeat				end				currenthalftone			} ifelse		}ifelse} def /rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		exch () /SubFileDecode filter	}	{		exch pop	}	ifelse	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/filter_indexed_devn{	cvi Names length mul names_index add Lookup exch get} bdf/filter_devn{		4 dict begin	/srcStr xdf	/dstStr xdf	dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch		[			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx			currentdict /srcStr get /readstring cvx /pop cvx			/dup cvx /length cvx 0 /gt cvx [				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx				names_index Names length currentdict /srcStr get length 1 sub {					1 /index cvx /exch cvx /get cvx					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx				} for				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx			] cvx /if cvx			/end cvx		] cvx		bind		/exec cvx	] cvx	end} bdf/AGMUTIL_imagefile nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	10 dict begin	/imageDict xdf	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def	/imbufIdx 0 def	/origDataSource imageDict /DataSource get def	/origMultipleDataSources imageDict /MultipleDataSources get def	/origDecode imageDict /Decode get def	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse	{		/imbufCnt imageDict /DataSource get length def		/imbufs imbufCnt array def		0 1 imbufCnt 1 sub {			/imbufIdx xdf			imbufs imbufIdx imbufLen string put			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put		} for		DeviceN_PS2 {			imageDict begin		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def			/MultipleDataSources false def			/Decode [0 1] def			end		} if	}{		/imbuf imbufLen string def		Indexed_DeviceN level3 not and DeviceN_NoneName or {			/srcDataStrs [ imageDict begin				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse				{					Width Decode length 2 div mul cvi string				} repeat				end ] def					imageDict begin		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def			/Decode [0 1] def			end		}{			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put			imageDict /Decode [0 1] put		} ifelse	} ifelse	imageDict exch	load exec	imageDict /DataSource origDataSource put	imageDict /MultipleDataSources origMultipleDataSources put	imageDict /Decode origDecode put		end} bdf/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		2 dict begin		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {			/imbuf imbufLen string def		}if		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 			pop			MultipleDataSources {			 	0 1 DataSource length 1 sub {					DataSource type dup					/arraytype eq {						pop DataSource exch get exec					}{						/filetype eq {							DataSource exch get imbuf readstring pop						}{							DataSource exch get						} ifelse					} ifelse					AGMUTIL_imagefile exch writestring				} for			}{				DataSource type dup				/arraytype eq {					pop DataSource exec				}{					/filetype eq {						DataSource imbuf readstring pop					}{						DataSource					} ifelse				} ifelse				AGMUTIL_imagefile exch writestring			} ifelse		}for		end		true	}ifelse	end} bdf/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}defstatusdict /product known userdict /AGMP_current_show known not and{	/pstr statusdict /product get def	pstr (HP LaserJet 2200) eq 		pstr (HP LaserJet 4000 Series) eq or	pstr (HP LaserJet 4050 Series ) eq or	pstr (HP LaserJet 8000 Series) eq or	pstr (HP LaserJet 8100 Series) eq or	pstr (HP LaserJet 8150 Series) eq or	pstr (HP LaserJet 5000 Series) eq or	pstr (HP LaserJet 5100 Series) eq or	pstr (HP Color LaserJet 4500) eq or	pstr (HP Color LaserJet 4600) eq or	pstr (HP LaserJet 5Si) eq or	pstr (HP LaserJet 1200 Series) eq or	pstr (HP LaserJet 1300 Series) eq or	pstr (HP LaserJet 4100 Series) eq or 	{ 		userdict /AGMP_current_show /show load put		userdict /show {		  currentcolorspace 0 get		  /Pattern eq		  {false charpath f}		  {AGMP_current_show} ifelse		} put	}if	currentdict /pstr undef} if/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		DataSource 0 get type		dup /filetype eq			{			1 dict begin			/flushbuffer Width cvi string def			1 1 Height cvi				{				pop				0 1 DataSource length 1 sub					{					DataSource exch get					flushbuffer readstring pop pop					}for				}for			end			}if		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and			{			Width Height mul cvi				{				0 1 DataSource length 1 sub					{dup DataSource exch get exec length exch 0 ne {pop}if}for				dup 0 eq					{pop exit}if				sub dup 0 le					{exit}if				}loop			pop			}if				}		{		/DataSource load type 		dup /filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 idiv mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and			{				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul					{					DataSource length dup 0 eq						{pop exit}if					sub dup 0 le						{exit}if					}loop				pop			}if		}ifelse	end}bdf/addprocs{	  2{/exec load}repeat	  3 1 roll	  [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin	 currentdict 2 index known{	 	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse		 addprocs /TransferFunction xdf 		 currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/clonearray{	dup xcheck exch	dup length array exch	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 	{	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 	dup type /dicttype eq		{			Adobe_AGM_Core/AGMCORE_tmp get			exch			clonedict			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	dup type /arraytype eq		{			Adobe_AGM_Core/AGMCORE_tmp get exch			clonearray			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	exch dup	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put	}forall	exch {cvx} if}bdf/clonedict{	dup length dict	begin		{		dup type /dicttype eq			{				clonedict			} if		dup type /arraytype eq			{				clonearray			} if		def		}forall	currentdict	end}bdf/DeviceN_PS2{	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and} bdf/Indexed_DeviceN{ 	/indexed_colorspace_dict AGMCORE_gget dup null ne {		dup /CSDBase known {			/CSDBase get /CSD get_res /Names known 		}{			pop false		}ifelse	}{		pop false	} ifelse} bdf/DeviceN_NoneName{		/Names where {		pop		false Names		{			(None) eq or		} forall	}{		false	}ifelse} bdf/DeviceN_PS2_inRip_seps{	/AGMCORE_in_rip_sep where	{		pop dup type dup /arraytype eq exch /packedarraytype eq or		{			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and			{				/currentcolorspace exch AGMCORE_gput				false			}			{				true			}ifelse		}		{			true		} ifelse	}	{		true	} ifelse} bdf/base_colorspace_type{	dup type /arraytype eq {0 get} if} bdf/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse{	/pdfmark_5 {cleartomark} bind def}{	/pdfmark_5 {pdfmark} bind def}ifelse/ReadBypdfmark_5{	2 dict begin	/makerString exch def string /tmpString exch def	{		currentfile tmpString readline pop		makerString anchorsearch		{		pop pop cleartomark exit		}{			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5		} ifelse	}loop	end} bdf/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for%% definitions of some fundamental procedures.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 201 dict dup begin put/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSD_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/AGMCORE_Default_PageSize nd/AGMCORE_currentbg nd/AGMCORE_currentucr nd/AGMCORE_in_pattern false def/AGMCORE_currentpagedevice nd/knockout_unitsq ndcurrentglobal true setglobal[/CSA /Gradient /Procedure]{	/Generic /Category findresource dup length dict copy /Category defineresource pop} forallsetglobal/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	2 dict begin	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	end	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/npth_clp{	newpath clip} def/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	//Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/dictstackcount countdictstack def	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	dictstackcount 1 countdictstack 1 sub {end}for	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont	/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto	/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show			0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp xpt				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf	errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if	/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def	AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if	/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_currentbg currentblackgeneration def	/AGMCORE_currentucr currentundercolorremoval def	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_tmpmatrix matrix def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 10 def		/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_&setoverprint /setoverprint ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse			/AGMCORE_gstackptr exch store		}def		/grestoreall {			AGMCORE_&grestoreall			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/setoverprint{			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint		}def			0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and	{		/AGMCORE_&sysshfill systemdict/shfill get def		/AGMCORE_&sysmakepattern systemdict/makepattern get def		/AGMCORE_&usrmakepattern /makepattern load def	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/devicen_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	<<	/MaxPatternItem currentsystemparams /MaxPatternCache get	>>	setuserparams	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_have_reported_unsupported_color_space false def	/AGMCORE_report_unsupported_color_space	{		AGMCORE_have_reported_unsupported_color_space false eq		{			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf		} if	}def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def	/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/sRGB ne					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			//Adobe_AGM_Core begin			dup map_alias {				/Name get exch pop			} if			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						current_spot_alias false set_spot_alias						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor						set_spot_alias						currentgray 1 ne					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						//Adobe_AGM_Core/AGMCORE_name xddf						false						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse						not AGMCORE_currentpagedevice/OverrideSeparations known and						{							AGMCORE_currentpagedevice/OverrideSeparations get							{								/HqnSpots /ProcSet resourcestatus								{									pop pop pop true								}if							}if						}if											{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not						}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace							false							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall								not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse			end		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				dup true exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or						{pop}						{convert_spot_to_process and}ifelse					}				forall					{					true exch						{						dup (Cyan) eq exch						dup (Magenta) eq 3 -1 roll or exch						dup (Yellow) eq 3 -1 roll or exch						(Black) eq or and						}forall						not					}{pop false}ifelse				}{				false exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or					{pop}					{convert_spot_to_process or}ifelse					}				forall				}ifelse			}ifelse		}def	}ifelse		/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	/AGMCORE_IsSeparationAProcessColor		{		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or		}def	AGMCORE_host_sep{		/setcolortransfer		{ 			AGMCORE_cyan_plate{				pop pop pop			}{			  	AGMCORE_magenta_plate{			  		4 3 roll pop pop pop			  	}{			  		AGMCORE_yellow_plate{			  			4 2 roll pop pop pop			  		}{			  			4 1 roll pop pop pop			  		}ifelse			  	}ifelse			}ifelse			settransfer  		}			def		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/AGMCORE_RemoveProcessColorNames			{			1 dict begin			/filtername				{				dup /Cyan eq 1 index (Cyan) eq or					{pop (_cyan_)}if				dup /Magenta eq 1 index (Magenta) eq or					{pop (_magenta_)}if				dup /Yellow eq 1 index (Yellow) eq or					{pop (_yellow_)}if				dup /Black eq 1 index (Black) eq or					{pop (_black_)}if				}def			dup type /arraytype eq				{[exch {filtername}forall]}				{filtername}ifelse			end			}def		level3 {			/AGMCORE_IsCurrentColor				{				dup AGMCORE_IsSeparationAProcessColor					{					AGMCORE_plate_ndx 0 eq						{dup (Cyan) eq exch /Cyan eq or}if					AGMCORE_plate_ndx 1 eq						{dup (Magenta) eq exch /Magenta eq or}if					AGMCORE_plate_ndx 2 eq						{dup (Yellow) eq exch /Yellow eq or}if					AGMCORE_plate_ndx 3 eq						{dup (Black) eq exch /Black eq or}if					AGMCORE_plate_ndx 4 eq						{pop false}if					}{					gsave					false setoverprint					current_spot_alias false set_spot_alias					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor					set_spot_alias					currentgray 1 ne					grestore					}ifelse				}def			/AGMCORE_filter_functiondatasource				{					5 dict begin				/data_in xdf				data_in type /stringtype eq					{					/ncomp xdf					/comp xdf					/string_out data_in length ncomp idiv string def					0 ncomp data_in length 1 sub						{						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put						}for					string_out					}{					string /string_in xdf					/string_out 1 string def					/component xdf					[					data_in string_in /readstring cvx						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx						[/pop cvx ()]cvx /ifelse cvx					]cvx /ReusableStreamDecode filter				}ifelse				end				}def			/AGMCORE_separateShadingFunction				{				2 dict begin				/paint? xdf				/channel xdf				dup type /dicttype eq					{					begin					FunctionType 0 eq						{						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def						currentdict /Decode known							{/Decode Decode channel 2 mul 2 getinterval def}if						paint? not							{/Decode [1 1]def}if						}if					FunctionType 2 eq						{						paint?							{							/C0 [C0 channel get 1 exch sub] def							/C1 [C1 channel get 1 exch sub] def							}{							/C0 [1] def							/C1 [1] def							}ifelse									}if					FunctionType 3 eq						{						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def									}if					currentdict /Range known						{/Range [0 1] def}if					currentdict					end}{					channel get 0 paint? AGMCORE_separateShadingFunction					}ifelse				end				}def			/AGMCORE_separateShading				{				3 -1 roll begin				currentdict /Function known					{					currentdict /Background known						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf					/ColorSpace [/DeviceGray] def					}{					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq						{						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def						}{						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put						}ifelse					ColorSpace 0 get /Separation eq						{							{								[1 /exch cvx /sub cvx]cvx							}{								[/pop cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll put							pop						}{							{								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx							}{								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll bind put						}ifelse					ColorSpace 2 /DeviceGray put																							}ifelse				end				}def			/AGMCORE_separateShadingDict				{				dup /ColorSpace get				dup type /arraytype ne					{[exch]}if				dup 0 get /DeviceCMYK eq					{					exch begin 					currentdict					AGMCORE_cyan_plate						{0 true}if					AGMCORE_magenta_plate						{1 true}if					AGMCORE_yellow_plate						{2 true}if					AGMCORE_black_plate						{3 true}if					AGMCORE_plate_ndx 4 eq						{0 false}if							dup not currentoverprint and						{/AGMCORE_ignoreshade true def}if					AGMCORE_separateShading					currentdict					end exch					}if				dup 0 get /Separation eq					{					exch begin					ColorSpace 1 get dup /None ne exch /All ne and						{						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and							{							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 								{								/ColorSpace									[									/Separation									ColorSpace 1 get									/DeviceGray										[										ColorSpace 3 get /exec cvx										4 AGMCORE_plate_ndx sub -1 /roll cvx										4 1 /roll cvx										3 [/pop cvx]cvx /repeat cvx										1 /exch cvx /sub cvx										]cvx																		]def								}{								AGMCORE_report_unsupported_color_space								AGMCORE_black_plate not									{									currentdict 0 false AGMCORE_separateShading									}if								}ifelse							}{							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor							0 exch 							dup not currentoverprint and								{/AGMCORE_ignoreshade true def}if							AGMCORE_separateShading							}ifelse							}if								currentdict					end exch					}if				dup 0 get /DeviceN eq					{					exch begin					ColorSpace 1 get convert_to_process						{						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 							{							/ColorSpace								[								/DeviceN								ColorSpace 1 get								/DeviceGray									[									ColorSpace 3 get /exec cvx									4 AGMCORE_plate_ndx sub -1 /roll cvx									4 1 /roll cvx									3 [/pop cvx]cvx /repeat cvx									1 /exch cvx /sub cvx									]cvx																	]def							}{							AGMCORE_report_unsupported_color_space							AGMCORE_black_plate not								{								currentdict 0 false AGMCORE_separateShading								/ColorSpace [/DeviceGray] def								}if							}ifelse						}{						currentdict						false -1 ColorSpace 1 get							{							AGMCORE_IsCurrentColor								{								1 add								exch pop true exch exit								}if							1 add							}forall						exch 						dup not currentoverprint and							{/AGMCORE_ignoreshade true def}if						AGMCORE_separateShading						}ifelse					currentdict					end exch					}if				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not					{					exch begin					ColorSpace dup type /arraytype eq						{0 get}if					/DeviceGray ne						{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate not							{							ColorSpace 0 get /CIEBasedA eq								{								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def								}if							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or								{								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def								}if							ColorSpace 0 get /CIEBasedDEFG eq								{								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def								}if							currentdict 0 false AGMCORE_separateShading							}if						}if					currentdict					end exch					}if				pop				dup /AGMCORE_ignoreshade known					{					begin					/ColorSpace [/Separation (None) /DeviceGray {}] def					currentdict end					}if				}def			/shfill				{				AGMCORE_separateShadingDict 				dup /AGMCORE_ignoreshade known					{pop}					{AGMCORE_&sysshfill}ifelse				}def			/makepattern				{				exch				dup /PatternType get 2 eq					{					clonedict					begin					/Shading Shading AGMCORE_separateShadingDict def					Shading /AGMCORE_ignoreshade known					currentdict end exch					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if					exch AGMCORE_&sysmakepattern					}{					exch AGMCORE_&usrmakepattern					}ifelse				}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				//Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf	/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def	/map_index	{		1 index mul exch getinterval {255 div} forall	} bdf	/map_indexed_devn	{		Lookup Names length 3 -1 roll cvi map_index	} bdf	/n_color_components	{		base_colorspace_type		dup /DeviceGray eq{			pop 1		}{			/DeviceCMYK eq{				4			}{				3			}ifelse		}ifelse	}bdf	level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		level2 /setcolorspace AGMCORE_key_known not and{			/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					/AGMCORE_SpotAliasAry2 where {						begin						dup 0 get dup /Separation eq						{							pop							dup length array copy							dup dup 1 get							current_spot_alias							{								dup map_alias								{									false set_spot_alias									dup 1 exch setsepcolorspace									true set_spot_alias									begin									/sep_colorspace_dict currentdict AGMCORE_gput									pop pop	pop									[ 										/Separation Name 										CSA map_csa										MappedCSA 										/sep_colorspace_proc load									]									dup Name									end								}if							}if							map_reserved_ink_name 1 xpt						}{							/DeviceN eq 							{								dup length array copy								dup dup 1 get [ 									exch {										current_spot_alias{											dup map_alias{												/Name get exch pop											}if										}if										map_reserved_ink_name									} forall 								] 1 xpt							}if						}ifelse						end					} if				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if			}def		}if		}{		/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def		/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def		/setcolor_devicecolor		{			base_colorspace_type			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def		/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse	/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/devn /setdevicencolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/devncs /setdevicencolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/f /fill ldf	/ef /eofill ldf	/@ /stroke ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf	/AGMCORE_def_ht currenthalftone def	/clonedict Adobe_AGM_Utils begin /clonedict load end def	/clonearray Adobe_AGM_Utils begin /clonearray load end def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall	/getrampcolor	{ 		/indx exch def		0 1 NumComp 1 sub		{			dup			Samples exch get			dup type /stringtype eq {indx get} if			exch			Scaling exch get aload pop			3 1 roll			mul add		} for		ColorSpaceFamily /Separation eq 		{sep}		{			ColorSpaceFamily /DeviceN eq			{devn} {setcolor}ifelse		}ifelse	} bdf	/sssetbackground {aload pop setcolor} bdf	/RadialShade	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/r2 xdf		/c2y xdf		/c2x xdf		/r1 xdf		/c1y xdf		/c1x xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		c1x c2x eq		{			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope c2y c1y sub c2x c1x sub div def			/theta slope 1 atan def			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if		} ifelse		gsave		clippath		c1x c1y translate		theta rotate		-90 rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax xdf		/xMax xdf		/yMin xdf		/xMin xdf		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			/max { 2 copy gt { pop } {exch pop} ifelse } bdf			/min { 2 copy lt { pop } {exch pop} ifelse } bdf			rampdict begin			40 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			c1x c1y translate			theta rotate			-90 rotate			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def			/c1y 0 def			/c1x 0 def			/c2x 0 def			ext0			{				0 getrampcolor				c2y r2 add r1 sub 0.0001 lt				{					c1x c1y r1 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2y r1 add r2 le					{						c1x c1y r1 0 360 arc						fill					}					{						c2x c2y r2 0 360 arc fill						r1 r2 eq						{							/p1x r1 neg def							/p1y c1y def							/p2x r1 def							/p2y c1y def							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto							fill						}						{							/AA r2 r1 sub c2y div def							AA -1 eq							{ /theta 89.99 def}							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}							ifelse							/SS1 90 theta add dup sin exch cos div def							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def							/p1y p1x SS1 div neg def							/SS2 90 theta sub dup sin exch cos div def							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def							/p2y p2x SS2 div neg def							r1 r2 gt							{								/L1maxX p1x yMin p1y sub SS1 div add def								/L2maxX p2x yMin p2y sub SS2 div add def							}							{								/L1maxX 0 def								/L2maxX 0 def							} ifelse							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto							L1maxX L1maxX p1x sub SS1 mul p1y add lineto							fill						} ifelse					} ifelse				} ifelse			} if		c1x c2x sub dup mul		c1y c2y sub dup mul		add 0.5 exp		0 dtransform		dup mul exch dup mul add 0.5 exp 72 div		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		1 index 1 index lt { exch } if pop		/hires xdf		hires mul		/numpix xdf		/numsteps NumSamples def		/rampIndxInc 1 def		/subsampling false def		numpix 0 ne		{			NumSamples numpix div 0.5 gt			{				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def				/rampIndxInc NumSamples 1 sub numsteps div def				/subsampling true def			} if		} if		/xInc c2x c1x sub numsteps div def		/yInc c2y c1y sub numsteps div def		/rInc r2 r1 sub numsteps div def		/cx c1x def		/cy c1y def		/radius r1 def		newpath		xInc 0 eq yInc 0 eq rInc 0 eq and and		{			0 getrampcolor			cx cy radius 0 360 arc			stroke			NumSamples 1 sub getrampcolor			cx cy radius 72 hires div add 0 360 arc			0 setlinewidth			stroke		}		{			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				cx cy radius 0 360 arc				/cx cx xInc add def				/cy cy yInc add def				/radius radius rInc add def				cx cy radius 360 0 arcn				eofill				rampIndxInc add			} repeat			pop		} ifelse		ext1		{			c2y r2 add r1 lt			{				c2x c2y r2 0 360 arc				fill			}			{				c2y r1 add r2 sub 0.0001 le				{					c2x c2y r2 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2x c2y r2 0 360 arc fill					r1 r2 eq					{						/p1x r2 neg def						/p1y c2y def						/p2x r2 def						/p2y c2y def						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto						fill					}					{						/AA r2 r1 sub c2y div def						AA -1 eq						{ /theta 89.99 def}						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}						ifelse						/SS1 90 theta add dup sin exch cos div def						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def						/p1y c2y p1x SS1 div sub def						/SS2 90 theta sub dup sin exch cos div def						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def						/p2y c2y p2x SS2 div sub def						r1 r2 lt						{							/L1maxX p1x yMax p1y sub SS1 div add def							/L2maxX p2x yMax p2y sub SS2 div add def						}						{							/L1maxX 0 def							/L2maxX 0 def						}ifelse						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto						L1maxX L1maxX p1x sub SS1 mul p1y add lineto						fill					} ifelse				} ifelse			} ifelse		} if		grestore		grestore		end		end		end		} ifelse	} bdf	/GenStrips	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/y2 xdf		/x2 xdf		/y1 xdf		/x1 xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		x1 x2 eq		{			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope y2 y1 sub x2 x1 sub div def			/theta slope 1 atan def			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if		}		ifelse		gsave		clippath		x1 y1 translate		theta rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax exch def		/xMax exch def		/yMin exch def		/xMin exch def		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			rampdict begin			20 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			x1 y1 translate			theta rotate			/xStart 0 def			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def			/ySpan yMax yMin sub def			/numsteps NumSamples def			/rampIndxInc 1 def			/subsampling false def			xStart 0 transform			xEnd 0 transform			3 -1 roll			sub dup mul			3 1 roll			sub dup mul			add 0.5 exp 72 div			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			1 index 1 index lt { exch } if pop			mul			/numpix xdf			numpix 0 ne			{				NumSamples numpix div 0.5 gt				{					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def					/rampIndxInc NumSamples 1 sub numsteps div def					/subsampling true def				} if			} if			ext0			{				0 getrampcolor				xMin xStart lt				{					xMin yMin xMin neg ySpan rectfill				} if			} if			/xInc xEnd xStart sub numsteps div def			/x xStart def			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				x yMin xInc ySpan rectfill				/x x xInc add def				rampIndxInc add			} repeat			pop			ext1 {				xMax xEnd gt				{					xEnd yMin xMax xEnd sub ySpan rectfill				} if			} if			grestore			grestore			end			end			end		} ifelse	} bdf}def/page_trailer{	end}def/doc_trailer{}def/capture_currentpagedevice {	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf} defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup //Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA get_csa_by_name setcolorspace_opt		set_crd	end}def/map_csa{	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse	{pop}{get_csa_by_name /MappedCSA xdf}ifelse} def/setsepcolor{ 	/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/setdevicencolor{ 	/devicen_colorspace_dict AGMCORE_gget begin		Names length copy		Names length 1 sub -1 0		{			/devicen_tints AGMCORE_gget 3 1 roll xpt		} for		TintProc	end} def/sep_colorspace_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 	current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	CSA map_csa	/AGMCORE_sep_special Name dup () eq exch (All) eq or store	AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx							AGMCORE_host_sep{								AGMCORE_is_cmyk_sep								/Name cvx 								/AGMCORE_IsSeparationAProcessColor load /exec cvx								/not cvx /and cvx 							}{								Name inRip_spot_has_ink not							}ifelse							[		 						/pop cvx 1							] cvx /if cvx							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc {setcolor} bdf						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/additive_blend{  	3 dict begin  	/numarrays xdf  	/numcolors xdf  	0 1 numcolors 1 sub  		{  		/c1 xdf  		1  		0 1 numarrays 1 sub  			{			1 exch add /index cvx  			c1 /get cvx /mul cvx  			}for 		numarrays 1 add 1 /roll cvx   		}for 	numarrays [/pop cvx] cvx /repeat cvx  	end}def/subtractive_blend{	3 dict begin	/numarrays xdf	/numcolors xdf	0 1 numcolors 1 sub		{		/c1 xdf		1 1		0 1 numarrays 1 sub			{			1 3 3 -1 roll add /index cvx  			c1 /get cvx /sub cvx /mul cvx			}for		/sub cvx		numarrays 1 add 1 /roll cvx		}for	numarrays [/pop cvx] cvx /repeat cvx	end}def/exec_tint_transform{	/TintProc [		/TintTransform cvx /setcolor cvx	] cvx bdf	MappedCSA setcolorspace_opt} bdf/devn_makecustomcolor{	2 dict begin	/names_index xdf	/Names xdf	1 1 1 1 Names names_index get findcmykcustomcolor	/devicen_tints AGMCORE_gget names_index get setcustomcolor	Names length {pop} repeat	end} bdf/setdevicencolorspace{ 	dup /AliasedColorants known {false}{true}ifelse 	current_spot_alias and {		7 dict begin		/names_index 0 def		dup /names_len exch /Names get length def		/new_names names_len array def		/new_LookupTables names_len array def		/alias_cnt 0 def		dup /Names get		{			dup map_alias {				exch pop				dup /ColorLookup known {					dup begin					new_LookupTables names_index ColorLookup put					end				}{					dup /Components known {						dup begin						new_LookupTables names_index Components put						end					}{						dup begin						new_LookupTables names_index [null null null null] put						end					} ifelse				} ifelse				new_names names_index 3 -1 roll /Name get put				/alias_cnt alias_cnt 1 add def 			}{				/name xdf								new_names names_index name put				dup /LookupTables known {					dup begin					new_LookupTables names_index LookupTables names_index get put					end				}{					dup begin					new_LookupTables names_index [null null null null] put					end				} ifelse			} ifelse			/names_index names_index 1 add def 		} forall		alias_cnt 0 gt {			/AliasedColorants true def			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def			0 1 names_len 1 sub {				/names_index xdf				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {					/AliasedColorants false def					exit				}				{					new_LookupTables names_index get 0 get null eq {						dup /Names get names_index get /name xdf						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq						or or or not {							/AliasedColorants false def							exit						} if					} if				} ifelse			} for			lut_entry_len 1 eq {				/AliasedColorants false def			} if			AliasedColorants {				dup begin				/Names new_names def				/LookupTables new_LookupTables def				/AliasedColorants true def				/NComponents lut_entry_len def				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def				currentdict /TTTablesIdx known not {					/TTTablesIdx -1 def				} if				end			} if		}if		end	} if	dup /devicen_colorspace_dict exch AGMCORE_gput	begin	currentdict /AliasedColorants known {		AliasedColorants	}{		false	} ifelse	dup not {		CSA map_csa	} if	/TintTransform load type /nulltype eq or {		/TintTransform [			0 1 Names length 1 sub				{				/TTTablesIdx TTTablesIdx 1 add def				dup LookupTables exch get dup 0 get null eq					{					1 index					Names exch get					dup (Cyan) eq						{						pop exch						LookupTables length exch sub						/index cvx						0 0 0						}						{						dup (Magenta) eq							{							pop exch							LookupTables length exch sub							/index cvx							0 /exch cvx 0 0							}							{							(Yellow) eq								{								exch								LookupTables length exch sub								/index cvx								0 0 3 -1 /roll cvx 0								}								{								exch								LookupTables length exch sub								/index cvx								0 0 0 4 -1 /roll cvx								} ifelse							} ifelse						} ifelse					5 -1 /roll cvx /astore cvx					}					{					dup length 1 sub					LookupTables length 4 -1 roll sub 1 add					/index cvx /mul cvx /round cvx /cvi cvx /get cvx					} ifelse					Names length TTTablesIdx add 1 add 1 /roll cvx				} for			Names length [/pop cvx] cvx /repeat cvx			NComponents Names length  			TintMethod /Subtractive eq  				{  				subtractive_blend  				}  				{  				additive_blend  				} ifelse		] cvx bdf	} if	AGMCORE_host_sep {		Names convert_to_process {			exec_tint_transform		}		{				currentdict /AliasedColorants known {				AliasedColorants not			}{				false			} ifelse			5 dict begin			/AvoidAliasedColorants xdf			/painted? false def			/names_index 0 def			/names_len Names length def			AvoidAliasedColorants {				/currentspotalias current_spot_alias def				false set_spot_alias			} if			Names {				AGMCORE_is_cmyk_sep {					dup (Cyan) eq AGMCORE_cyan_plate and exch					dup (Magenta) eq AGMCORE_magenta_plate and exch					dup (Yellow) eq AGMCORE_yellow_plate and exch					(Black) eq AGMCORE_black_plate and or or or {						/devicen_colorspace_dict AGMCORE_gget /TintProc [							Names names_index /devn_makecustomcolor cvx						] cvx ddf						/painted? true def					} if					painted? {exit} if				}{					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {					/devicen_colorspace_dict AGMCORE_gget /TintProc [						Names names_index /devn_makecustomcolor cvx					] cvx ddf					/painted? true def					exit					} if				} ifelse				/names_index names_index 1 add def			} forall			AvoidAliasedColorants {				currentspotalias set_spot_alias			} if			painted? {				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put			}{				/devicen_colorspace_dict AGMCORE_gget /TintProc [					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx 					0 0 0 0 /setcmykcolor cvx				] cvx ddf			} ifelse			end		} ifelse	}	{		AGMCORE_in_rip_sep {			Names convert_to_process not		}{			level3		} ifelse		{			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt			/TintProc level3 not AGMCORE_in_rip_sep and {				[					Names /length cvx [/pop cvx] cvx /repeat cvx				] cvx bdf			}{				{setcolor} bdf			} ifelse		}{			exec_tint_transform		} ifelse	} ifelse	set_crd	/AliasedColorants false def	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		currentdict /CSDBase known {			CSDBase /CSD get_res begin			currentdict /Names known {				currentdict devncs			}{				1 currentdict sepcs			} ifelse			AGMCORE_host_sep{				4 dict begin				/compCnt /Names where {pop Names length}{1}ifelse def				/NewLookup HiVal 1 add string def				0 1 HiVal {					/tableIndex xdf					Lookup dup type /stringtype eq {						compCnt tableIndex map_index					}{						exec					} ifelse					/Names where {						pop setdevicencolor					}{						setsepcolor					} ifelse					currentgray					tableIndex exch					HiVal mul cvi 					NewLookup 3 1 roll put				} for				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt				end			}{				level3				{					currentdict /Names known {						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt					}{						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt					} ifelse				}{				[/Indexed MappedCSA HiVal					[					currentdict /Names known {						Lookup dup type /stringtype eq							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}							{/exec cvx}ifelse							/TintTransform load /exec cvx					}{						Lookup dup type /stringtype eq							{/exch cvx /get cvx 255 /div cvx}							{/exec cvx}ifelse							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx					} ifelse					]cvx				]setcolorspace_opt				}ifelse			} ifelse			end			set_crd		}		{			CSA map_csa			AGMCORE_host_sep level2 not and{				0 0 0 0 setcmykcolor			}{				[/Indexed MappedCSA 				level2 not has_color not and{					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{						pop [/DeviceGray]					}if					HiVal GrayLookup				}{					HiVal 					currentdict/RangeArray known{						{ 							/indexed_colorspace_dict AGMCORE_gget begin							Lookup exch 							dup HiVal gt{								pop HiVal							}if							NComponents mul NComponents getinterval {} forall							NComponents 1 sub -1 0{								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range								NComponents 1 roll							}for							end						} bind					}{						Lookup					}ifelse				}ifelse				] setcolorspace_opt				set_crd			}ifelse		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep {		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 			begin			CSDBase /CSD get_res begin			currentdict /Names known{				map_indexed_devn				devn			}			{				Lookup 1 3 -1 roll map_index				sep			}ifelse			end			end		}{			/Lookup get 4 3 -1 roll map_index setcmykcolor		} ifelse	}{		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin			map_indexed_devn			devn			end		}		{			setcolor		} ifelse	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave		dup clonedict begin		1 setgray		/Decode [0 1] def		/DataSource <FF> def		/MultipleDataSources false def		/BitsPerComponent 8 def		currentdict end		systemdict /image get exec		grestore		}if	consumeimagedata}def/add_res{	dup /CSD eq {		pop 		//Adobe_AGM_Core begin		/AGMCORE_CSD_cache load 3 1 roll put		end	}{		defineresource pop	} ifelse}def/del_res{	{		aload pop exch		dup /CSD eq {			pop 			{				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef			}forall		}{			exch			{				1 index undefineresource			}forall			pop		} ifelse	} forall}def/get_res{	dup /CSD eq {		pop		dup type dup /nametype eq exch /stringtype eq or {			AGMCORE_CSD_cache exch get		} if	}{		findresource	} ifelse}def/get_csa_by_name{	dup type dup /nametype eq exch /stringtype eq or{		/CSA get_res	} if}def/pattern_buf_init{	/count get 0 0 put} def/pattern_buf_next{	dup /count get dup 0 get	dup 3 1 roll	1 add 0 xpt	get				} def/cachepattern_compress{	5 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	/string_size 16000 def	/readbuffer string_size string def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	/LZWFilter 	{		exch		dup length 0 eq {			pop		}{			patarray dup length 1 sub 3 -1 roll put		} ifelse		{string_size}{0}ifelse string	} /LZWEncode filter def	{ 				ReadFilter readbuffer readstring		exch LZWFilter exch writestring		not {exit} if	} loop	LZWFilter closefile	patarray					end}def/cachepattern{	2 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	{		ReadFilter 16000 string readstring exch		patarray dup length 1 sub 3 -1 roll put		not {exit} if	} loop	patarray dup dup length 1 sub () put						end	}def/wrap_paintproc{   statusdict /currentfilenameextend known{	clonedict	begin	/OldPaintProc /PaintProc load def	/PaintProc	{		mark exch		dup /OldPaintProc get stopped		{closefile restore end} if		cleartomark	}  def	end  } {pop} ifelse} def/make_pattern{	exch clonedict exch	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix			  1 index begin		BBox 0 get XStep div cvi XStep mul /xshift exch neg def		BBox 1 get YStep div cvi YStep mul /yshift exch neg def		BBox 0 get xshift add		BBox 1 get yshift add		BBox 2 get xshift add		BBox 3 get yshift add		4 array astore		/BBox exch def		[ xshift yshift /translate load null /exec load ] dup		3 /PaintProc load put cvx /PaintProc exch def		end	1 index dup /ID get exch /Pattern add_res	gsave 0 setgray	makepattern	grestore}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{	currentcolorrendering/RenderingIntent known{		currentcolorrendering/RenderingIntent get	}{null}ifelse	Intent ne {		Intent /ColorRendering {findresource} stopped		{			pop pop systemdict /findcolorrendering known			{				Intent findcolorrendering pop				/ColorRendering findresource 				true			}			{false} ifelse		}		{true} ifelse		{			dup begin			currentdict /TransformPQR known {				currentdict /TransformPQR get aload pop				3 {{} eq 3 1 roll} repeat or or			}			{true} ifelse			currentdict /MatrixPQR known {				currentdict /MatrixPQR get aload pop				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq				and and and and and and and and			}			{true} ifelse			end			or			{				clonedict begin				/TransformPQR [					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind				] def				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def				currentdict end			} if			setcolorrendering_opt		} if			}if} def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict /ColorRendering known{			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse		currentcolorspace dup type /arraytype eq			{0 get}if		/DeviceRGB eq			{			currentdict/UCR known				{/UCR}{/AGMCORE_currentucr}ifelse			load setundercolorremoval			currentdict/BG known 				{/BG}{/AGMCORE_currentbg}ifelse			load setblackgeneration			}if	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		clonedict		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cpaint_gcomp{	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/set_spot_alias_ary{	dup inherit_aliases	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf}def/set_spot_normalization_ary{	dup inherit_aliases	dup length	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if	array	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf	/AGMCORE_SpotAliasAry where{		pop		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval		AGMCORE_SpotAliasAry length	}{0} ifelse	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval	true set_spot_alias}def/inherit_aliases{	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall}def/set_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry2 where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry2{				dup/Name get AGMCORE_name eq{					/CSD get /CSD get_res					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias	/AGMCORE_&setcustomcolor AGMCORE_key_known not {		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput	//Adobe_AGM_Core begin	/setcustomcolor	{		currentdict/TintProc known currentdict/CSA known and 3 1 roll		//Adobe_AGM_Core begin		dup /customcolor_tint exch AGMCORE_gput		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not		current_spot_alias and{1 index 4 get map_alias}{false}ifelse		{			false set_spot_alias			4 -1 roll{				exch pop /sep_tint AGMCORE_gget exch			}if			mark 3 1 roll			setsepcolorspace			counttomark 0 ne{				setsepcolor			}if			pop			pop			true set_spot_alias		}{			AGMCORE_&setcustomcolor			pop		}ifelse		end	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	//Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		initializepage		/initializepage{}def		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if	/mysetup where {		/mysetup [1 0 0 1 0 0] put	}if	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put	level2		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if}def/driver_check_media_override{	/PrepsDict where		{pop}		{		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq			{			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and			}if			{			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix			}if		}ifelse}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defend/set_def_ht{	AGMCORE_def_ht sethalftone} defendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.25 0%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.25 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }ifuserdict /Adobe_CoolType_Core 60 dict dup begin put/Adobe_CoolType_Version 2.25 def/Level2?	systemdict /languagelevel known dup		{ pop systemdict /languagelevel get 2 ge }	if defLevel2? not	{	/currentglobal false def	/setglobal /pop load def	/gcheck { pop false } bind def	/currentpacking false def	/setpacking /pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict /Adobe_CoolType_Data 2 copy known not	 { 2 copy 10 dict put }ifget	 begin	 /@opStackCountByLevel 32 dict def	 /@opStackLevel 0 def	 /@dictStackCountByLevel 32 dict def	 /@dictStackLevel 0 def	 endsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup /args			7 index			5 add array put			put get			}			{			get dup /args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch /args exch put				}				{ pop }			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{ pop count }			if			dup /argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{ pop }			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	} bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{ { pop } repeat }				{ pop }			ifelse			args 0 argCount getinterval {} forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{ { end } repeat }		{ pop }	ifelse	} bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	} bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	} bind def/@ReRaise	{	cvx $error /errorname get errordict exch get exec	stop	} bind def/@Stopped	{	0 @#Stopped	} bind def/@#Stopped	{	@_SaveStackLevels	stopped		{ @_RestoreStackLevels true }		{ @_PopStackLevels false }	ifelse	} bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	} bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					 { (*) { pop stop } 128 string /Category resourceforall }				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup					 {						  /@shouldNotDisappearDictValue known								{										  {												end												currentdict 1 index eq													 { pop exit }												if										  }									 loop								}						  if					 }				if				end		}		{ false }	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{ /steveamerige /Category resourcestatus }		stopped			{ cleartomark true }			{ cleartomark currentglobal not }		ifelse		}		{ false }	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec				{ cleartomark false }				{ { 3 2 roll pop true } { cleartomark false } ifelse }			ifelse			end		} bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad /ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup /CMap CTHasResourceStatusBug						{ CTResourceStatus }						{ resourcestatus }					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup /CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{ exit }								{ stop }							ifelse							}						ifelse						}						{ pop }					ifelse					}				128 string /CMap resourceforall				}			stopped				{ cleartomark }			stopped pop			setglobal			}		if		}	if	} bind def/doc_setup	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mov /moveto load def		/nfnt /newencodedfont load def		/mfnt /makefont load def		/sfnt /setfont load def		/ufnt /undefinefont load def		/chp /charpath load def		/awsh /awidthshow load def		/wsh /widthshow load def		/ash /ashow load def		/sh /show load def		end		currentglobal false setglobal	  userdict /Adobe_CoolType_Data 2 copy known not		  { 2 copy 10 dict put }		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	} bind def/doc_trailer	{	currentdict Adobe_CoolType_Core eq		{ end }	if	} bind def/page_setup	{	Adobe_CoolType_Core begin	} bind def/page_trailer	{	end	} bind def/unload	{	systemdict /languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{ undef }				{ pop pop }			ifelse			}		if		}	if	} bind def/ndf	{	1 index where		{ pop pop pop }		{ dup xcheck { bind } if def }	ifelse	} def/findfont systemdict	begin	userdict		begin		/globaldict where { /globaldict get begin } if			dup where pop exch get		/globaldict where { pop end } if		end	endAdobe_CoolType_Core_Defined	{ /systemfindfont exch def }	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{ pop } ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq { 0 } { dup length } ifelse	2 index length add 1 add dict		begin		exch			{			1 index /FID eq				{ pop pop }				{ def }			ifelse			}		forall		dup null eq			{ pop }			{ { def } forall }		ifelse		currentdict		end	exch setglobal	} bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	} bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index  known			{ SharedFontDirectory 3 index get /FontReferenced known }			{ false }		ifelse		}		{		FontDirectory 3 index known			{ FontDirectory 3 index get /FontReferenced known }			{			SharedFontDirectory 3 index known				{ SharedFontDirectory 3 index get /FontReferenced known }				{ false }			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont /FontReferenced get		2 index dup type /nametype eq			{findfont}		if ne			{ pop false }		if		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{ 2 copy get 3 index 3 1 roll put }		for		pop pop pop		}		{		dup type /nametype eq		  { findfont }	  if		dup dup maxlength 2 add dict			begin			exch				{				1 index /FID ne					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type /stringtype eq { cvn } if def dup			currentdict			end		definefont def		}	ifelse	} bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type /dicttype ne			{ 0 dict }		if		currentdict /$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{ def } forall					{ def } forall					currentdict					dup /$Init known						{ dup /$Init get exec }					if					end				/$Strategy exch def				}				{ pop pop pop }			ifelse			}			{ pop pop }		ifelse		end	} bind def/scff	{	$SubstituteFont		begin		dup type /stringtype eq			{ dup length exch }			{ null }		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{ $sname }			ifelse def		end		{ findfont }	@Stopped		{		dup length 8 add string exch		1 index 0 (BadFont:) putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{ findfont }		@Stopped			{ pop /Courier findfont }		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	} bind def/isWidthsOnlyFont	{	dup /WidthsOnly known		{ pop pop true }		{		dup /FDepVector known			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }			{			dup /FDArray known				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }				{ pop }			ifelse			}		ifelse		}	ifelse	} bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 4 index def		/$doSmartSub false def		end	3 index	currentglobal false setglobal exch	/CompatibleFonts /ProcSet resourcestatus		{		pop pop		/CompatibleFonts /ProcSet findresource			begin			dup /CompatibleFont currentexception			1 index /CompatibleFont true setexception			1 index /Font resourcestatus				{				pop pop				3 2 roll setglobal				end				exch				dup findfont				/CompatibleFonts /ProcSet findresource					begin					3 1 roll exch /CompatibleFont exch setexception					end				}				{				3 2 roll setglobal				1 index exch /CompatibleFont exch setexception				end				findfont				$SubstituteFont /$substituteFound true put				}			ifelse		}		{ exch setglobal findfont }	ifelse	$SubstituteFont		begin		$substituteFound			{		 false		 (%%[Using embedded font ) print		 5 index ?str1 cvs print		 ( to avoid the font substitution problem noted earlier.]%%\n) print		 }			{			dup /FontName known				{				dup /FontName get $fontname eq				1 index /DistillerFauxFont known not and				/currentdistillerparams where					{ pop false 2 index isWidthsOnlyFont not and }				if				}				{ false }			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		exch pop exch pop exch		2 dict dup /Found 3 index put		exch findfont exch		}		{		exch exec		exch dup findfont		dup /FontType get 3 eq	  {		  exch ?str1 cvs		  dup length 1 sub		  -1 0		{			  exch dup 2 index get 42 eq			{				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop				 exit			  }			  {exch pop} ifelse		  }for		}		{		 exch pop	  } ifelse		2 dict dup /Downloaded 6 5 roll put		}	ifelse	dup /FontName 4 index put copyfont definefont pop	} bind def/?str2 256 string def/?add	{	1 index type /integertype eq		{ exch true 4 2 }		{ false 3 1 }	ifelse	roll	1 index findfont	dup /Widths known		{		Adobe_CoolType_Data /AddWidths? true put		gsave dup 1000 scalefont setfont		}	if	/Downloaded known		{		exec		exch			{			exch ?str2 cvs exch			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length			?str1 1 index 1 add 3 index putinterval			exch length 1 add 1 index add			?str1 2 index (*) putinterval			?str1 0 2 index getinterval cvn findfont 			?str1 3 index (+) putinterval			2 dict dup /FontName ?str1 0 6 index getinterval cvn put			dup /Downloaded Downloaded put end copyfont			dup /FontName get exch definefont pop pop pop			}			{			pop			}		ifelse		}		{		pop		exch			{			findfont			dup /Found get			dup length exch ?str1 cvs pop			?str1 1 index (+) putinterval			?str1 1 index 1 add 4 index ?str2 cvs putinterval			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn			1 dict exch 1 index exch /FontName exch put copyfont			dup /FontName get exch definefont pop			}			{			pop			}		ifelse		}	ifelse	Adobe_CoolType_Data /AddWidths? get		{ grestore Adobe_CoolType_Data /AddWidths? false put }	if	} bind def/?sh	{	currentfont /Downloaded known { exch } if pop	} bind def/?chp	{	currentfont /Downloaded known { pop } { false chp } ifelse	} bind def/?mv 	{	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse	} bind defsetpackinguserdict /$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{ get }			{ pop pop { pop /Courier } bind }		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams /CannotEmbedFontPolicy 2 copy known			{ get /Error eq }			{ pop pop false }		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup /WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type /stringtype eq { cvn } if def								/FontType 3 def								/FontMatrix [ .001 0 0 .001 0 0 ] def								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def								/FontBBox [ 0 0 0 0 ] def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth /y exch def /x exch def											x y setcharwidth											$SubstituteFont /$Strategy get /$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									} bind def								currentdict								end							exch setglobal							} bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup /WMode known										{ dup /WMode get }										{ 0 }									ifelse									/$WMode exch def									$fontname exch									dup /FontName known										{										dup /FontName get										dup type /stringtype eq { cvn } if										}										{ /unnamedfont }									ifelse									exch									Adobe_CoolType_Data /InVMDeepCopiedFonts get									1 index /FontName get known										{										pop										Adobe_CoolType_Data /InVMDeepCopiedFonts get										1 index get										null copyfont										}										{ $deepcopyfont }									ifelse									exch 1 index exch /FontBasedOn exch put									dup /FontName $fontname dup type /stringtype eq { cvn } if put									definefont									Adobe_CoolType_Data /InVMDeepCopiedFonts get										begin										dup /FontBasedOn get 1 index def										end									} bind def								/$Underprint									{									gsave									x abs y abs gt										{ /y 1000 def }										{ /x -1000 def 500 120 translate }									ifelse									Level2?										{										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]										setcolorspace										}										{ 0 setgray }									ifelse									10 setlinewidth									x .8 mul									[ 7 3 ]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{ .2 setcolor }											{ .8 setgray }										ifelse										fill grestore										stroke										}									forall									pop									grestore									} bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict /FontName known											{											FontName											dup type /stringtype eq { cvn } if											}											{ /unnamedfont }										ifelse										def										/FontName $fontname dup type /stringtype eq { cvn } if def										/currentdistillerparams where											{ pop }											{											/FontInfo currentdict /FontInfo known												{ FontInfo null copyfont }												{ 2 dict }											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									} bind def								end def						/$None							1 dict dup								begin								/$BuildFont {} bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type /stringtype eq { cvn } if						dup /$fontname exch def						$sname null eq							{ $str cvs dup length $slen sub $slen getinterval }							{ pop $sname }						ifelse						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont /$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{ /$match exch def exit }							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont /$dstack get								{								exch									{									1 index eq										{ pop false }										{ true }									ifelse									}									{ begin false }								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{ $match (fonts/) anchorsearch pop pop cvn }							{ /Courier }						ifelse						} bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1  [ /Ryumin-Light /HeiseiMin-W3										  /GothicBBB-Medium /HeiseiKakuGo-W5										  /HeiseiMaruGo-W4 /Jun101-Light ] def							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def							/GB1	  [ /STSong-Light /STHeiti-Regular ] def							/CNS1	 [ /MKai-Medium /MHei-Medium ] def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup /FontType get 0 eq							{							1 dict dup /FontName /copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup /FontName /copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{ $Strategies /$Type3Underprint get exec }						ifelse						} bind def					/$buildfontname						{						dup /CIDFont findresource /CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index (-) putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy (-) putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }							{ pop pop pop pop pop }						ifelse						length						$str 1 index (-) putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						} bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{ get }								{ pop pop [] }							ifelse							}							{ pop pop [] }						ifelse						false exch							{							dup /CIDFont resourcestatus								{								pop pop								save								1 index /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get }									{ false }								ifelse								exch pop								exch restore									{ pop }									{ exch pop true exit }								ifelse								}								{ pop }							ifelse							}						forall							{ $str cvs $buildfontname }							{							false (*)								{								save exch								dup /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get not }									{ true }								ifelse								exch /CIDSystemInfo get								dup /Registry get Registry eq								exch /Ordering get Ordering eq and and									{ exch restore exch pop true exit }									{ pop restore }								ifelse								}							$str /CIDFont resourceforall								{ $buildfontname }								{ $fontname $findfontByEnum }							ifelse							}						ifelse						} bind def					end				end				currentdict /$error known currentdict /languagelevel known and dup					{ pop $error /SubstituteFont known }				if				dup					{ $error }					{ Adobe_CoolType_Core }				ifelse				begin					{					/SubstituteFont					/CMap /Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{ dup $str cvs dup length $slen sub $slen getinterval cvn }									{ $sname }								ifelse								Adobe_CoolType_Data /InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{ exch pop true exit }												{ pop }											ifelse											}											{											FontDirectory 1 index known												{ exch pop true exit }												{												GlobalFontDirectory 1 index known													{ exch pop true exit }													{ pop }												ifelse												}											ifelse											}										ifelse										}									forall									}									{ pop pop false }								ifelse									{									exch pop exch pop									}									{									dup /CMap resourcestatus										{										pop pop										dup /$cmapname exch def										/CMap findresource /CIDSystemInfo get { def } forall										$findfontByROS										}										{										128 string cvs										dup (-) search											{											3 1 roll search												{												3 1 roll pop													{ dup cvi }												stopped													{ pop pop pop pop pop $findfontByEnum }													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup /CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup /$cmapname exch def															/CMap findresource /CIDSystemInfo get { def } forall															$findfontByROS															true exit															}															{ pop }														ifelse														}													for													dup type /booleantype eq														{ pop }														{ pop pop pop $findfontByEnum }													ifelse													}												ifelse												}												{ pop pop pop $findfontByEnum }											ifelse											}											{ pop pop $findfontByEnum }										ifelse										}									ifelse									}								ifelse								}								{ //SubstituteFont exec }							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{ $findfontByEnum }								{ //SubstituteFont exec }							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core /scfindfont /systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup /FontName known								{ dup /FontName get dup 3 index ne }								{ /noname true }							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def /$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{ 1 index /FID eq { pop pop } { def } ifelse }										forall										currentdict										end									definefont									dup /FontName known { dup /FontName get } { null } ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using ) print										dup /FontName known											{ dup /FontName get } { (unspecified font) }										ifelse										$str cvs print (.\n) print										}									if									}									{ exch pop }								ifelse								}								{ exch pop }							ifelse							end						} bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core /findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type /stringtype ne { $str cvs } if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{ dup $inVMIndex $AddInVMFont }						if						$doSmartSub							{							currentdict /$Strategy known								{ $Strategy /$BuildFont get exec }							if							}						if						}					if					end				} bind put			}		if		}	if	end/$AddInVMFont	{	exch /FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data /InVMFontsByCMap get exch		$DictAdd		}		{ pop pop pop }	ifelse	} bind def/$DictAdd	{	2 copy known not		{ 2 copy 4 index length dict put }	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get { forall } def				2 copy currentdict put				end			}			{ pop }		ifelse		}	if	get		begin			{ def }		forall		end	} bind defendend%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.%%Version: 1.21 0systemdict /languagelevel known dup	{ currentglobal false setglobal }	{ false }ifelseexchuserdict /Adobe_CoolType_Utility 2 copy known	{ 2 copy get dup maxlength 27 add dict copy }	{ 27 dict }ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch /eCCRun known not			ct_Level2? and or defct_Level2?	{ globaldict begin currentglobal true setglobal }if	/ct_AddStdCIDMap		ct_Level2?			{ {				mark				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put					 {					 ((Hex) 57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec					 }				stopped					 {					 cleartomark					 Adobe_CoolType_Utility /@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						  {						  2 copy get 3 index eq								{ 1 index length exch sub 1 sub { end } repeat exit }								{ pop }						  ifelse						  }					 for					 pop pop					 Adobe_CoolType_Utility /@eexecStartData get eexec					 }					 { cleartomark }				ifelse			} }			{ {				Adobe_CoolType_Utility /@eexecStartData get eexec			} }		ifelse bind defuserdict /cid_extensions knowndup { cid_extensions /cid_UpdateDB known and } if	 {	 cid_extensions	 begin	 /cid_GetCIDSystemInfo		 {		 1 index type /stringtype eq			 { exch cvn exch }		 if		 cid_extensions			 begin			 dup load 2 index known				 {				 2 copy				 cid_GetStatusInfo				 dup null ne					 {					 1 index load					 3 index get					 dup null eq						  { pop pop cid_UpdateDB }						  {						  exch						  1 index /Created get eq							  { exch pop exch pop }							  { pop cid_UpdateDB }						  ifelse						  }					 ifelse					 }					 { pop cid_UpdateDB }				 ifelse				 }				 { cid_UpdateDB }			 ifelse			 end		 } bind def	 end	 }ifct_Level2?	{ end setglobal }if	/ct_UseNativeCapability?  systemdict /composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring () def		/usewidths? true def		end def	ct_Level2? { setglobal } { pop } ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict /languagelevel known				{ pop /CIDFont findresource /GlyphDirectory get }				{				1 index /CIDFont findresource /GlyphDirectory				get dup type /dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			} def		/+			{			systemdict /languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{ 1 dict begin }			ifelse			/$ exch def			systemdict /languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			? { $ begin } if			} def		/? { $ type /dicttype eq } def		/| {			userdict /Adobe_CoolType_Data known				{			Adobe_CoolType_Data /AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					  begin						AddWidths?								{								Adobe_CoolType_Data /CC 3 index put								? { def } { $ 3 1 roll put } ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont /Widths get exch CC exch put								}								{ ? { def } { $ 3 1 roll put } ifelse }							ifelse					end				end				}				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse				}				{ ? { def } { $ 3 1 roll put } ifelse }			ifelse			} def		/!			{			? { end } if			systemdict /languagelevel known				{ gvm setglobal }			if			end			} def		/: { string currentfile exch readstring pop } executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx [.001 0 0 .001 0 0] def		/ct_1000Mtx [1000 0 0 1000 0 0] def		/ct_raise {exch cvx exch errordict exch get exec stop} bind def		/ct_reraise			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print					errordict exch get exec stop			} bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			} bind def		/ct_GetInterval			{			Adobe_CoolType_Utility /ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{ dup string /dst_string exch def }				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex  get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string  dst_index 2 index putinterval						length dst_index add /dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string  dst_index 2 index putinterval						pop dup dst_index add /dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							  { arrayIndex get }							  {							  pop							  exit							  }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			} bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{ /unknowninstancename /Category resourcestatus }			stopped				{ cleartomark setglobal true }				{ cleartomark currentglobal not exch setglobal }			ifelse				{					{					mark 3 1 roll /Category findresource						begin						ct_Vars /vm currentglobal put						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec							{ cleartomark false }							{ { 3 2 roll pop true } { cleartomark false } ifelse }						ifelse						ct_Vars /vm get setglobal						end					}				}				{ { resourcestatus } }			ifelse bind def			/CIDFont /Category ct_resourcestatus				{ pop pop }				{				currentglobal  true setglobal				/Generic /Category findresource				dup length dict copy				dup /InstanceType /dicttype put				/CIDFont exch /Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit /ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				  /Registry (Adobe) def				  /Ordering (Identity) def				  /Supplement 0 def				end def				/CMapName /Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000> <FFFF>				endcodespacerange				1 begincidrange				<0000> <FFFF> 0				endcidrange				endcmap				CMapName currentdict /CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont  10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{ pop pop /defineresource /undefined ct_raise }				ifelse				} bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{ get 3 1 roll pop pop}						{ pop pop /findresource /undefinedresource ct_raise }					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/ct_resourcestatus /resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup (Binary) eq						{						pop						null						currentfile						ct_Level2?							{								{ cid_BYTE_COUNT () /SubFileDecode filter }							stopped								{ pop pop pop }							if							}						if						/readstring load						exit						}					if					dup (Hex) eq						{						pop						currentfile						ct_Level2?							{								{ null exch /ASCIIHexDecode filter /readstring }							stopped								{ pop exch pop (>) exch /readhexstring }							if							}							{ (>) exch /readhexstring }						ifelse						load						exit						}					if					/StartData /typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch /GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop /readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				} bind def			/StartData				{				mark					{					currentdict					dup /FDArray get 0 get /FontMatrix get					0 get 0.001 eq						{						dup /CDevProc known not							{							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known								{ get }								{								pop pop								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }								}							ifelse							def							}						if						}						{						 /CDevProc							 {							 pop pop pop pop pop							 0							 1 cid_temp /cid_CIDFONT get							 /FDArray get 0 get							 /FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							 } def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup /cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup /SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup /SubrMapOffset undef										dup /SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{ pop }								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict /CIDFont defineresource pop					end end					}				stopped					{ cleartomark /StartData ct_reraise }				if				} bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit /ProcSet ct_resourcestatus				{ true }				{ /CIDInitC /ProcSet ct_resourcestatus }			ifelse				{				pop pop				/CIDInit /ProcSet findresource				ct_UseNativeCapability?					{ pop null }					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }				ifelse				}				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }			ifelse			ct_Vars exch /ct_oldCIDInit exch put			} bind def		/ct_restoreCIDInit			{			ct_Vars /ct_oldCIDInit get dup null ne				{ /CIDInit exch /ProcSet defineresource pop }				{ pop }			ifelse			} bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility /ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{ pop 0 }						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{ get }								{ pop pop nullstring }							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{ 0 FDBytes ct_cvnsi }									{ pop 0 }								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{ /charstring nullstring def exit }								if								/cid 0 def								}							ifelse							}						loop			} def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			} def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont /Widths get cid					2 copy known						{ get exch pop aload pop }						{ pop pop stringwidth }					ifelse					}					{ stringwidth }				ifelse				setcharwidth				0 0 moveto				}			ifelse			} def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{ get }				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup /FontMatrix 2 copy known						{ get }						{ pop pop ct_defaultFontMtx }					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont /Widths get def					/CharStrings 1 dict dup /.notdef						<d841272cf18f54fc13> dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup /CharStrings get 1 index /Encoding get			ct_dfCharCode get charstring put			rootfont /WMode 2 copy known				{ get }				{ pop pop 0 }			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ ct_str1 show }			ifelse			} def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ ct_1000Mtx matrix concatmatrix concat }				{ pop }			ifelse			/Private get			Adobe_CoolType_Utility /ct_Level2? get not				{				ct_dfDict /Private				3 -1 roll					{ put }				1183615869 internaldict /superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility /ct_Level2? get				{ 1 index }				{ 3 index /Private get mark 6 1 roll }			ifelse			dup /RunInt known				{ /RunInt get }				{ pop /CCRun }			ifelse			get exec			Adobe_CoolType_Utility /ct_Level2? get not				{ cleartomark }			if			} bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility /ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{ stop }			if			end			end			end			end			} bind def		/BaseFontNameStr (BF00) def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/BuildChar /ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString /ct_Type3ShowCharString load def				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup /lenIV 4 put def				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def				/PaintType 0 def				/ct_ShowCharString /ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{ exit }				if				}			for			exch pop exch pop			} bind def		/ct_makeocf			{			15 dict				begin				exch /WMode exch def				exch /FontName exch def				/FontType 0 def				/FMapType 2 def			dup /FontMatrix known				{ dup /FontMatrix get /FontMatrix exch def }				{ /FontMatrix matrix def }			ifelse				/bfCount 1 index /CIDCount get 256 idiv 1 add					dup 256 gt { pop 256} if def				/Encoding					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for					bfCount 1 255 { 2 copy bfCount put pop } for					def				/FDepVector bfCount dup 256 lt { 1 add } if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont /FontBBox known						{ CIDFont /FontBBox get /FontBBox exch def }					if					CIDFont /CDevProc known						{ CIDFont /CDevProc get /CDevProc exch def }					if					currentdict					end				BaseFontNameStr 3 (0) putinterval				0 1 bfCount dup 256 eq { 1 sub } if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup /CIDFirstByte exch 256 mul def						FontType 3 eq							{ /ct_FDDict 2 dict def }						if						currentdict						end					1 index  16					BaseFontNameStr  2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont /Widths get						begin						exch /CIDFont get /GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{ exch pop }			ifelse			} bind def		/ct_ComposeFont			{			ct_UseNativeCapability?				{				2 index /CMap ct_resourcestatus					{ pop pop exch pop }					{					/CIDInit /ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch /WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry (Adobe) def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-) search									{									pop pop									(-) search										{										dup length string copy										exch pop exch pop										}										{ pop (Identity)}									ifelse									}									{ pop  (Identity)  }								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000> <FFFF>							endcodespacerange							1 begincidrange							<0000> <FFFF> 0							endcidrange							endcmap							CMapName currentdict /CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index /CMap ct_resourcestatus					{ pop pop }					{					/CIDInit /ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry (Adobe) def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-) search							{							pop pop							(-) search								{ dup length string copy exch pop exch pop }								{ pop (Identity) }							ifelse							}							{ pop (Identity) }						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000> <FFFF>					endcodespacerange					1 begincidrange					<0000> <FFFF> 0					endcidrange					endcmap					CMapName currentdict /CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		currentdict readonly pop		end	end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict /ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{  version  cvi  2015  ge} bind def/AllocGlyphStorage{  Is2015?  {			pop  }   { 		{string} forall  } ifelse} bind def/Type42DictBegin{	25 dict begin  /FontName exch def  /CharStrings 256 dict 	begin		  /.notdef 0 def		  currentdict 	end def  /Encoding exch def  /PaintType 0 def  /FontType 42 def  /FontMatrix [1 0 0 1 0 0] def  4 array  astore cvx /FontBBox exch def  /sfnts} bind def/Type42DictEnd  {	 currentdict dup /FontName get exch definefont end	ct_T42Dict exch	dup /FontName get exch put} bind def/RD {string currentfile exch readstring pop} executeonly def/PrepFor2015{	Is2015?	{		  		 /GlyphDirectory 		 16		 dict def		 sfnts 0 get		 dup		 2 index		 (glyx)		 putinterval		 2 index  		 (locx)		 putinterval		 pop		 pop	}	{		 pop		 pop	} ifelse			} bind def/AddT42Char{	Is2015?	{		/GlyphDirectory get 		begin		def		end		pop		pop	}	{		/sfnts get		4 index		get		3 index	  2 index		putinterval		pop		pop		pop		pop	} ifelse} bind def/T0AddT42Mtx2{	/CIDFont findresource /Metrics2 get begin def end}bind defend%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 75 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd/AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/AGMIMG_maskSource nd/AGMIMG_flushfilters nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/devnimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/devnimg /devn_imageormask ldf	/idximg /indexed_imageormask ldf	/_ctype 7 def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/AGMIMG_flushfilters{	dup type /arraytype ne		{1 array astore}if	aload length		{		dup type /filetype eq			{			dup status 1 index currentfile ne and				{dup flushfile closefile}				{pop}			ifelse			}{pop}ifelse		} repeat}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				use_mask {					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse				}{					AGMIMG_&image				}ifelse			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if		cleartomark restore	end}def/overprint_plate{	currentoverprint {		0 get dup type /nametype eq {			dup /DeviceGray eq{				pop AGMCORE_black_plate not			}{				/DeviceCMYK eq{					AGMCORE_is_cmyk_sep not				}if			}ifelse		}{			false exch			{				 AGMOHS_sepink eq or			} forall			not		} ifelse	}{		pop false	}ifelse}def/process_mask_L3{	dup begin	/ImageType 1 def	end	4 dict begin		/DataDict exch def		/ImageType 3 def		/InterleaveType 3 def		/MaskDict 9 dict begin			/ImageType 1 def			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def			/ImageMatrix [Width 0 0 Height neg 0 Height] def			/NComponents 1 def			/BitsPerComponent 1 def			/Decode [0 1] def			/DataSource AGMIMG_maskSource def		currentdict end def	currentdict end}def/use_mask{	dup type /dicttype eq	{		dup /Mask known	{			dup /Mask get {				level3				{true}				{					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse					3 -1 roll and				} ifelse			}			{false} ifelse		}		{false} ifelse	}	{false} ifelse}def/make_line_source{	begin	MultipleDataSources {		[		Decode length 2 div cvi {Width string} repeat		]	}{		Width Decode length 2 div mul cvi string	}ifelse	end}def/datasource_to_str{	exch dup type	dup /filetype eq {		pop exch readstring	}{		/arraytype eq {			exec exch copy		}{			pop		}ifelse	}ifelse	pop}def/masked_image_simulation{	3 dict begin	dup make_line_source /line_source xdf	/mask_source AGMIMG_maskSource /LZWDecode filter def	dup /Width get 8 div ceiling cvi string /mask_str xdf	begin	gsave	0 1 translate 1 -1 Height div scale	1 1 Height {		pop		gsave		MultipleDataSources {			0 1 DataSource length 1 sub {				dup DataSource exch get				exch line_source exch get				datasource_to_str			} for		}{			DataSource line_source datasource_to_str		} ifelse		<<			/PatternType 1			/PaintProc [				/pop cvx				<<					/ImageType 1					/Width Width					/Height 1					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix					/MultipleDataSources MultipleDataSources					/DataSource line_source					/BitsPerComponent BitsPerComponent					/Decode Decode				>>				/image cvx			] cvx			/BBox [0 0 Width 1]			/XStep Width			/YStep 1			/PaintType 1			/TilingType 2		>>		matrix makepattern set_pattern		<<			/ImageType 1			/Width Width			/Height 1			/ImageMatrix Width 1 matrix scale			/MultipleDataSources false			/DataSource mask_source mask_str readstring pop			/BitsPerComponent 1			/Decode [0 1]		>>		imagemask		grestore		0 1 translate	} for	grestore	end	end}def/imageormask{	begin		SkipImageProc {			currentdict consumeimagedata		}		{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq DeviceN_PS2 not and {					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					use_mask {						level3 {process_mask_L3 image}{masked_image_simulation}ifelse					}{						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 						{							Names convert_to_process not {								2 dict begin								/imageDict xdf								/names_index 0 def								gsave								imageDict write_image_file {									Names {										dup (None) ne {											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace											Operator imageDict read_image_file											names_index 0 eq {true setoverprint} if											/names_index names_index 1 add def										}{											pop										} ifelse									} forall									close_image_file								} if								grestore								end							}{								Operator /imagemask eq {									imagemask								}{									image								} ifelse							} ifelse						}{							Operator /imagemask eq {								imagemask							}{								image							} ifelse						} ifelse					}ifelse				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					/Adobe_AGM_OnHost_Seps where {						pop imagemask					}{						currentgray 1 ne{							currentdict imageormask_sys						}{							currentoverprint not{								1 AGMCORE_&setgray								currentdict imageormask_sys							}{								currentdict ignoreimagedata							}ifelse				 								}ifelse					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								AGMCORE_is_cmyk_sep{									MultipleDataSources{										/DataSource [											DataSource 0 get /exec cvx											DataSource 1 get /exec cvx											DataSource 2 get /exec cvx											DataSource 3 get /exec cvx											/AGMCORE_get_ink_data cvx										] cvx def									}{										/DataSource 										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 										/DataSource load										filter_cmyk 0 () /SubFileDecode filter def									}ifelse									/Decode [ Decode 0 get Decode 1 get ] def									/MultipleDataSources false def									/NComponents 1 def									/Operator /image def									invert_image_samples						 			1 AGMCORE_&setgray									currentdict imageormask_sys								}{									currentoverprint not Operator/imagemask eq and{  			 							1 AGMCORE_&setgray  			 							currentdict imageormask_sys  			 						}{  			 							currentdict ignoreimagedata  			 						}ifelse								}ifelse							}{									MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not Operator/imagemask ne and{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								use_mask {									level3 {process_mask_L3 image}{masked_image_simulation}ifelse								}{									image								}ifelse							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentcolorspace overprint_plate not{									knockout_unitsq								}if							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	CSA map_csa	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentdict/ImageMatrix get concat						knockout_unitsq					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{ 									Name AGMCORE_IsSeparationAProcessColor  									{ 										Operator /imagemask eq{ 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor 										}{											invert_image_samples 										}ifelse	 								}{	 									[ /Separation Name [/DeviceGray]	 									{ 	 										sep_colorspace_proc AGMCORE_get_ink_data											1 exch sub	 									} bind										] AGMCORE_&setcolorspace										/sep_tint AGMCORE_gget AGMCORE_&setcolor 									}ifelse 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{ 							currentoverprint not Name (All) eq or Operator/imagemask eq and{								currentdict imageormask_sys 								}{								currentoverprint not									{ 									gsave  									knockout_unitsq 									grestore									}if								currentdict consumeimagedata 		 					}ifelse 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name AGMCORE_IsSeparationAProcessColor not and					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end}def/decode_image_sample{	4 1 roll exch dup 5 1 roll	sub 2 4 -1 roll exp 1 sub div mul add} bdf/colorSpaceElemCnt{	mark currentcolor counttomark dup 2 add 1 roll cleartomark} bdf/devn_sep_datasource{	1 dict begin	/dataSource xdf	[		0 1 dataSource length 1 sub {			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx		} for	] cvx bind	end} bdf		/devn_alt_datasource{	11 dict begin	/convProc xdf	/origcolorSpaceElemCnt xdf	/origMultipleDataSources xdf	/origBitsPerComponent xdf	/origDecode xdf	/origDataSource xdf	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def	/DataSource origMultipleDataSources		{			[			BitsPerComponent 8 idiv origDecode length 2 idiv mul string			0 1 origDecode length 2 idiv 1 sub				{				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch				origDataSource exch get 0 () /SubFileDecode filter				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx				}for 			]bind cvx		}{origDataSource}ifelse 0 () /SubFileDecode filter def			[		origcolorSpaceElemCnt string		0 2 origDecode length 2 sub			{			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx			}for		/convProc load /exec cvx		origcolorSpaceElemCnt 1 sub -1 0			{			/dup cvx 2 /add cvx /index cvx			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx			}for	]bind cvx 0 () /SubFileDecode filter	end} bdf/devn_imageormask{ 	/devicen_colorspace_dict AGMCORE_gget begin	CSA map_csa	2 dict begin	dup	/srcDataStrs [ 3 -1 roll begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi			{				dup 65535 gt {1 add 2 div cvi}{exit}ifelse			} loop			string		} repeat		end ] def	/dstDataStr srcDataStrs 0 get length string def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_producing_seps not {			level3 not {				Operator /imagemask ne {					/DataSource [ [						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def									/MultipleDataSources true def					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				} if			}if			currentdict imageormask 		}{			AGMCORE_host_sep{				Names convert_to_process {					CSA get_csa_by_name 0 get /DeviceCMYK eq {						/DataSource							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 							devn_alt_datasource						filter_cmyk 0 () /SubFileDecode filter def						/MultipleDataSources false def						/Decode [1 0] def						/DeviceGray setcolorspace			 			currentdict imageormask_sys 					}{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate {							/DataSource								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get								devn_alt_datasource							/MultipleDataSources false def							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				 			currentdict imageormask_sys				 		}						{	 						gsave 	 						knockout_unitsq	 						grestore							currentdict consumeimagedata 						} ifelse 					} ifelse				}				{						/devicen_colorspace_dict AGMCORE_gget /names_index known {	 					Operator/imagemask ne{	 						MultipleDataSources {		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def								/MultipleDataSources false def	 						}{								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def	 						} ifelse							invert_image_samples	 					} if			 			currentdict imageormask_sys	 				}{	 					currentoverprint not Operator/imagemask eq and{							currentdict imageormask_sys 							}{							currentoverprint not								{	 							gsave 	 							knockout_unitsq	 							grestore								}if							currentdict consumeimagedata 			 			}ifelse	 				}ifelse	 			}ifelse 			}{				currentdict imageormask			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end	end}def/imageormask_l2_overprint{	currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 						currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace				AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 						mark exch						dup	dup dup						AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse			imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark  		currentdict 		AGMCORE_host_sep{			Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {					/CSA get get_csa_by_name				}{					/Names get				} ifelse				overprint_plate not{					knockout_unitsq				}if			}{				Indexed_DeviceN {					/devicen_colorspace_dict AGMCORE_gget /names_index known {			 			indexed_image_lev2_sep					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					} ifelse				}{		 			AGMCORE_is_cmyk_sep{						Operator /imagemask eq{							imageormask_sys						}{							level2{								indexed_image_lev2_sep							}{								indexed_image_lev1_sep							}ifelse						}ifelse					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					}ifelse				}ifelse			}ifelse 		}{			level2{				Indexed_DeviceN {					/indexed_colorspace_dict AGMCORE_gget begin				}{					/indexed_colorspace_dict AGMCORE_gget begin					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]						setcolorspace					} if					end				} ifelse				imageormask				Indexed_DeviceN {					end				} if			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin		Indexed_DeviceN not {			currentcolorspace 			dup 1 /DeviceGray put			dup 3			currentcolorspace 2 get 1 add string			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub			{			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put			}for 			put	setcolorspace		} if		currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			use_mask {				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse			}{				AGMIMG_&image			}ifelse		}ifelse	end end}def  /OPIimage  {  	dup type /dicttype ne{  		10 dict begin  			/DataSource xdf  			/ImageMatrix xdf  			/BitsPerComponent xdf  			/Height xdf  			/Width xdf  			/ImageType 1 def  			/Decode [0 1 def]  			currentdict  		end  	}if  	dup begin  		/NComponents 1 cdndf  		/MultipleDataSources false cdndf  		/SkipImageProc {false} cdndf  		/HostSepColorImage false cdndf  		/Decode [  				0   				currentcolorspace 0 get /Indexed eq{  					2 BitsPerComponent exp 1 sub  				}{  					1  				}ifelse  		] cdndf  		/Operator /image cdndf  	end  	/sep_colorspace_dict AGMCORE_gget null eq{  		imageormask  	}{  		gsave  		dup begin invert_image_samples end  		sep_imageormask  		grestore  	}ifelse  }def/cachemask_level2{	3 dict begin	/LZWEncode filter /WriteFilter xdf	/readBuffer 256 string def	/ReadFilter		currentfile		0 (%EndMask) /SubFileDecode filter		/ASCII85Decode filter		/RunLengthDecode filter	def	{		ReadFilter readBuffer readstring exch		WriteFilter exch writestring		not {exit} if	}loop	WriteFilter closefile	end}def/cachemask_level3{	currentfile	<<		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]		/Intent 1	>>	/ReusableStreamDecode filter}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		<<			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		>>		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		current_spot_alias{dup 4 get map_alias}{false}ifelse		{			false set_spot_alias			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask			true set_spot_alias		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}def/snap_to_device{	6 dict begin	matrix currentmatrix	dup 0 get 0 eq 1 index 3 get 0 eq and	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop	{		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def		0 0 transform		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def		1 1 transform		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def					[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat	}{	}ifelse	end} deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse					Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 						currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{					MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop				Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 				{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{				MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResourcecurrentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetupAdobe_AGM_Utils begin2 2010 Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get execcurrentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: (Page 1) 1%%EndPageComments%%BeginPageSetup/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="ï»¿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2006-05-18T14:20:04-06:00</xap:CreateDate>
         <xap:ModifyDate>2006-05-18T14:21:11-06:00</xap:ModifyDate>
         <xap:MetadataDate>2006-05-18T14:21:11-06:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>176</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAsAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX//2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:65864A6EE80B11DAB8B5B6330ADE4D6B</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:65864A70E80B11DAB8B5B6330ADE4D6B</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:65864A6DE80B11DAB8B5B6330ADE4D6B</stRef:instanceID>
            <stRef:documentID>uuid:65864A6BE80B11DAB8B5B6330ADE4D6B</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_AGM_Core/capture_currentpagedevice get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -160.955 translate[1 0 0 1 0 0 ]  concat% page clipgsavenewpathgsave % PSGState0 0 mo0 160.955 li233.859 160.955 li233.859 0 licpclp[1 0 0 1 0 0 ] concat50.0366 78.625 mo50.0366 80.5342 50.0366 82.1035 50.1392 82.9395 cv50.1963 83.5156 50.3149 83.9531 50.9106 84.0313 cv51.1895 84.0742 51.6274 84.1133 51.8066 84.1133 cv51.9238 84.1133 51.9644 84.1719 51.9644 84.2305 cv51.9644 84.3281 51.8652 84.3887 51.6489 84.3887 cv50.5562 84.3887 49.3022 84.3281 49.2026 84.3281 cv49.1016 84.3281 47.8516 84.3887 47.2534 84.3887 cv47.0352 84.3887 46.938 84.3496 46.938 84.2305 cv46.938 84.1719 46.9746 84.1133 47.0977 84.1133 cv47.2729 84.1133 47.5127 84.0742 47.6919 84.0313 cv48.0908 83.9531 48.1885 83.5156 48.2681 82.9395 cv48.3657 82.1035 48.3657 80.5342 48.3657 78.625 cv48.3657 70.2178 li45.4248 70.2568 li44.1938 70.2744 43.7188 70.417 43.3975 70.8936 cv43.1792 71.2324 43.1187 71.3701 43.0601 71.5078 cv42.998 71.668 42.9395 71.71 42.8604 71.71 cv42.8032 71.71 42.7607 71.6475 42.7607 71.5303 cv42.7607 71.3301 43.1602 69.6182 43.1987 69.4619 cv43.2393 69.3438 43.3193 69.083 43.3975 69.083 cv43.5376 69.083 43.7344 69.2813 44.2734 69.3242 cv44.8506 69.3799 45.604 69.4229 45.8433 69.4229 cv53.2969 69.4229 li53.9351 69.4229 54.3911 69.3633 54.7085 69.3242 cv55.0063 69.2627 55.1875 69.2236 55.2656 69.2236 cv55.3652 69.2236 55.3652 69.3438 55.3652 69.4619 cv55.3652 70.0586 55.3066 71.4316 55.3066 71.6475 cv55.3066 71.8271 55.2461 71.9082 55.1646 71.9082 cv55.0669 71.9082 55.0278 71.8457 55.0063 71.5693 cv54.9868 71.3506 li54.9072 70.7529 54.4492 70.2959 52.5405 70.2568 cv50.0366 70.2178 li50.0366 78.625 li50.0366 78.625 licpfalse sop/0 [/DeviceCMYK] /CSA add_res0 0 0 0 cmykf0.3 lw0 lc0 lj3.8637 ml[] 0 dshtrue sadj50.0366 78.625 mo50.0366 80.5342 50.0366 82.1035 50.1392 82.9395 cv50.1963 83.5156 50.3149 83.9531 50.9106 84.0313 cv51.1895 84.0742 51.6274 84.1133 51.8066 84.1133 cv51.9238 84.1133 51.9644 84.1719 51.9644 84.2305 cv51.9644 84.3281 51.8652 84.3887 51.6489 84.3887 cv50.5562 84.3887 49.3022 84.3281 49.2026 84.3281 cv49.1016 84.3281 47.8516 84.3887 47.2534 84.3887 cv47.0352 84.3887 46.938 84.3496 46.938 84.2305 cv46.938 84.1719 46.9746 84.1133 47.0977 84.1133 cv47.2729 84.1133 47.5127 84.0742 47.6919 84.0313 cv48.0908 83.9531 48.1885 83.5156 48.2681 82.9395 cv48.3657 82.1035 48.3657 80.5342 48.3657 78.625 cv48.3657 70.2178 li45.4248 70.2568 li44.1938 70.2744 43.7188 70.417 43.3975 70.8936 cv43.1792 71.2324 43.1187 71.3701 43.0601 71.5078 cv42.998 71.668 42.9395 71.71 42.8604 71.71 cv42.8032 71.71 42.7607 71.6475 42.7607 71.5303 cv42.7607 71.3301 43.1602 69.6182 43.1987 69.4619 cv43.2393 69.3438 43.3193 69.083 43.3975 69.083 cv43.5376 69.083 43.7344 69.2813 44.2734 69.3242 cv44.8506 69.3799 45.604 69.4229 45.8433 69.4229 cv53.2969 69.4229 li53.9351 69.4229 54.3911 69.3633 54.7085 69.3242 cv55.0063 69.2627 55.1875 69.2236 55.2656 69.2236 cv55.3652 69.2236 55.3652 69.3438 55.3652 69.4619 cv55.3652 70.0586 55.3066 71.4316 55.3066 71.6475 cv55.3066 71.8271 55.2461 71.9082 55.1646 71.9082 cv55.0669 71.9082 55.0278 71.8457 55.0063 71.5693 cv54.9868 71.3506 li54.9072 70.7529 54.4492 70.2959 52.5405 70.2568 cv50.0366 70.2178 li50.0366 78.625 li50.0366 78.625 licp@73.2158 78.625 mo73.2158 80.5342 73.2158 82.1035 73.3135 82.9395 cv73.3755 83.5156 73.4941 83.9531 74.0898 84.0313 cv74.3687 84.0742 74.8066 84.1133 74.9858 84.1133 cv75.103 84.1133 75.1436 84.1719 75.1436 84.2305 cv75.1436 84.3281 75.0444 84.3887 74.8247 84.3887 cv73.7354 84.3887 72.478 84.3281 72.3804 84.3281 cv72.2808 84.3281 71.0283 84.3887 70.4326 84.3887 cv70.2144 84.3887 70.1172 84.3496 70.1172 84.2305 cv70.1172 84.1719 70.1543 84.1133 70.2715 84.1133 cv70.4521 84.1133 70.6919 84.0742 70.8711 84.0313 cv71.2661 83.9531 71.3672 83.5156 71.4473 82.9395 cv71.5449 82.1035 71.5449 80.5342 71.5449 78.625 cv71.5449 76.5391 li71.5449 76.4609 71.4863 76.4199 71.4258 76.4199 cv62.9976 76.4199 li62.9404 76.4199 62.8784 76.4395 62.8784 76.5391 cv62.8784 78.625 li62.8784 80.5342 62.8784 82.1035 62.9795 82.9395 cv63.04 83.5156 63.1587 83.9531 63.7529 84.0313 cv64.0298 84.0742 64.4692 84.1133 64.6484 84.1133 cv64.7642 84.1133 64.8081 84.1719 64.8081 84.2305 cv64.8081 84.3281 64.707 84.3887 64.4888 84.3887 cv63.396 84.3887 62.144 84.3281 62.043 84.3281 cv61.9453 84.3281 60.6914 84.3887 60.0957 84.3887 cv59.8755 84.3887 59.7778 84.3496 59.7778 84.2305 cv59.7778 84.1719 59.8184 84.1133 59.9375 84.1133 cv60.1167 84.1133 60.353 84.0742 60.5317 84.0313 cv60.9326 83.9531 61.0303 83.5156 61.1104 82.9395 cv61.2095 82.1035 61.2095 80.5342 61.2095 78.625 cv61.2095 75.1279 li61.2095 72.0264 61.2095 71.4688 61.1689 70.835 cv61.1313 70.1572 60.9697 69.8408 60.314 69.6992 cv60.1558 69.6621 59.8184 69.6426 59.6377 69.6426 cv59.5596 69.6426 59.4819 69.5996 59.4819 69.5186 cv59.4819 69.4023 59.5791 69.3633 59.7959 69.3633 cv60.6914 69.3633 61.9453 69.4229 62.043 69.4229 cv62.144 69.4229 63.396 69.3633 63.9922 69.3633 cv64.209 69.3633 64.3101 69.4023 64.3101 69.5186 cv64.3101 69.5996 64.2319 69.6426 64.1514 69.6426 cv64.0117 69.6426 63.8945 69.6621 63.6533 69.6992 cv63.1182 69.7988 62.9585 70.1377 62.9175 70.835 cv62.8784 71.4688 62.8784 72.0264 62.8784 75.1279 cv62.8784 75.5439 li62.8784 75.6436 62.9404 75.6631 62.9976 75.6631 cv71.4258 75.6631 li71.4863 75.6631 71.5449 75.6436 71.5449 75.5439 cv71.5449 75.1279 li71.5449 72.0264 71.5449 71.4688 71.5059 70.835 cv71.4668 70.1572 71.3086 69.8408 70.6509 69.6992 cv70.4946 69.6621 70.1543 69.6426 69.9736 69.6426 cv69.8955 69.6426 69.8174 69.5996 69.8174 69.5186 cv69.8174 69.4023 69.915 69.3633 70.1348 69.3633 cv71.0283 69.3633 72.2808 69.4229 72.3804 69.4229 cv72.478 69.4229 73.7354 69.3633 74.3281 69.3633 cv74.5479 69.3633 74.6489 69.4023 74.6489 69.5186 cv74.6489 69.5996 74.5659 69.6426 74.4878 69.6426 cv74.3491 69.6426 74.2285 69.6621 73.9932 69.6992 cv73.4551 69.7988 73.2939 70.1377 73.2563 70.835 cv73.2158 71.4688 73.2158 72.0264 73.2158 75.1279 cv73.2158 78.625 li73.2158 78.625 licpf73.2158 78.625 mo73.2158 80.5342 73.2158 82.1035 73.3135 82.9395 cv73.3755 83.5156 73.4941 83.9531 74.0898 84.0313 cv74.3687 84.0742 74.8066 84.1133 74.9858 84.1133 cv75.103 84.1133 75.1436 84.1719 75.1436 84.2305 cv75.1436 84.3281 75.0444 84.3887 74.8247 84.3887 cv73.7354 84.3887 72.478 84.3281 72.3804 84.3281 cv72.2808 84.3281 71.0283 84.3887 70.4326 84.3887 cv70.2144 84.3887 70.1172 84.3496 70.1172 84.2305 cv70.1172 84.1719 70.1543 84.1133 70.2715 84.1133 cv70.4521 84.1133 70.6919 84.0742 70.8711 84.0313 cv71.2661 83.9531 71.3672 83.5156 71.4473 82.9395 cv71.5449 82.1035 71.5449 80.5342 71.5449 78.625 cv71.5449 76.5391 li71.5449 76.4609 71.4863 76.4199 71.4258 76.4199 cv62.9976 76.4199 li62.9404 76.4199 62.8784 76.4395 62.8784 76.5391 cv62.8784 78.625 li62.8784 80.5342 62.8784 82.1035 62.9795 82.9395 cv63.04 83.5156 63.1587 83.9531 63.7529 84.0313 cv64.0298 84.0742 64.4692 84.1133 64.6484 84.1133 cv64.7642 84.1133 64.8081 84.1719 64.8081 84.2305 cv64.8081 84.3281 64.707 84.3887 64.4888 84.3887 cv63.396 84.3887 62.144 84.3281 62.043 84.3281 cv61.9453 84.3281 60.6914 84.3887 60.0957 84.3887 cv59.8755 84.3887 59.7778 84.3496 59.7778 84.2305 cv59.7778 84.1719 59.8184 84.1133 59.9375 84.1133 cv60.1167 84.1133 60.353 84.0742 60.5317 84.0313 cv60.9326 83.9531 61.0303 83.5156 61.1104 82.9395 cv61.2095 82.1035 61.2095 80.5342 61.2095 78.625 cv61.2095 75.1279 li61.2095 72.0264 61.2095 71.4688 61.1689 70.835 cv61.1313 70.1572 60.9697 69.8408 60.314 69.6992 cv60.1558 69.6621 59.8184 69.6426 59.6377 69.6426 cv59.5596 69.6426 59.4819 69.5996 59.4819 69.5186 cv59.4819 69.4023 59.5791 69.3633 59.7959 69.3633 cv60.6914 69.3633 61.9453 69.4229 62.043 69.4229 cv62.144 69.4229 63.396 69.3633 63.9922 69.3633 cv64.209 69.3633 64.3101 69.4023 64.3101 69.5186 cv64.3101 69.5996 64.2319 69.6426 64.1514 69.6426 cv64.0117 69.6426 63.8945 69.6621 63.6533 69.6992 cv63.1182 69.7988 62.9585 70.1377 62.9175 70.835 cv62.8784 71.4688 62.8784 72.0264 62.8784 75.1279 cv62.8784 75.5439 li62.8784 75.6436 62.9404 75.6631 62.9976 75.6631 cv71.4258 75.6631 li71.4863 75.6631 71.5449 75.6436 71.5449 75.5439 cv71.5449 75.1279 li71.5449 72.0264 71.5449 71.4688 71.5059 70.835 cv71.4668 70.1572 71.3086 69.8408 70.6509 69.6992 cv70.4946 69.6621 70.1543 69.6426 69.9736 69.6426 cv69.8955 69.6426 69.8174 69.5996 69.8174 69.5186 cv69.8174 69.4023 69.915 69.3633 70.1348 69.3633 cv71.0283 69.3633 72.2808 69.4229 72.3804 69.4229 cv72.478 69.4229 73.7354 69.3633 74.3281 69.3633 cv74.5479 69.3633 74.6489 69.4023 74.6489 69.5186 cv74.6489 69.5996 74.5659 69.6426 74.4878 69.6426 cv74.3491 69.6426 74.2285 69.6621 73.9932 69.6992 cv73.4551 69.7988 73.2939 70.1377 73.2563 70.835 cv73.2158 71.4688 73.2158 72.0264 73.2158 75.1279 cv73.2158 78.625 li73.2158 78.625 licp@81.9619 75.1279 mo81.9619 72.0264 81.9619 71.4688 81.9229 70.835 cv81.8823 70.1572 81.7241 69.8408 81.0698 69.6992 cv80.9102 69.6621 80.5698 69.6426 80.3926 69.6426 cv80.311 69.6426 80.231 69.5996 80.231 69.5186 cv80.231 69.4023 80.332 69.3633 80.5503 69.3633 cv81.4478 69.3633 82.6978 69.4229 82.7954 69.4229 cv82.9355 69.4229 86.8931 69.4229 87.3491 69.4023 cv87.7266 69.3799 88.0459 69.3438 88.2017 69.3018 cv88.3027 69.2813 88.3828 69.2031 88.4819 69.2031 cv88.5439 69.2031 88.5601 69.2813 88.5601 69.3799 cv88.5601 69.5186 88.4648 69.7598 88.4004 70.3164 cv88.3828 70.5156 88.3442 71.3877 88.3027 71.6289 cv88.2856 71.7285 88.2407 71.8457 88.165 71.8457 cv88.0459 71.8457 88.0054 71.748 88.0054 71.5859 cv88.0054 71.4492 87.9873 71.1123 87.8862 70.8721 cv87.748 70.5547 87.5474 70.3164 86.4727 70.1963 cv86.1377 70.1572 83.9697 70.1377 83.7515 70.1377 cv83.6719 70.1377 83.6328 70.1963 83.6328 70.3389 cv83.6328 75.8232 li83.6328 75.9629 83.6538 76.0186 83.7515 76.0186 cv84.0088 76.0186 86.4565 76.0186 86.9126 75.9824 cv87.3877 75.9434 87.668 75.9043 87.8472 75.7021 cv87.9873 75.5439 88.0654 75.4463 88.1431 75.4463 cv88.2017 75.4463 88.2407 75.4854 88.2407 75.6025 cv88.2407 75.7227 88.1431 76.0605 88.0869 76.7168 cv88.0459 77.1152 88.0054 77.8496 88.0054 77.9902 cv88.0054 78.1494 88.0054 78.3652 87.8652 78.3652 cv87.7656 78.3652 87.7266 78.2871 87.7266 78.1885 cv87.7266 77.9902 87.7266 77.791 87.647 77.5322 cv87.5669 77.252 87.3877 76.9189 86.6128 76.835 cv86.0791 76.7783 84.1084 76.7373 83.771 76.7373 cv83.6719 76.7373 83.6328 76.7979 83.6328 76.876 cv83.6328 78.625 li83.6328 79.3018 83.6099 81.6074 83.6328 82.0215 cv83.6914 83.3984 83.9878 83.6543 85.937 83.6543 cv86.4565 83.6543 87.3311 83.6543 87.8472 83.4336 cv88.3638 83.2188 88.6011 82.8203 88.7393 82.002 cv88.7803 81.79 88.8193 81.7061 88.9204 81.7061 cv89.0396 81.7061 89.0396 81.8682 89.0396 82.002 cv89.0396 82.1621 88.8799 83.5156 88.7803 83.9316 cv88.6401 84.4492 88.4819 84.4492 87.707 84.4492 cv84.7061 84.4492 83.3735 84.3281 82.7954 84.3281 cv82.7563 84.3281 82.4199 84.3496 82.0029 84.3496 cv81.6035 84.3711 81.146 84.3887 80.8481 84.3887 cv80.6318 84.3887 80.5322 84.3496 80.5322 84.2305 cv80.5322 84.1719 80.5698 84.1133 80.6885 84.1133 cv80.8677 84.1133 81.1055 84.0742 81.2861 84.0313 cv81.6836 83.9531 81.7827 83.5156 81.8643 82.9395 cv81.9619 82.1035 81.9619 80.5342 81.9619 78.625 cv81.9619 75.1279 li81.9619 75.1279 licpf81.9619 75.1279 mo81.9619 72.0264 81.9619 71.4688 81.9229 70.835 cv81.8823 70.1572 81.7241 69.8408 81.0698 69.6992 cv80.9102 69.6621 80.5698 69.6426 80.3926 69.6426 cv80.311 69.6426 80.231 69.5996 80.231 69.5186 cv80.231 69.4023 80.332 69.3633 80.5503 69.3633 cv81.4478 69.3633 82.6978 69.4229 82.7954 69.4229 cv82.9355 69.4229 86.8931 69.4229 87.3491 69.4023 cv87.7266 69.3799 88.0459 69.3438 88.2017 69.3018 cv88.3027 69.2813 88.3828 69.2031 88.4819 69.2031 cv88.5439 69.2031 88.5601 69.2813 88.5601 69.3799 cv88.5601 69.5186 88.4648 69.7598 88.4004 70.3164 cv88.3828 70.5156 88.3442 71.3877 88.3027 71.6289 cv88.2856 71.7285 88.2407 71.8457 88.165 71.8457 cv88.0459 71.8457 88.0054 71.748 88.0054 71.5859 cv88.0054 71.4492 87.9873 71.1123 87.8862 70.8721 cv87.748 70.5547 87.5474 70.3164 86.4727 70.1963 cv86.1377 70.1572 83.9697 70.1377 83.7515 70.1377 cv83.6719 70.1377 83.6328 70.1963 83.6328 70.3389 cv83.6328 75.8232 li83.6328 75.9629 83.6538 76.0186 83.7515 76.0186 cv84.0088 76.0186 86.4565 76.0186 86.9126 75.9824 cv87.3877 75.9434 87.668 75.9043 87.8472 75.7021 cv87.9873 75.5439 88.0654 75.4463 88.1431 75.4463 cv88.2017 75.4463 88.2407 75.4854 88.2407 75.6025 cv88.2407 75.7227 88.1431 76.0605 88.0869 76.7168 cv88.0459 77.1152 88.0054 77.8496 88.0054 77.9902 cv88.0054 78.1494 88.0054 78.3652 87.8652 78.3652 cv87.7656 78.3652 87.7266 78.2871 87.7266 78.1885 cv87.7266 77.9902 87.7266 77.791 87.647 77.5322 cv87.5669 77.252 87.3877 76.9189 86.6128 76.835 cv86.0791 76.7783 84.1084 76.7373 83.771 76.7373 cv83.6719 76.7373 83.6328 76.7979 83.6328 76.876 cv83.6328 78.625 li83.6328 79.3018 83.6099 81.6074 83.6328 82.0215 cv83.6914 83.3984 83.9878 83.6543 85.937 83.6543 cv86.4565 83.6543 87.3311 83.6543 87.8472 83.4336 cv88.3638 83.2188 88.6011 82.8203 88.7393 82.002 cv88.7803 81.79 88.8193 81.7061 88.9204 81.7061 cv89.0396 81.7061 89.0396 81.8682 89.0396 82.002 cv89.0396 82.1621 88.8799 83.5156 88.7803 83.9316 cv88.6401 84.4492 88.4819 84.4492 87.707 84.4492 cv84.7061 84.4492 83.3735 84.3281 82.7954 84.3281 cv82.7563 84.3281 82.4199 84.3496 82.0029 84.3496 cv81.6035 84.3711 81.146 84.3887 80.8481 84.3887 cv80.6318 84.3887 80.5322 84.3496 80.5322 84.2305 cv80.5322 84.1719 80.5698 84.1133 80.6885 84.1133 cv80.8677 84.1133 81.1055 84.0742 81.2861 84.0313 cv81.6836 83.9531 81.7827 83.5156 81.8643 82.9395 cv81.9619 82.1035 81.9619 80.5342 81.9619 78.625 cv81.9619 75.1279 li81.9619 75.1279 licp@2.85107 107.795 mo2.85107 102.904 2.85107 102.025 2.78906 101.023 cv2.7251 99.959 2.47705 99.4531 1.44092 99.2344 cv1.19141 99.1719 0.656738 99.1426 0.376465 99.1426 cv0.249023 99.1426 0.125 99.0801 0.125 98.9531 cv0.125 98.7637 0.279297 98.7031 0.625488 98.7031 cv2.03711 98.7031 3.94873 98.7969 4.23242 98.7969 cv4.51465 98.7969 6.39697 98.7031 7.33691 98.7031 cv7.6792 98.7031 7.83887 98.7637 7.83887 98.9531 cv7.83887 99.0801 7.71289 99.1426 7.5874 99.1426 cv7.36914 99.1426 7.18115 99.1719 6.80322 99.2344 cv5.95703 99.3594 5.70361 99.9258 5.64307 101.023 cv5.5791 102.025 5.5791 102.904 5.5791 107.795 cv5.5791 112.186 li5.5791 116.699 6.58301 118.646 7.93311 119.932 cv9.46875 121.371 10.8809 121.656 12.667 121.656 cv14.5791 121.656 16.4629 120.746 17.5889 119.395 cv19.0332 117.609 19.4072 114.943 19.4072 111.715 cv19.4072 107.795 li19.4072 102.904 19.4072 102.025 19.3452 101.023 cv19.2813 99.959 19.0332 99.4531 17.9966 99.2344 cv17.7471 99.1719 17.2129 99.1426 16.9292 99.1426 cv16.8071 99.1426 16.6787 99.0801 16.6787 98.9531 cv16.6787 98.7637 16.835 98.7031 17.1831 98.7031 cv18.5933 98.7031 20.3188 98.7969 20.5049 98.7969 cv20.7236 98.7969 22.1987 98.7031 23.1392 98.7031 cv23.4834 98.7031 23.6406 98.7637 23.6406 98.9531 cv23.6406 99.0801 23.5166 99.1426 23.3892 99.1426 cv23.1709 99.1426 22.9814 99.1426 22.6055 99.2344 cv21.7593 99.3906 21.5107 99.9258 21.4448 101.023 cv21.3853 102.025 21.3853 102.904 21.3853 107.795 cv21.3853 111.15 li21.3853 114.537 21.0073 118.299 18.5005 120.527 cv16.2393 122.531 13.8906 122.848 12.0391 122.848 cv10.9727 122.848 7.80518 122.719 5.5791 120.621 cv4.04492 119.146 2.85107 116.947 2.85107 112.373 cv2.85107 107.795 li2.85107 107.795 licpf0.25 lw2.85107 107.795 mo2.85107 102.904 2.85107 102.025 2.78906 101.023 cv2.7251 99.959 2.47705 99.4531 1.44092 99.2344 cv1.19141 99.1719 0.656738 99.1426 0.376465 99.1426 cv0.249023 99.1426 0.125 99.0801 0.125 98.9531 cv0.125 98.7637 0.279297 98.7031 0.625488 98.7031 cv2.03711 98.7031 3.94873 98.7969 4.23242 98.7969 cv4.51465 98.7969 6.39697 98.7031 7.33691 98.7031 cv7.6792 98.7031 7.83887 98.7637 7.83887 98.9531 cv7.83887 99.0801 7.71289 99.1426 7.5874 99.1426 cv7.36914 99.1426 7.18115 99.1719 6.80322 99.2344 cv5.95703 99.3594 5.70361 99.9258 5.64307 101.023 cv5.5791 102.025 5.5791 102.904 5.5791 107.795 cv5.5791 112.186 li5.5791 116.699 6.58301 118.646 7.93311 119.932 cv9.46875 121.371 10.8809 121.656 12.667 121.656 cv14.5791 121.656 16.4629 120.746 17.5889 119.395 cv19.0332 117.609 19.4072 114.943 19.4072 111.715 cv19.4072 107.795 li19.4072 102.904 19.4072 102.025 19.3452 101.023 cv19.2813 99.959 19.0332 99.4531 17.9966 99.2344 cv17.7471 99.1719 17.2129 99.1426 16.9292 99.1426 cv16.8071 99.1426 16.6787 99.0801 16.6787 98.9531 cv16.6787 98.7637 16.835 98.7031 17.1831 98.7031 cv18.5933 98.7031 20.3188 98.7969 20.5049 98.7969 cv20.7236 98.7969 22.1987 98.7031 23.1392 98.7031 cv23.4834 98.7031 23.6406 98.7637 23.6406 98.9531 cv23.6406 99.0801 23.5166 99.1426 23.3892 99.1426 cv23.1709 99.1426 22.9814 99.1426 22.6055 99.2344 cv21.7593 99.3906 21.5107 99.9258 21.4448 101.023 cv21.3853 102.025 21.3853 102.904 21.3853 107.795 cv21.3853 111.15 li21.3853 114.537 21.0073 118.299 18.5005 120.527 cv16.2393 122.531 13.8906 122.848 12.0391 122.848 cv10.9727 122.848 7.80518 122.719 5.5791 120.621 cv4.04492 119.146 2.85107 116.947 2.85107 112.373 cv2.85107 107.795 li2.85107 107.795 licp@34.1792 118.143 mo34.2393 120.711 34.5547 121.529 35.3994 121.781 cv35.9951 121.939 36.6851 121.967 36.9673 121.967 cv37.125 121.967 37.2153 122.031 37.2153 122.156 cv37.2153 122.344 37.0308 122.406 36.6533 122.406 cv34.8667 122.406 33.6147 122.313 33.3311 122.313 cv33.0474 122.313 31.731 122.406 30.3188 122.406 cv30.0054 122.406 29.8174 122.375 29.8174 122.156 cv29.8174 122.031 29.9131 121.967 30.0688 121.967 cv30.3188 121.967 30.8853 121.939 31.3555 121.781 cv32.1357 121.563 32.2969 120.65 32.2969 117.799 cv32.3271 99.832 li32.3271 98.6074 32.4194 98.2617 32.6709 98.2617 cv32.9248 98.2617 33.457 98.9531 33.7695 99.2676 cv34.2393 99.7988 38.9111 104.85 43.7393 110.02 cv46.8438 113.346 50.2646 117.172 51.2656 118.203 cv50.9209 102.275 li50.8911 100.236 50.6694 99.5469 49.6973 99.2988 cv49.1353 99.1719 48.4131 99.1426 48.1631 99.1426 cv47.9434 99.1426 47.9111 99.0469 47.9111 98.9238 cv47.9111 98.7324 48.1631 98.7031 48.5356 98.7031 cv49.9478 98.7031 51.4536 98.7969 51.7993 98.7969 cv52.1436 98.7969 53.1792 98.7031 54.4648 98.7031 cv54.8091 98.7031 55.0308 98.7324 55.0308 98.9238 cv55.0308 99.0469 54.9033 99.1426 54.6836 99.1426 cv54.5254 99.1426 54.3071 99.1426 53.9312 99.2344 cv52.897 99.4531 52.7715 100.145 52.7715 102.025 cv52.709 120.4 li52.709 122.469 52.6465 122.627 52.4253 122.627 cv52.1768 122.627 51.7993 122.283 50.1372 120.621 cv49.793 120.307 45.2759 115.695 41.9517 112.123 cv38.3149 108.201 34.7715 104.252 33.7695 103.123 cv34.1792 118.143 li34.1792 118.143 licpf34.1792 118.143 mo34.2393 120.711 34.5547 121.529 35.3994 121.781 cv35.9951 121.939 36.6851 121.967 36.9673 121.967 cv37.125 121.967 37.2153 122.031 37.2153 122.156 cv37.2153 122.344 37.0308 122.406 36.6533 122.406 cv34.8667 122.406 33.6147 122.313 33.3311 122.313 cv33.0474 122.313 31.731 122.406 30.3188 122.406 cv30.0054 122.406 29.8174 122.375 29.8174 122.156 cv29.8174 122.031 29.9131 121.967 30.0688 121.967 cv30.3188 121.967 30.8853 121.939 31.3555 121.781 cv32.1357 121.563 32.2969 120.65 32.2969 117.799 cv32.3271 99.832 li32.3271 98.6074 32.4194 98.2617 32.6709 98.2617 cv32.9248 98.2617 33.457 98.9531 33.7695 99.2676 cv34.2393 99.7988 38.9111 104.85 43.7393 110.02 cv46.8438 113.346 50.2646 117.172 51.2656 118.203 cv50.9209 102.275 li50.8911 100.236 50.6694 99.5469 49.6973 99.2988 cv49.1353 99.1719 48.4131 99.1426 48.1631 99.1426 cv47.9434 99.1426 47.9111 99.0469 47.9111 98.9238 cv47.9111 98.7324 48.1631 98.7031 48.5356 98.7031 cv49.9478 98.7031 51.4536 98.7969 51.7993 98.7969 cv52.1436 98.7969 53.1792 98.7031 54.4648 98.7031 cv54.8091 98.7031 55.0308 98.7324 55.0308 98.9238 cv55.0308 99.0469 54.9033 99.1426 54.6836 99.1426 cv54.5254 99.1426 54.3071 99.1426 53.9312 99.2344 cv52.897 99.4531 52.7715 100.145 52.7715 102.025 cv52.709 120.4 li52.709 122.469 52.6465 122.627 52.4253 122.627 cv52.1768 122.627 51.7993 122.283 50.1372 120.621 cv49.793 120.307 45.2759 115.695 41.9517 112.123 cv38.3149 108.201 34.7715 104.252 33.7695 103.123 cv34.1792 118.143 li34.1792 118.143 licp@68.293 113.311 mo68.293 116.322 68.293 118.801 68.4492 120.117 cv68.5435 121.027 68.7314 121.715 69.6694 121.84 cv70.1094 121.908 70.8013 121.967 71.0815 121.967 cv71.271 121.967 71.333 122.064 71.333 122.156 cv71.333 122.313 71.1753 122.406 70.8311 122.406 cv69.1089 122.406 67.1328 122.313 66.9751 122.313 cv66.8213 122.313 64.8447 122.406 63.9033 122.406 cv63.5591 122.406 63.4028 122.344 63.4028 122.156 cv63.4028 122.064 63.4614 121.967 63.6514 121.967 cv63.9336 121.967 64.311 121.908 64.5933 121.84 cv65.2212 121.715 65.3755 121.027 65.5015 120.117 cv65.6592 118.801 65.6592 116.322 65.6592 113.311 cv65.6592 107.795 li65.6592 102.904 65.6592 102.025 65.5952 101.023 cv65.5352 99.959 65.2212 99.4238 64.5273 99.2676 cv64.1836 99.1719 63.7773 99.1426 63.5591 99.1426 cv63.4331 99.1426 63.3057 99.0801 63.3057 98.9531 cv63.3057 98.7637 63.4614 98.7031 63.8071 98.7031 cv64.8447 98.7031 66.8213 98.7969 66.9751 98.7969 cv67.1328 98.7969 69.1089 98.7031 70.0508 98.7031 cv70.3936 98.7031 70.5498 98.7637 70.5498 98.9531 cv70.5498 99.0801 70.4233 99.1426 70.2993 99.1426 cv70.0791 99.1426 69.8911 99.1719 69.5156 99.2344 cv68.6689 99.3906 68.417 99.9258 68.3574 101.023 cv68.293 102.025 68.293 102.904 68.293 107.795 cv68.293 113.311 li68.293 113.311 licpf68.293 113.311 mo68.293 116.322 68.293 118.801 68.4492 120.117 cv68.5435 121.027 68.7314 121.715 69.6694 121.84 cv70.1094 121.908 70.8013 121.967 71.0815 121.967 cv71.271 121.967 71.333 122.064 71.333 122.156 cv71.333 122.313 71.1753 122.406 70.8311 122.406 cv69.1089 122.406 67.1328 122.313 66.9751 122.313 cv66.8213 122.313 64.8447 122.406 63.9033 122.406 cv63.5591 122.406 63.4028 122.344 63.4028 122.156 cv63.4028 122.064 63.4614 121.967 63.6514 121.967 cv63.9336 121.967 64.311 121.908 64.5933 121.84 cv65.2212 121.715 65.3755 121.027 65.5015 120.117 cv65.6592 118.801 65.6592 116.322 65.6592 113.311 cv65.6592 107.795 li65.6592 102.904 65.6592 102.025 65.5952 101.023 cv65.5352 99.959 65.2212 99.4238 64.5273 99.2676 cv64.1836 99.1719 63.7773 99.1426 63.5591 99.1426 cv63.4331 99.1426 63.3057 99.0801 63.3057 98.9531 cv63.3057 98.7637 63.4614 98.7031 63.8071 98.7031 cv64.8447 98.7031 66.8213 98.7969 66.9751 98.7969 cv67.1328 98.7969 69.1089 98.7031 70.0508 98.7031 cv70.3936 98.7031 70.5498 98.7637 70.5498 98.9531 cv70.5498 99.0801 70.4233 99.1426 70.2993 99.1426 cv70.0791 99.1426 69.8911 99.1719 69.5156 99.2344 cv68.6689 99.3906 68.417 99.9258 68.3574 101.023 cv68.293 102.025 68.293 102.904 68.293 107.795 cv68.293 113.311 li68.293 113.311 licp@88.895 118.58 mo90.7148 114.379 94.915 103.438 95.6035 101.18 cv95.7578 100.709 95.8872 100.268 95.8872 99.9883 cv95.8872 99.7363 95.7915 99.4238 95.481 99.2676 cv95.1016 99.1426 94.6313 99.1426 94.2871 99.1426 cv94.0977 99.1426 93.9395 99.1074 93.9395 98.9531 cv93.9395 98.7637 94.1274 98.7031 94.6313 98.7031 cv95.8838 98.7031 97.3276 98.7969 97.7056 98.7969 cv97.8936 98.7969 99.2412 98.7031 100.151 98.7031 cv100.496 98.7031 100.683 98.7637 100.683 98.9238 cv100.683 99.0801 100.558 99.1426 100.306 99.1426 cv100.087 99.1426 99.3975 99.1426 98.8052 99.5176 cv98.3931 99.7988 97.9214 100.336 97.0771 102.463 cv96.7334 103.344 95.1631 107.107 93.5669 110.963 cv91.6548 115.539 90.2432 118.928 89.5195 120.459 cv88.6416 122.344 88.5156 122.848 88.2031 122.848 cv87.8257 122.848 87.6709 122.406 87.0752 120.902 cv79.3911 101.682 li78.7012 99.9258 78.2314 99.5801 77.1353 99.2676 cv76.6636 99.1426 76.1294 99.1426 75.9434 99.1426 cv75.7568 99.1426 75.6914 99.0469 75.6914 98.9238 cv75.6914 98.7324 76.0073 98.7031 76.5073 98.7031 cv78.0112 98.7031 79.8008 98.7969 80.1738 98.7969 cv80.4893 98.7969 81.9014 98.7031 83.0913 98.7031 cv83.6553 98.7031 83.9375 98.7637 83.9375 98.9238 cv83.9375 99.0801 83.8438 99.1426 83.6255 99.1426 cv83.2798 99.1426 82.7173 99.1719 82.4351 99.2988 cv82.0894 99.4531 82.0254 99.7051 82.0254 99.9258 cv82.0254 100.336 82.4053 101.303 82.8735 102.527 cv88.895 118.58 li88.895 118.58 licpf88.895 118.58 mo90.7148 114.379 94.915 103.438 95.6035 101.18 cv95.7578 100.709 95.8872 100.268 95.8872 99.9883 cv95.8872 99.7363 95.7915 99.4238 95.481 99.2676 cv95.1016 99.1426 94.6313 99.1426 94.2871 99.1426 cv94.0977 99.1426 93.9395 99.1074 93.9395 98.9531 cv93.9395 98.7637 94.1274 98.7031 94.6313 98.7031 cv95.8838 98.7031 97.3276 98.7969 97.7056 98.7969 cv97.8936 98.7969 99.2412 98.7031 100.151 98.7031 cv100.496 98.7031 100.683 98.7637 100.683 98.9238 cv100.683 99.0801 100.558 99.1426 100.306 99.1426 cv100.087 99.1426 99.3975 99.1426 98.8052 99.5176 cv98.3931 99.7988 97.9214 100.336 97.0771 102.463 cv96.7334 103.344 95.1631 107.107 93.5669 110.963 cv91.6548 115.539 90.2432 118.928 89.5195 120.459 cv88.6416 122.344 88.5156 122.848 88.2031 122.848 cv87.8257 122.848 87.6709 122.406 87.0752 120.902 cv79.3911 101.682 li78.7012 99.9258 78.2314 99.5801 77.1353 99.2676 cv76.6636 99.1426 76.1294 99.1426 75.9434 99.1426 cv75.7568 99.1426 75.6914 99.0469 75.6914 98.9238 cv75.6914 98.7324 76.0073 98.7031 76.5073 98.7031 cv78.0112 98.7031 79.8008 98.7969 80.1738 98.7969 cv80.4893 98.7969 81.9014 98.7031 83.0913 98.7031 cv83.6553 98.7031 83.9375 98.7637 83.9375 98.9238 cv83.9375 99.0801 83.8438 99.1426 83.6255 99.1426 cv83.2798 99.1426 82.7173 99.1719 82.4351 99.2988 cv82.0894 99.4531 82.0254 99.7051 82.0254 99.9258 cv82.0254 100.336 82.4053 101.303 82.8735 102.527 cv88.895 118.58 li88.895 118.58 licp@107.989 107.795 mo107.989 102.904 107.989 102.025 107.926 101.023 cv107.865 99.959 107.611 99.4531 106.577 99.2344 cv106.327 99.1719 105.792 99.1426 105.51 99.1426 cv105.387 99.1426 105.259 99.0801 105.259 98.9531 cv105.259 98.7637 105.417 98.7031 105.763 98.7031 cv107.177 98.7031 109.147 98.7969 109.306 98.7969 cv109.525 98.7969 115.765 98.7969 116.485 98.7637 cv117.085 98.7324 117.585 98.6738 117.835 98.6074 cv117.989 98.5781 118.114 98.4512 118.273 98.4512 cv118.367 98.4512 118.397 98.5781 118.397 98.7324 cv118.397 98.9531 118.243 99.3281 118.147 100.209 cv118.114 100.52 118.05 101.898 117.989 102.275 cv117.961 102.436 117.897 102.621 117.774 102.621 cv117.585 102.621 117.52 102.463 117.52 102.215 cv117.52 101.992 117.491 101.461 117.335 101.084 cv117.114 100.584 116.8 100.209 115.107 100.02 cv114.575 99.959 111.155 99.9258 110.81 99.9258 cv110.687 99.9258 110.625 100.02 110.625 100.236 cv110.625 108.891 li110.625 109.111 110.653 109.207 110.81 109.207 cv111.217 109.207 115.077 109.207 115.798 109.145 cv116.548 109.082 116.989 109.018 117.271 108.703 cv117.491 108.455 117.615 108.297 117.739 108.297 cv117.835 108.297 117.897 108.363 117.897 108.545 cv117.897 108.736 117.739 109.271 117.644 110.303 cv117.585 110.932 117.52 112.094 117.52 112.309 cv117.52 112.563 117.52 112.906 117.302 112.906 cv117.146 112.906 117.085 112.781 117.085 112.623 cv117.085 112.309 117.085 112 116.956 111.588 cv116.831 111.15 116.548 110.617 115.325 110.492 cv114.479 110.398 111.377 110.336 110.844 110.336 cv110.687 110.336 110.625 110.43 110.625 110.555 cv110.625 113.311 li110.625 114.379 110.591 118.02 110.625 118.676 cv110.717 120.838 111.187 121.248 114.26 121.248 cv115.077 121.248 116.454 121.248 117.271 120.902 cv118.086 120.559 118.464 119.932 118.678 118.646 cv118.743 118.299 118.808 118.176 118.962 118.176 cv119.151 118.176 119.151 118.428 119.151 118.646 cv119.151 118.896 118.901 121.027 118.743 121.688 cv118.525 122.502 118.273 122.502 117.052 122.502 cv112.313 122.502 110.215 122.313 109.306 122.313 cv109.244 122.313 108.708 122.344 108.053 122.344 cv107.423 122.375 106.704 122.406 106.233 122.406 cv105.888 122.406 105.731 122.344 105.731 122.156 cv105.731 122.064 105.792 121.967 105.981 121.967 cv106.265 121.967 106.643 121.908 106.922 121.84 cv107.547 121.715 107.707 121.027 107.831 120.117 cv107.989 118.801 107.989 116.322 107.989 113.311 cv107.989 107.795 li107.989 107.795 licpf107.989 107.795 mo107.989 102.904 107.989 102.025 107.926 101.023 cv107.865 99.959 107.611 99.4531 106.577 99.2344 cv106.327 99.1719 105.792 99.1426 105.51 99.1426 cv105.387 99.1426 105.259 99.0801 105.259 98.9531 cv105.259 98.7637 105.417 98.7031 105.763 98.7031 cv107.177 98.7031 109.147 98.7969 109.306 98.7969 cv109.525 98.7969 115.765 98.7969 116.485 98.7637 cv117.085 98.7324 117.585 98.6738 117.835 98.6074 cv117.989 98.5781 118.114 98.4512 118.273 98.4512 cv118.367 98.4512 118.397 98.5781 118.397 98.7324 cv118.397 98.9531 118.243 99.3281 118.147 100.209 cv118.114 100.52 118.05 101.898 117.989 102.275 cv117.961 102.436 117.897 102.621 117.774 102.621 cv117.585 102.621 117.52 102.463 117.52 102.215 cv117.52 101.992 117.491 101.461 117.335 101.084 cv117.114 100.584 116.8 100.209 115.107 100.02 cv114.575 99.959 111.155 99.9258 110.81 99.9258 cv110.687 99.9258 110.625 100.02 110.625 100.236 cv110.625 108.891 li110.625 109.111 110.653 109.207 110.81 109.207 cv111.217 109.207 115.077 109.207 115.798 109.145 cv116.548 109.082 116.989 109.018 117.271 108.703 cv117.491 108.455 117.615 108.297 117.739 108.297 cv117.835 108.297 117.897 108.363 117.897 108.545 cv117.897 108.736 117.739 109.271 117.644 110.303 cv117.585 110.932 117.52 112.094 117.52 112.309 cv117.52 112.563 117.52 112.906 117.302 112.906 cv117.146 112.906 117.085 112.781 117.085 112.623 cv117.085 112.309 117.085 112 116.956 111.588 cv116.831 111.15 116.548 110.617 115.325 110.492 cv114.479 110.398 111.377 110.336 110.844 110.336 cv110.687 110.336 110.625 110.43 110.625 110.555 cv110.625 113.311 li110.625 114.379 110.591 118.02 110.625 118.676 cv110.717 120.838 111.187 121.248 114.26 121.248 cv115.077 121.248 116.454 121.248 117.271 120.902 cv118.086 120.559 118.464 119.932 118.678 118.646 cv118.743 118.299 118.808 118.176 118.962 118.176 cv119.151 118.176 119.151 118.428 119.151 118.646 cv119.151 118.896 118.901 121.027 118.743 121.688 cv118.525 122.502 118.273 122.502 117.052 122.502 cv112.313 122.502 110.215 122.313 109.306 122.313 cv109.244 122.313 108.708 122.344 108.053 122.344 cv107.423 122.375 106.704 122.406 106.233 122.406 cv105.888 122.406 105.731 122.344 105.731 122.156 cv105.731 122.064 105.792 121.967 105.981 121.967 cv106.265 121.967 106.643 121.908 106.922 121.84 cv107.547 121.715 107.707 121.027 107.831 120.117 cv107.989 118.801 107.989 116.322 107.989 113.311 cv107.989 107.795 li107.989 107.795 licp@129.751 113.311 mo129.751 116.322 129.751 118.801 129.591 120.117 cv129.468 121.027 129.312 121.715 128.683 121.84 cv128.399 121.908 128.027 121.967 127.739 121.967 cv127.554 121.967 127.491 122.064 127.491 122.156 cv127.491 122.344 127.651 122.406 127.995 122.406 cv128.938 122.406 130.911 122.313 130.943 122.313 cv131.097 122.313 133.075 122.406 134.8 122.406 cv135.144 122.406 135.3 122.313 135.3 122.156 cv135.3 122.064 135.237 121.967 135.048 121.967 cv134.767 121.967 134.079 121.908 133.64 121.84 cv132.699 121.715 132.509 121.027 132.411 120.117 cv132.258 118.801 132.258 116.322 132.258 113.311 cv132.258 112.563 li132.258 112.404 132.323 112.309 132.476 112.309 cv136.337 112.373 li136.525 112.373 136.615 112.436 136.743 112.563 cv137.37 113.379 138.849 115.48 140.161 117.201 cv141.947 119.555 143.046 121.092 144.396 121.813 cv145.207 122.25 145.993 122.406 147.749 122.406 cv149.976 122.406 li150.54 122.406 150.726 122.344 150.726 122.156 cv150.726 122.064 150.602 121.967 150.445 121.967 cv150.256 121.967 149.817 121.967 149.22 121.875 cv148.439 121.75 147.088 121.404 145.397 119.615 cv143.577 117.676 141.447 114.881 138.874 111.588 cv141.696 108.988 142.665 106.666 142.665 104.346 cv142.665 102.184 141.288 100.646 140.505 100.082 cv138.849 98.8887 136.743 98.7031 134.767 98.7031 cv133.794 98.7031 131.413 98.7969 131.071 98.7969 cv130.911 98.7969 128.938 98.7031 127.524 98.7031 cv127.179 98.7031 127.021 98.7637 127.021 98.9531 cv127.021 99.0801 127.146 99.1426 127.271 99.1426 cv127.554 99.1426 128.086 99.1719 128.34 99.2344 cv129.374 99.4531 129.629 99.959 129.688 101.023 cv129.751 102.025 129.751 102.904 129.751 107.795 cv129.751 113.311 li129.751 113.311 licp132.258 100.268 mo132.258 100.082 132.352 99.959 132.509 99.8926 cv132.823 99.7988 133.669 99.7051 134.606 99.7051 cv137.966 99.7051 140.036 102.059 140.036 105.975 cv140.036 108.363 139.22 110.051 138.118 110.803 cv137.399 111.307 136.525 111.402 135.77 111.402 cv134.388 111.402 132.95 111.182 132.476 110.9 cv132.323 110.803 132.258 110.68 132.258 110.523 cv132.258 100.268 li132.258 100.268 licpf129.751 113.311 mo129.751 116.322 129.751 118.801 129.591 120.117 cv129.468 121.027 129.312 121.715 128.683 121.84 cv128.399 121.908 128.027 121.967 127.739 121.967 cv127.554 121.967 127.491 122.064 127.491 122.156 cv127.491 122.344 127.651 122.406 127.995 122.406 cv128.938 122.406 130.911 122.313 130.943 122.313 cv131.097 122.313 133.075 122.406 134.8 122.406 cv135.144 122.406 135.3 122.313 135.3 122.156 cv135.3 122.064 135.237 121.967 135.048 121.967 cv134.767 121.967 134.079 121.908 133.64 121.84 cv132.699 121.715 132.509 121.027 132.411 120.117 cv132.258 118.801 132.258 116.322 132.258 113.311 cv132.258 112.563 li132.258 112.404 132.323 112.309 132.476 112.309 cv136.337 112.373 li136.525 112.373 136.615 112.436 136.743 112.563 cv137.37 113.379 138.849 115.48 140.161 117.201 cv141.947 119.555 143.046 121.092 144.396 121.813 cv145.207 122.25 145.993 122.406 147.749 122.406 cv149.976 122.406 li150.54 122.406 150.726 122.344 150.726 122.156 cv150.726 122.064 150.602 121.967 150.445 121.967 cv150.256 121.967 149.817 121.967 149.22 121.875 cv148.439 121.75 147.088 121.404 145.397 119.615 cv143.577 117.676 141.447 114.881 138.874 111.588 cv141.696 108.988 142.665 106.666 142.665 104.346 cv142.665 102.184 141.288 100.646 140.505 100.082 cv138.849 98.8887 136.743 98.7031 134.767 98.7031 cv133.794 98.7031 131.413 98.7969 131.071 98.7969 cv130.911 98.7969 128.938 98.7031 127.524 98.7031 cv127.179 98.7031 127.021 98.7637 127.021 98.9531 cv127.021 99.0801 127.146 99.1426 127.271 99.1426 cv127.554 99.1426 128.086 99.1719 128.34 99.2344 cv129.374 99.4531 129.629 99.959 129.688 101.023 cv129.751 102.025 129.751 102.904 129.751 107.795 cv129.751 113.311 li129.751 113.311 licp132.258 100.268 mo132.258 100.082 132.352 99.959 132.509 99.8926 cv132.823 99.7988 133.669 99.7051 134.606 99.7051 cv137.966 99.7051 140.036 102.059 140.036 105.975 cv140.036 108.363 139.22 110.051 138.118 110.803 cv137.399 111.307 136.525 111.402 135.77 111.402 cv134.388 111.402 132.95 111.182 132.476 110.9 cv132.323 110.803 132.258 110.68 132.258 110.523 cv132.258 100.268 li132.258 100.268 licp@153.715 122 mo153.276 121.781 153.246 121.656 153.246 120.809 cv153.246 119.238 153.369 117.982 153.402 117.484 cv153.431 117.139 153.496 116.98 153.65 116.98 cv153.839 116.98 153.872 117.074 153.872 117.328 cv153.872 117.609 153.872 118.051 153.966 118.488 cv154.437 120.809 156.507 121.688 158.606 121.688 cv161.615 121.688 163.088 119.521 163.088 117.516 cv163.088 115.352 162.181 114.1 159.482 111.873 cv158.073 110.711 li154.749 107.982 153.996 106.039 153.996 103.908 cv153.996 100.553 156.507 98.2617 160.487 98.2617 cv161.707 98.2617 162.618 98.3887 163.404 98.5781 cv164.001 98.7031 164.252 98.7324 164.499 98.7324 cv164.751 98.7324 164.816 98.7969 164.816 98.9531 cv164.816 99.1074 164.692 100.145 164.692 102.275 cv164.692 102.779 164.623 102.998 164.471 102.998 cv164.281 102.998 164.252 102.842 164.219 102.592 cv164.187 102.215 164.001 101.367 163.81 101.023 cv163.623 100.68 162.774 99.3594 159.895 99.3594 cv157.727 99.3594 156.031 100.709 156.031 102.998 cv156.031 104.783 156.912 105.852 159.857 108.264 cv160.738 108.955 li164.435 111.873 165.316 113.816 165.316 116.322 cv165.316 117.609 164.816 119.992 162.65 121.529 cv161.307 122.469 159.609 122.848 157.918 122.848 cv156.44 122.848 155.003 122.627 153.715 122 cv153.715 122 licpf153.715 122 mo153.276 121.781 153.246 121.656 153.246 120.809 cv153.246 119.238 153.369 117.982 153.402 117.484 cv153.431 117.139 153.496 116.98 153.65 116.98 cv153.839 116.98 153.872 117.074 153.872 117.328 cv153.872 117.609 153.872 118.051 153.966 118.488 cv154.437 120.809 156.507 121.688 158.606 121.688 cv161.615 121.688 163.088 119.521 163.088 117.516 cv163.088 115.352 162.181 114.1 159.482 111.873 cv158.073 110.711 li154.749 107.982 153.996 106.039 153.996 103.908 cv153.996 100.553 156.507 98.2617 160.487 98.2617 cv161.707 98.2617 162.618 98.3887 163.404 98.5781 cv164.001 98.7031 164.252 98.7324 164.499 98.7324 cv164.751 98.7324 164.816 98.7969 164.816 98.9531 cv164.816 99.1074 164.692 100.145 164.692 102.275 cv164.692 102.779 164.623 102.998 164.471 102.998 cv164.281 102.998 164.252 102.842 164.219 102.592 cv164.187 102.215 164.001 101.367 163.81 101.023 cv163.623 100.68 162.774 99.3594 159.895 99.3594 cv157.727 99.3594 156.031 100.709 156.031 102.998 cv156.031 104.783 156.912 105.852 159.857 108.264 cv160.738 108.955 li164.435 111.873 165.316 113.816 165.316 116.322 cv165.316 117.609 164.816 119.992 162.65 121.529 cv161.307 122.469 159.609 122.848 157.918 122.848 cv156.44 122.848 155.003 122.627 153.715 122 cv153.715 122 licp@178.861 113.311 mo178.861 116.322 178.861 118.801 179.019 120.117 cv179.11 121.027 179.301 121.715 180.242 121.84 cv180.681 121.908 181.373 121.967 181.654 121.967 cv181.841 121.967 181.902 122.064 181.902 122.156 cv181.902 122.313 181.746 122.406 181.402 122.406 cv179.677 122.406 177.7 122.313 177.544 122.313 cv177.387 122.313 175.409 122.406 174.471 122.406 cv174.125 122.406 173.971 122.344 173.971 122.156 cv173.971 122.064 174.033 121.967 174.22 121.967 cv174.503 121.967 174.881 121.908 175.159 121.84 cv175.788 121.715 175.944 121.027 176.07 120.117 cv176.226 118.801 176.226 116.322 176.226 113.311 cv176.226 107.795 li176.226 102.904 176.226 102.025 176.164 101.023 cv176.101 99.959 175.788 99.4238 175.101 99.2676 cv174.754 99.1719 174.344 99.1426 174.125 99.1426 cv174.001 99.1426 173.877 99.0801 173.877 98.9531 cv173.877 98.7637 174.033 98.7031 174.379 98.7031 cv175.409 98.7031 177.387 98.7969 177.544 98.7969 cv177.7 98.7969 179.677 98.7031 180.619 98.7031 cv180.96 98.7031 181.119 98.7637 181.119 98.9531 cv181.119 99.0801 180.991 99.1426 180.868 99.1426 cv180.648 99.1426 180.46 99.1719 180.087 99.2344 cv179.236 99.3906 178.986 99.9258 178.924 101.023 cv178.861 102.025 178.861 102.904 178.861 107.795 cv178.861 113.311 li178.861 113.311 licpf178.861 113.311 mo178.861 116.322 178.861 118.801 179.019 120.117 cv179.11 121.027 179.301 121.715 180.242 121.84 cv180.681 121.908 181.373 121.967 181.654 121.967 cv181.841 121.967 181.902 122.064 181.902 122.156 cv181.902 122.313 181.746 122.406 181.402 122.406 cv179.677 122.406 177.7 122.313 177.544 122.313 cv177.387 122.313 175.409 122.406 174.471 122.406 cv174.125 122.406 173.971 122.344 173.971 122.156 cv173.971 122.064 174.033 121.967 174.22 121.967 cv174.503 121.967 174.881 121.908 175.159 121.84 cv175.788 121.715 175.944 121.027 176.07 120.117 cv176.226 118.801 176.226 116.322 176.226 113.311 cv176.226 107.795 li176.226 102.904 176.226 102.025 176.164 101.023 cv176.101 99.959 175.788 99.4238 175.101 99.2676 cv174.754 99.1719 174.344 99.1426 174.125 99.1426 cv174.001 99.1426 173.877 99.0801 173.877 98.9531 cv173.877 98.7637 174.033 98.7031 174.379 98.7031 cv175.409 98.7031 177.387 98.7969 177.544 98.7969 cv177.7 98.7969 179.677 98.7031 180.619 98.7031 cv180.96 98.7031 181.119 98.7637 181.119 98.9531 cv181.119 99.0801 180.991 99.1426 180.868 99.1426 cv180.648 99.1426 180.46 99.1719 180.087 99.2344 cv179.236 99.3906 178.986 99.9258 178.924 101.023 cv178.861 102.025 178.861 102.904 178.861 107.795 cv178.861 113.311 li178.861 113.311 licp@199.335 113.311 mo199.335 116.322 199.335 118.801 199.494 120.117 cv199.591 121.027 199.774 121.715 200.716 121.84 cv201.153 121.908 201.845 121.967 202.125 121.967 cv202.313 121.967 202.383 122.064 202.383 122.156 cv202.383 122.313 202.223 122.406 201.877 122.406 cv200.151 122.406 198.175 122.313 198.019 122.313 cv197.867 122.313 195.889 122.406 194.948 122.406 cv194.602 122.406 194.446 122.344 194.446 122.156 cv194.446 122.064 194.507 121.967 194.698 121.967 cv194.978 121.967 195.355 121.908 195.637 121.84 cv196.263 121.715 196.417 121.027 196.548 120.117 cv196.704 118.801 196.704 116.322 196.704 113.311 cv196.704 100.051 li192.063 100.111 li190.115 100.145 189.363 100.363 188.864 101.115 cv188.521 101.648 188.427 101.867 188.329 102.092 cv188.233 102.34 188.144 102.402 188.016 102.402 cv187.925 102.402 187.861 102.307 187.861 102.117 cv187.861 101.807 188.485 99.1074 188.551 98.8555 cv188.615 98.6738 188.74 98.2617 188.864 98.2617 cv189.085 98.2617 189.396 98.5781 190.247 98.6387 cv191.151 98.7324 192.345 98.7969 192.723 98.7969 cv204.48 98.7969 li205.482 98.7969 206.201 98.7031 206.706 98.6387 cv207.177 98.5449 207.457 98.4824 207.583 98.4824 cv207.739 98.4824 207.739 98.6738 207.739 98.8555 cv207.739 99.7988 207.649 101.963 207.649 102.307 cv207.649 102.592 207.553 102.715 207.427 102.715 cv207.269 102.715 207.208 102.621 207.177 102.184 cv207.143 101.84 li207.019 100.898 206.297 100.176 203.284 100.111 cv199.335 100.051 li199.335 113.311 li199.335 113.311 licpf199.335 113.311 mo199.335 116.322 199.335 118.801 199.494 120.117 cv199.591 121.027 199.774 121.715 200.716 121.84 cv201.153 121.908 201.845 121.967 202.125 121.967 cv202.313 121.967 202.383 122.064 202.383 122.156 cv202.383 122.313 202.223 122.406 201.877 122.406 cv200.151 122.406 198.175 122.313 198.019 122.313 cv197.867 122.313 195.889 122.406 194.948 122.406 cv194.602 122.406 194.446 122.344 194.446 122.156 cv194.446 122.064 194.507 121.967 194.698 121.967 cv194.978 121.967 195.355 121.908 195.637 121.84 cv196.263 121.715 196.417 121.027 196.548 120.117 cv196.704 118.801 196.704 116.322 196.704 113.311 cv196.704 100.051 li192.063 100.111 li190.115 100.145 189.363 100.363 188.864 101.115 cv188.521 101.648 188.427 101.867 188.329 102.092 cv188.233 102.34 188.144 102.402 188.016 102.402 cv187.925 102.402 187.861 102.307 187.861 102.117 cv187.861 101.807 188.485 99.1074 188.551 98.8555 cv188.615 98.6738 188.74 98.2617 188.864 98.2617 cv189.085 98.2617 189.396 98.5781 190.247 98.6387 cv191.151 98.7324 192.345 98.7969 192.723 98.7969 cv204.48 98.7969 li205.482 98.7969 206.201 98.7031 206.706 98.6387 cv207.177 98.5449 207.457 98.4824 207.583 98.4824 cv207.739 98.4824 207.739 98.6738 207.739 98.8555 cv207.739 99.7988 207.649 101.963 207.649 102.307 cv207.649 102.592 207.553 102.715 207.427 102.715 cv207.269 102.715 207.208 102.621 207.177 102.184 cv207.143 101.84 li207.019 100.898 206.297 100.176 203.284 100.111 cv199.335 100.051 li199.335 113.311 li199.335 113.311 licp@221.127 114.287 mo221.127 112.594 220.815 111.902 220.408 110.992 cv220.187 110.492 215.987 103.596 214.891 101.963 cv214.104 100.803 213.321 100.02 212.755 99.6426 cv212.285 99.3281 211.69 99.1426 211.409 99.1426 cv211.25 99.1426 211.095 99.0801 211.095 98.9238 cv211.095 98.7969 211.219 98.7031 211.499 98.7031 cv212.097 98.7031 214.451 98.7969 214.607 98.7969 cv214.829 98.7969 216.015 98.7031 217.243 98.7031 cv217.587 98.7031 217.648 98.7969 217.648 98.9238 cv217.648 99.0469 217.465 99.0801 217.179 99.2031 cv216.927 99.3281 216.772 99.5176 216.772 99.7676 cv216.772 100.145 216.927 100.52 217.179 100.992 cv217.677 101.898 222.383 109.99 222.949 110.9 cv223.545 109.582 227.523 102.715 228.15 101.682 cv228.561 101.023 228.688 100.486 228.688 100.082 cv228.688 99.6426 228.561 99.2988 228.182 99.2031 cv227.901 99.1074 227.712 99.0469 227.712 98.8887 cv227.712 98.7637 227.901 98.7031 228.217 98.7031 cv229.03 98.7031 230.032 98.7969 230.283 98.7969 cv230.473 98.7969 232.729 98.7031 233.323 98.7031 cv233.543 98.7031 233.734 98.7637 233.734 98.8887 cv233.734 99.0469 233.578 99.1426 233.323 99.1426 cv232.984 99.1426 232.384 99.2676 231.883 99.5801 cv231.259 99.959 230.91 100.336 230.224 101.18 cv229.185 102.436 224.793 109.801 224.234 111.15 cv223.765 112.279 223.765 113.252 223.765 114.287 cv223.765 116.98 li223.765 117.484 223.765 118.801 223.856 120.117 cv223.919 121.027 224.199 121.715 225.139 121.84 cv225.581 121.908 226.27 121.967 226.551 121.967 cv226.743 121.967 226.807 122.064 226.807 122.156 cv226.807 122.313 226.646 122.406 226.301 122.406 cv224.575 122.406 222.606 122.313 222.444 122.313 cv222.288 122.313 220.314 122.406 219.374 122.406 cv219.027 122.406 218.871 122.344 218.871 122.156 cv218.871 122.064 218.933 121.967 219.123 121.967 cv219.403 121.967 219.778 121.908 220.063 121.84 cv220.691 121.715 220.975 121.027 221.034 120.117 cv221.127 118.801 221.127 117.484 221.127 116.98 cv221.127 114.287 li221.127 114.287 licpf221.127 114.287 mo221.127 112.594 220.815 111.902 220.408 110.992 cv220.187 110.492 215.987 103.596 214.891 101.963 cv214.104 100.803 213.321 100.02 212.755 99.6426 cv212.285 99.3281 211.69 99.1426 211.409 99.1426 cv211.25 99.1426 211.095 99.0801 211.095 98.9238 cv211.095 98.7969 211.219 98.7031 211.499 98.7031 cv212.097 98.7031 214.451 98.7969 214.607 98.7969 cv214.829 98.7969 216.015 98.7031 217.243 98.7031 cv217.587 98.7031 217.648 98.7969 217.648 98.9238 cv217.648 99.0469 217.465 99.0801 217.179 99.2031 cv216.927 99.3281 216.772 99.5176 216.772 99.7676 cv216.772 100.145 216.927 100.52 217.179 100.992 cv217.677 101.898 222.383 109.99 222.949 110.9 cv223.545 109.582 227.523 102.715 228.15 101.682 cv228.561 101.023 228.688 100.486 228.688 100.082 cv228.688 99.6426 228.561 99.2988 228.182 99.2031 cv227.901 99.1074 227.712 99.0469 227.712 98.8887 cv227.712 98.7637 227.901 98.7031 228.217 98.7031 cv229.03 98.7031 230.032 98.7969 230.283 98.7969 cv230.473 98.7969 232.729 98.7031 233.323 98.7031 cv233.543 98.7031 233.734 98.7637 233.734 98.8887 cv233.734 99.0469 233.578 99.1426 233.323 99.1426 cv232.984 99.1426 232.384 99.2676 231.883 99.5801 cv231.259 99.959 230.91 100.336 230.224 101.18 cv229.185 102.436 224.793 109.801 224.234 111.15 cv223.765 112.279 223.765 113.252 223.765 114.287 cv223.765 116.98 li223.765 117.484 223.765 118.801 223.856 120.117 cv223.919 121.027 224.199 121.715 225.139 121.84 cv225.581 121.908 226.27 121.967 226.551 121.967 cv226.743 121.967 226.807 122.064 226.807 122.156 cv226.807 122.313 226.646 122.406 226.301 122.406 cv224.575 122.406 222.606 122.313 222.444 122.313 cv222.288 122.313 220.314 122.406 219.374 122.406 cv219.027 122.406 218.871 122.344 218.871 122.156 cv218.871 122.064 218.933 121.967 219.123 121.967 cv219.403 121.967 219.778 121.908 220.063 121.84 cv220.691 121.715 220.975 121.027 221.034 120.117 cv221.127 118.801 221.127 117.484 221.127 116.98 cv221.127 114.287 li221.127 114.287 licp@45.2964 144.385 mo45.2964 147.961 47.5601 152.197 53.0088 152.197 cv57.7979 152.197 60.9409 148.52 60.9409 144.068 cv60.9409 139.434 57.6011 136.613 53.126 136.613 cv47.6396 136.613 45.2964 141.162 45.2964 144.385 cv45.2964 144.385 licp47.1821 143.826 mo47.1821 139.475 49.6675 137.289 52.9873 137.289 cv56.1289 137.289 59.0322 139.854 59.0322 144.625 cv59.0322 150.408 55.3325 151.443 53.543 151.443 cv49.9673 151.443 47.1821 148.461 47.1821 143.826 cv47.1821 143.826 licpf0.3 lw45.2964 144.385 mo45.2964 147.961 47.5601 152.197 53.0088 152.197 cv57.7979 152.197 60.9409 148.52 60.9409 144.068 cv60.9409 139.434 57.6011 136.613 53.126 136.613 cv47.6396 136.613 45.2964 141.162 45.2964 144.385 cv45.2964 144.385 licp47.1821 143.826 mo47.1821 139.475 49.6675 137.289 52.9873 137.289 cv56.1289 137.289 59.0322 139.854 59.0322 144.625 cv59.0322 150.408 55.3325 151.443 53.543 151.443 cv49.9673 151.443 47.1821 148.461 47.1821 143.826 cv47.1821 143.826 licp@66.8281 142.656 mo66.8281 139.557 66.8281 138.998 66.7871 138.359 cv66.748 137.688 66.5864 137.367 65.9341 137.229 cv65.7725 137.189 65.4355 137.17 65.2583 137.17 cv65.1787 137.17 65.0986 137.129 65.0986 137.049 cv65.0986 136.928 65.1982 136.889 65.4146 136.889 cv66.312 136.889 67.5645 136.947 67.6631 136.947 cv68.0591 136.947 72.0942 136.947 72.5537 136.928 cv72.9316 136.908 73.2476 136.908 73.4243 136.85 cv73.5469 136.813 73.625 136.732 73.7051 136.732 cv73.7847 136.732 73.8252 136.813 73.8252 136.908 cv73.8252 137.049 73.7275 137.289 73.6655 137.846 cv73.646 138.045 73.6055 138.918 73.5664 139.156 cv73.5469 139.258 73.5059 139.375 73.4067 139.375 cv73.3071 139.375 73.2705 139.275 73.2705 139.135 cv73.2705 138.977 73.2085 138.641 73.0894 138.383 cv72.9707 138.125 72.5093 137.766 71.7378 137.746 cv68.6743 137.688 li68.5571 137.688 68.4951 137.746 68.4951 137.9 cv68.4951 143.391 li68.4951 143.512 68.5181 143.57 68.6372 143.57 cv71.1792 143.551 li71.5215 143.551 71.7964 143.551 72.0767 143.529 cv72.5537 143.49 72.8125 143.43 72.9917 143.172 cv73.0698 143.07 73.127 142.973 73.2085 142.973 cv73.2876 142.973 73.3071 143.031 73.3071 143.133 cv73.3071 143.252 73.2085 143.59 73.1499 144.246 cv73.1108 144.643 73.0698 145.438 73.0698 145.576 cv73.0698 145.756 73.0698 145.955 72.9316 145.955 cv72.8306 145.955 72.7896 145.875 72.7896 145.775 cv72.772 145.576 72.7505 145.299 72.6709 145.061 cv72.5713 144.783 72.2559 144.424 71.6401 144.346 cv71.1421 144.285 68.9741 144.285 68.6372 144.285 cv68.5361 144.285 68.4951 144.324 68.4951 144.467 cv68.4951 146.154 li68.4951 148.061 68.4951 149.631 68.5962 150.473 cv68.6567 151.043 68.7754 151.482 69.3721 151.561 cv69.6514 151.6 70.0884 151.643 70.2656 151.643 cv70.3843 151.643 70.4268 151.699 70.4268 151.76 cv70.4268 151.859 70.3276 151.918 70.1079 151.918 cv69.0132 151.918 67.7627 151.859 67.6631 151.859 cv67.5645 151.859 66.312 151.918 65.7158 151.918 cv65.4961 151.918 65.397 151.879 65.397 151.76 cv65.397 151.699 65.4355 151.643 65.5562 151.643 cv65.7354 151.643 65.9731 151.6 66.1504 151.561 cv66.5474 151.482 66.6484 151.043 66.7266 150.473 cv66.8281 149.631 66.8281 148.061 66.8281 146.154 cv66.8281 142.656 li66.8281 142.656 licpf66.8281 142.656 mo66.8281 139.557 66.8281 138.998 66.7871 138.359 cv66.748 137.688 66.5864 137.367 65.9341 137.229 cv65.7725 137.189 65.4355 137.17 65.2583 137.17 cv65.1787 137.17 65.0986 137.129 65.0986 137.049 cv65.0986 136.928 65.1982 136.889 65.4146 136.889 cv66.312 136.889 67.5645 136.947 67.6631 136.947 cv68.0591 136.947 72.0942 136.947 72.5537 136.928 cv72.9316 136.908 73.2476 136.908 73.4243 136.85 cv73.5469 136.813 73.625 136.732 73.7051 136.732 cv73.7847 136.732 73.8252 136.813 73.8252 136.908 cv73.8252 137.049 73.7275 137.289 73.6655 137.846 cv73.646 138.045 73.6055 138.918 73.5664 139.156 cv73.5469 139.258 73.5059 139.375 73.4067 139.375 cv73.3071 139.375 73.2705 139.275 73.2705 139.135 cv73.2705 138.977 73.2085 138.641 73.0894 138.383 cv72.9707 138.125 72.5093 137.766 71.7378 137.746 cv68.6743 137.688 li68.5571 137.688 68.4951 137.746 68.4951 137.9 cv68.4951 143.391 li68.4951 143.512 68.5181 143.57 68.6372 143.57 cv71.1792 143.551 li71.5215 143.551 71.7964 143.551 72.0767 143.529 cv72.5537 143.49 72.8125 143.43 72.9917 143.172 cv73.0698 143.07 73.127 142.973 73.2085 142.973 cv73.2876 142.973 73.3071 143.031 73.3071 143.133 cv73.3071 143.252 73.2085 143.59 73.1499 144.246 cv73.1108 144.643 73.0698 145.438 73.0698 145.576 cv73.0698 145.756 73.0698 145.955 72.9316 145.955 cv72.8306 145.955 72.7896 145.875 72.7896 145.775 cv72.772 145.576 72.7505 145.299 72.6709 145.061 cv72.5713 144.783 72.2559 144.424 71.6401 144.346 cv71.1421 144.285 68.9741 144.285 68.6372 144.285 cv68.5361 144.285 68.4951 144.324 68.4951 144.467 cv68.4951 146.154 li68.4951 148.061 68.4951 149.631 68.5962 150.473 cv68.6567 151.043 68.7754 151.482 69.3721 151.561 cv69.6514 151.6 70.0884 151.643 70.2656 151.643 cv70.3843 151.643 70.4268 151.699 70.4268 151.76 cv70.4268 151.859 70.3276 151.918 70.1079 151.918 cv69.0132 151.918 67.7627 151.859 67.6631 151.859 cv67.5645 151.859 66.312 151.918 65.7158 151.918 cv65.4961 151.918 65.397 151.879 65.397 151.76 cv65.397 151.699 65.4355 151.643 65.5562 151.643 cv65.7354 151.643 65.9731 151.6 66.1504 151.561 cv66.5474 151.482 66.6484 151.043 66.7266 150.473 cv66.8281 149.631 66.8281 148.061 66.8281 146.154 cv66.8281 142.656 li66.8281 142.656 licp@88.6235 145.777 mo88.6235 140.885 88.6235 140.006 88.5615 139.002 cv88.4995 137.938 88.249 137.438 87.2148 137.219 cv86.9634 137.156 86.4297 137.123 86.146 137.123 cv86.0215 137.123 85.8975 137.063 85.8975 136.936 cv85.8975 136.746 86.0518 136.686 86.3975 136.686 cv87.8081 136.686 89.7231 136.777 90.0039 136.777 cv90.2876 136.777 92.1694 136.686 93.1113 136.686 cv93.4536 136.686 93.6118 136.746 93.6118 136.936 cv93.6118 137.063 93.4873 137.123 93.3613 137.123 cv93.1416 137.123 92.9517 137.156 92.5757 137.219 cv91.7295 137.342 91.478 137.906 91.417 139.002 cv91.3516 140.006 91.3516 140.885 91.3516 145.777 cv91.3516 150.168 li91.3516 154.686 92.3574 156.627 93.7051 157.914 cv95.2417 159.354 96.6519 159.635 98.4414 159.635 cv100.35 159.635 102.231 158.727 103.363 157.379 cv104.805 155.594 105.178 152.93 105.178 149.697 cv105.178 145.777 li105.178 140.885 105.178 140.006 105.118 139.002 cv105.056 137.938 104.805 137.438 103.771 137.219 cv103.521 137.156 102.985 137.123 102.707 137.123 cv102.577 137.123 102.452 137.063 102.452 136.936 cv102.452 136.746 102.609 136.686 102.956 136.686 cv104.364 136.686 106.09 136.777 106.279 136.777 cv106.498 136.777 107.973 136.686 108.913 136.686 cv109.258 136.686 109.415 136.746 109.415 136.936 cv109.415 137.063 109.291 137.123 109.162 137.123 cv108.945 137.123 108.756 137.123 108.379 137.219 cv107.532 137.375 107.28 137.906 107.218 139.002 cv107.157 140.006 107.157 140.885 107.157 145.777 cv107.157 149.133 li107.157 152.518 106.782 156.283 104.273 158.51 cv102.014 160.514 99.6602 160.83 97.8135 160.83 cv96.7471 160.83 93.5776 160.707 91.3516 158.602 cv89.8174 157.131 88.6235 154.934 88.6235 150.355 cv88.6235 145.777 li88.6235 145.777 licpf0.25 lw88.6235 145.777 mo88.6235 140.885 88.6235 140.006 88.5615 139.002 cv88.4995 137.938 88.249 137.438 87.2148 137.219 cv86.9634 137.156 86.4297 137.123 86.146 137.123 cv86.0215 137.123 85.8975 137.063 85.8975 136.936 cv85.8975 136.746 86.0518 136.686 86.3975 136.686 cv87.8081 136.686 89.7231 136.777 90.0039 136.777 cv90.2876 136.777 92.1694 136.686 93.1113 136.686 cv93.4536 136.686 93.6118 136.746 93.6118 136.936 cv93.6118 137.063 93.4873 137.123 93.3613 137.123 cv93.1416 137.123 92.9517 137.156 92.5757 137.219 cv91.7295 137.342 91.478 137.906 91.417 139.002 cv91.3516 140.006 91.3516 140.885 91.3516 145.777 cv91.3516 150.168 li91.3516 154.686 92.3574 156.627 93.7051 157.914 cv95.2417 159.354 96.6519 159.635 98.4414 159.635 cv100.35 159.635 102.231 158.727 103.363 157.379 cv104.805 155.594 105.178 152.93 105.178 149.697 cv105.178 145.777 li105.178 140.885 105.178 140.006 105.118 139.002 cv105.056 137.938 104.805 137.438 103.771 137.219 cv103.521 137.156 102.985 137.123 102.707 137.123 cv102.577 137.123 102.452 137.063 102.452 136.936 cv102.452 136.746 102.609 136.686 102.956 136.686 cv104.364 136.686 106.09 136.777 106.279 136.777 cv106.498 136.777 107.973 136.686 108.913 136.686 cv109.258 136.686 109.415 136.746 109.415 136.936 cv109.415 137.063 109.291 137.123 109.162 137.123 cv108.945 137.123 108.756 137.123 108.379 137.219 cv107.532 137.375 107.28 137.906 107.218 139.002 cv107.157 140.006 107.157 140.885 107.157 145.777 cv107.157 149.133 li107.157 152.518 106.782 156.283 104.273 158.51 cv102.014 160.514 99.6602 160.83 97.8135 160.83 cv96.7471 160.83 93.5776 160.707 91.3516 158.602 cv89.8174 157.131 88.6235 154.934 88.6235 150.355 cv88.6235 145.777 li88.6235 145.777 licp@125.782 151.299 mo125.782 154.311 125.782 156.785 125.938 158.098 cv126.034 159.01 126.224 159.701 127.162 159.826 cv127.602 159.887 128.29 159.949 128.571 159.949 cv128.76 159.949 128.823 160.045 128.823 160.139 cv128.823 160.297 128.669 160.391 128.325 160.391 cv126.601 160.391 124.622 160.297 124.464 160.297 cv124.308 160.297 122.333 160.391 121.396 160.391 cv121.049 160.391 120.888 160.326 120.888 160.139 cv120.888 160.045 120.954 159.949 121.144 159.949 cv121.424 159.949 121.8 159.887 122.083 159.826 cv122.706 159.701 122.866 159.01 122.991 158.098 cv123.147 156.785 123.147 154.311 123.147 151.299 cv123.147 138.031 li118.506 138.098 li116.562 138.125 115.81 138.348 115.31 139.098 cv114.966 139.633 114.868 139.854 114.775 140.074 cv114.682 140.322 114.587 140.383 114.464 140.383 cv114.368 140.383 114.306 140.291 114.306 140.104 cv114.306 139.785 114.934 137.092 114.997 136.842 cv115.056 136.654 115.183 136.244 115.31 136.244 cv115.528 136.244 115.845 136.559 116.688 136.621 cv117.6 136.719 118.788 136.777 119.166 136.777 cv130.925 136.777 li131.924 136.777 132.647 136.686 133.151 136.621 cv133.62 136.525 133.901 136.467 134.028 136.467 cv134.187 136.467 134.187 136.654 134.187 136.842 cv134.187 137.781 134.09 139.945 134.09 140.291 cv134.09 140.574 133.997 140.699 133.872 140.699 cv133.717 140.699 133.653 140.604 133.62 140.164 cv133.591 139.82 li133.468 138.879 132.741 138.158 129.735 138.098 cv125.782 138.031 li125.782 151.299 li125.782 151.299 licpf125.782 151.299 mo125.782 154.311 125.782 156.785 125.938 158.098 cv126.034 159.01 126.224 159.701 127.162 159.826 cv127.602 159.887 128.29 159.949 128.571 159.949 cv128.76 159.949 128.823 160.045 128.823 160.139 cv128.823 160.297 128.669 160.391 128.325 160.391 cv126.601 160.391 124.622 160.297 124.464 160.297 cv124.308 160.297 122.333 160.391 121.396 160.391 cv121.049 160.391 120.888 160.326 120.888 160.139 cv120.888 160.045 120.954 159.949 121.144 159.949 cv121.424 159.949 121.8 159.887 122.083 159.826 cv122.706 159.701 122.866 159.01 122.991 158.098 cv123.147 156.785 123.147 154.311 123.147 151.299 cv123.147 138.031 li118.506 138.098 li116.562 138.125 115.81 138.348 115.31 139.098 cv114.966 139.633 114.868 139.854 114.775 140.074 cv114.682 140.322 114.587 140.383 114.464 140.383 cv114.368 140.383 114.306 140.291 114.306 140.104 cv114.306 139.785 114.934 137.092 114.997 136.842 cv115.056 136.654 115.183 136.244 115.31 136.244 cv115.528 136.244 115.845 136.559 116.688 136.621 cv117.6 136.719 118.788 136.777 119.166 136.777 cv130.925 136.777 li131.924 136.777 132.647 136.686 133.151 136.621 cv133.62 136.525 133.901 136.467 134.028 136.467 cv134.187 136.467 134.187 136.654 134.187 136.842 cv134.187 137.781 134.09 139.945 134.09 140.291 cv134.09 140.574 133.997 140.699 133.872 140.699 cv133.717 140.699 133.653 140.604 133.62 140.164 cv133.591 139.82 li133.468 138.879 132.741 138.158 129.735 138.098 cv125.782 138.031 li125.782 151.299 li125.782 151.299 licp@139.394 156.939 mo138.827 158.51 138.202 159.701 136.757 159.887 cv136.509 159.922 136.067 159.949 135.852 159.949 cv135.69 159.949 135.565 160.014 135.565 160.139 cv135.565 160.326 135.759 160.391 136.163 160.391 cv137.64 160.391 139.365 160.297 139.708 160.297 cv140.054 160.297 141.399 160.391 142.155 160.391 cv142.435 160.391 142.626 160.326 142.626 160.139 cv142.626 160.014 142.529 159.949 142.31 159.949 cv141.993 159.949 li141.464 159.949 140.806 159.67 140.806 159.041 cv140.806 158.479 140.958 157.725 141.245 156.939 cv143.124 151.393 li143.186 151.23 143.28 151.139 143.441 151.139 cv150.176 151.139 li150.339 151.139 150.397 151.203 150.463 151.326 cv153.377 159.041 li153.564 159.543 153.377 159.826 153.19 159.887 cv153.065 159.922 152.972 159.98 152.972 160.107 cv152.972 160.297 153.313 160.297 153.907 160.326 cv156.075 160.391 158.368 160.391 158.839 160.391 cv159.182 160.391 159.461 160.326 159.461 160.139 cv159.461 159.98 159.337 159.949 159.147 159.949 cv158.839 159.949 158.368 159.922 157.892 159.762 cv157.237 159.578 156.325 159.074 155.195 156.283 cv153.284 151.518 148.361 138.566 147.892 137.375 cv147.515 136.402 147.386 136.244 147.203 136.244 cv147.011 136.244 146.888 136.434 146.511 137.467 cv139.394 156.939 li139.394 156.939 licp143.784 150.012 mo143.691 150.012 143.626 149.947 143.691 149.795 cv146.446 141.326 li146.605 140.857 146.761 140.857 146.916 141.326 cv149.897 149.795 li149.928 149.918 149.928 150.012 149.771 150.012 cv143.784 150.012 li143.784 150.012 licpf139.394 156.939 mo138.827 158.51 138.202 159.701 136.757 159.887 cv136.509 159.922 136.067 159.949 135.852 159.949 cv135.69 159.949 135.565 160.014 135.565 160.139 cv135.565 160.326 135.759 160.391 136.163 160.391 cv137.64 160.391 139.365 160.297 139.708 160.297 cv140.054 160.297 141.399 160.391 142.155 160.391 cv142.435 160.391 142.626 160.326 142.626 160.139 cv142.626 160.014 142.529 159.949 142.31 159.949 cv141.993 159.949 li141.464 159.949 140.806 159.67 140.806 159.041 cv140.806 158.479 140.958 157.725 141.245 156.939 cv143.124 151.393 li143.186 151.23 143.28 151.139 143.441 151.139 cv150.176 151.139 li150.339 151.139 150.397 151.203 150.463 151.326 cv153.377 159.041 li153.564 159.543 153.377 159.826 153.19 159.887 cv153.065 159.922 152.972 159.98 152.972 160.107 cv152.972 160.297 153.313 160.297 153.907 160.326 cv156.075 160.391 158.368 160.391 158.839 160.391 cv159.182 160.391 159.461 160.326 159.461 160.139 cv159.461 159.98 159.337 159.949 159.147 159.949 cv158.839 159.949 158.368 159.922 157.892 159.762 cv157.237 159.578 156.325 159.074 155.195 156.283 cv153.284 151.518 148.361 138.566 147.892 137.375 cv147.515 136.402 147.386 136.244 147.203 136.244 cv147.011 136.244 146.888 136.434 146.511 137.467 cv139.394 156.939 li139.394 156.939 licp143.784 150.012 mo143.691 150.012 143.626 149.947 143.691 149.795 cv146.446 141.326 li146.605 140.857 146.761 140.857 146.916 141.326 cv149.897 149.795 li149.928 149.918 149.928 150.012 149.771 150.012 cv143.784 150.012 li143.784 150.012 licp@185.52 151.299 mo185.52 154.311 185.52 156.785 185.676 158.098 cv185.768 159.01 185.957 159.701 186.899 159.826 cv187.337 159.887 188.028 159.949 188.31 159.949 cv188.499 159.949 188.558 160.045 188.558 160.139 cv188.558 160.297 188.404 160.391 188.058 160.391 cv186.332 160.391 184.355 160.297 184.201 160.297 cv184.047 160.297 182.069 160.391 181.132 160.391 cv180.785 160.391 180.626 160.326 180.626 160.139 cv180.626 160.045 180.689 159.949 180.875 159.949 cv181.159 159.949 181.536 159.887 181.821 159.826 cv182.446 159.701 182.601 159.01 182.726 158.098 cv182.885 156.785 182.885 154.311 182.885 151.299 cv182.885 148.006 li182.885 147.879 182.792 147.816 182.695 147.816 cv169.4 147.816 li169.306 147.816 169.214 147.846 169.214 148.006 cv169.214 151.299 li169.214 154.311 169.214 156.785 169.369 158.098 cv169.463 159.01 169.649 159.701 170.592 159.826 cv171.031 159.887 171.721 159.949 172.004 159.949 cv172.193 159.949 172.255 160.045 172.255 160.139 cv172.255 160.297 172.098 160.391 171.752 160.391 cv170.027 160.391 168.054 160.297 167.896 160.297 cv167.739 160.297 165.766 160.391 164.823 160.391 cv164.479 160.391 164.323 160.326 164.323 160.139 cv164.323 160.045 164.383 159.949 164.575 159.949 cv164.854 159.949 165.228 159.887 165.513 159.826 cv166.139 159.701 166.298 159.01 166.425 158.098 cv166.579 156.785 166.579 154.311 166.579 151.299 cv166.579 145.777 li166.579 140.885 166.579 140.006 166.516 139.002 cv166.454 137.938 166.203 137.438 165.169 137.219 cv164.919 137.156 164.383 137.123 164.105 137.123 cv163.978 137.123 163.854 137.063 163.854 136.936 cv163.854 136.746 164.01 136.686 164.354 136.686 cv165.766 136.686 167.739 136.777 167.896 136.777 cv168.054 136.777 170.027 136.686 170.971 136.686 cv171.318 136.686 171.472 136.746 171.472 136.936 cv171.472 137.063 171.345 137.123 171.224 137.123 cv171.002 137.123 170.813 137.156 170.436 137.219 cv169.59 137.375 169.342 137.906 169.277 139.002 cv169.214 140.006 169.214 140.885 169.214 145.777 cv169.214 146.434 li169.214 146.594 169.306 146.627 169.4 146.627 cv182.695 146.627 li182.792 146.627 182.885 146.594 182.885 146.434 cv182.885 145.777 li182.885 140.885 182.885 140.006 182.819 139.002 cv182.76 137.938 182.508 137.438 181.475 137.219 cv181.22 137.156 180.689 137.123 180.405 137.123 cv180.28 137.123 180.153 137.063 180.153 136.936 cv180.153 136.746 180.315 136.686 180.661 136.686 cv182.069 136.686 184.047 136.777 184.201 136.777 cv184.355 136.777 186.332 136.686 187.272 136.686 cv187.62 136.686 187.777 136.746 187.777 136.936 cv187.777 137.063 187.649 137.123 187.523 137.123 cv187.309 137.123 187.118 137.156 186.743 137.219 cv185.896 137.375 185.644 137.906 185.582 139.002 cv185.52 140.006 185.52 140.885 185.52 145.777 cv185.52 151.299 li185.52 151.299 licpf185.52 151.299 mo185.52 154.311 185.52 156.785 185.676 158.098 cv185.768 159.01 185.957 159.701 186.899 159.826 cv187.337 159.887 188.028 159.949 188.31 159.949 cv188.499 159.949 188.558 160.045 188.558 160.139 cv188.558 160.297 188.404 160.391 188.058 160.391 cv186.332 160.391 184.355 160.297 184.201 160.297 cv184.047 160.297 182.069 160.391 181.132 160.391 cv180.785 160.391 180.626 160.326 180.626 160.139 cv180.626 160.045 180.689 159.949 180.875 159.949 cv181.159 159.949 181.536 159.887 181.821 159.826 cv182.446 159.701 182.601 159.01 182.726 158.098 cv182.885 156.785 182.885 154.311 182.885 151.299 cv182.885 148.006 li182.885 147.879 182.792 147.816 182.695 147.816 cv169.4 147.816 li169.306 147.816 169.214 147.846 169.214 148.006 cv169.214 151.299 li169.214 154.311 169.214 156.785 169.369 158.098 cv169.463 159.01 169.649 159.701 170.592 159.826 cv171.031 159.887 171.721 159.949 172.004 159.949 cv172.193 159.949 172.255 160.045 172.255 160.139 cv172.255 160.297 172.098 160.391 171.752 160.391 cv170.027 160.391 168.054 160.297 167.896 160.297 cv167.739 160.297 165.766 160.391 164.823 160.391 cv164.479 160.391 164.323 160.326 164.323 160.139 cv164.323 160.045 164.383 159.949 164.575 159.949 cv164.854 159.949 165.228 159.887 165.513 159.826 cv166.139 159.701 166.298 159.01 166.425 158.098 cv166.579 156.785 166.579 154.311 166.579 151.299 cv166.579 145.777 li166.579 140.885 166.579 140.006 166.516 139.002 cv166.454 137.938 166.203 137.438 165.169 137.219 cv164.919 137.156 164.383 137.123 164.105 137.123 cv163.978 137.123 163.854 137.063 163.854 136.936 cv163.854 136.746 164.01 136.686 164.354 136.686 cv165.766 136.686 167.739 136.777 167.896 136.777 cv168.054 136.777 170.027 136.686 170.971 136.686 cv171.318 136.686 171.472 136.746 171.472 136.936 cv171.472 137.063 171.345 137.123 171.224 137.123 cv171.002 137.123 170.813 137.156 170.436 137.219 cv169.59 137.375 169.342 137.906 169.277 139.002 cv169.214 140.006 169.214 140.885 169.214 145.777 cv169.214 146.434 li169.214 146.594 169.306 146.627 169.4 146.627 cv182.695 146.627 li182.792 146.627 182.885 146.594 182.885 146.434 cv182.885 145.777 li182.885 140.885 182.885 140.006 182.819 139.002 cv182.76 137.938 182.508 137.438 181.475 137.219 cv181.22 137.156 180.689 137.123 180.405 137.123 cv180.28 137.123 180.153 137.063 180.153 136.936 cv180.153 136.746 180.315 136.686 180.661 136.686 cv182.069 136.686 184.047 136.777 184.201 136.777 cv184.355 136.777 186.332 136.686 187.272 136.686 cv187.62 136.686 187.777 136.746 187.777 136.936 cv187.777 137.063 187.649 137.123 187.523 137.123 cv187.309 137.123 187.118 137.156 186.743 137.219 cv185.896 137.375 185.644 137.906 185.582 139.002 cv185.52 140.006 185.52 140.885 185.52 145.777 cv185.52 151.299 li185.52 151.299 licp@93.583 0.5 mo93.583 25.7754 li102.01 25.7754 li102.01 67.7959 li118.862 84.5391 li160.774 84.5391 li177.623 67.7959 li177.623 25.7754 li186.052 25.7754 li186.052 0.5 li144.028 0.5 li144.028 25.7754 li152.46 25.7754 li152.46 59.2642 li127.181 59.2642 li127.181 25.7754 li135.604 25.7754 li135.604 0.5 li93.583 0.5 li93.583 0.5 licpf1 lw4 ml93.583 0.5 mo93.583 25.7754 li102.01 25.7754 li102.01 67.7959 li118.862 84.5391 li160.774 84.5391 li177.623 67.7959 li177.623 25.7754 li186.052 25.7754 li186.052 0.5 li144.028 0.5 li144.028 25.7754 li152.46 25.7754 li152.46 59.2642 li127.181 59.2642 li127.181 25.7754 li135.604 25.7754 li135.604 0.5 li93.583 0.5 li93.583 0.5 licp@179.003 85.0469 mo178.81 82.167 li178.786 81.7949 178.81 81.3389 178.798 80.8706 cv178.763 80.8706 li178.642 81.3149 178.497 81.8184 178.354 82.2393 cv177.358 84.9873 li176.806 84.9873 li175.833 82.167 li175.714 81.7832 175.595 81.3149 175.485 80.8706 cv175.45 80.8706 li175.438 81.3267 175.45 81.7344 175.427 82.167 cv175.245 85.0469 li174.55 85.0469 li174.923 80.271 li175.87 80.271 li176.806 82.8623 li176.927 83.2227 177.022 83.6182 177.142 84.0635 cv177.165 84.0635 li177.274 83.6182 177.382 83.1982 177.501 82.8506 cv178.438 80.271 li179.374 80.271 li179.733 85.0469 li179.003 85.0469 licp174.382 80.271 mo174.382 80.8828 li172.917 80.8828 li172.917 85.0469 li172.198 85.0469 li172.198 80.8828 li170.745 80.8828 li170.745 80.271 li174.382 80.271 licpf%ADOBeginClientInjection: EndPageContent "AI11EPS"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI11EPS"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5[[/CSA [/0 ]]] del_resAdobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%%TrailerAdobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 12.0%%AI8_CreatorVersion: 12.0.1%%For: (UCOMM) (University of Utah)%%Title: (Ulogoâ¢_white.eps)%%CreationDate: 5/18/06 2:21 PM%AI9_DataStream%Gb"-6Bl@;!OWaK.mXO.2"#fY+SbqCa1dGB14eAP<JsVmS0F!88-'pJ68d1K[r;;$B`1D8Ba\,2O]"PImC(Z)Do&LE$HURks8(V[n%Hi;L<f3_n"q>YniiEO!O5$t)s/lJg,+8tE<^&6E=Dbo+mp>3(1APT3l@t30P9CPE]bj`p&S*/Zl]QjDCbI;D]^\INWj-s+ghL>@N%_iLsLQ@FDYo$rZ12fBe0]t7sE%UhR!rqa6nYJ0kPG7X`QipBMpK$+F[^SggTqsC_n?i9PJrm'Go]mftG]<>Ogq<HZ)(LR.-!Iju!%rhBC`rr24"n(tlO^P-[E8<,q7J,f3:h7)k04AZ7_Pip*%qpgV.?[hn?mB_!ihn8qq5EWDGLjsa0TV9!!*W?^)If/<X07NN9?ej'J%*Ikq9q9=hQDdGSRpOX/-3gfn8ll#gbr[od2hRn4:s2hr]f%f"KXo&uQ2-0.apFfnOl),=^J+ig%lZ[9]r?JMcQS5!&11%YBpZn1G%5:fKZc>!jurRH+q?G-7(l^.'JqR!]%?i0YgY?nknQ*ki)?9Q1PEqK.s?Z,A&B5bP6nIG9kc)^;PH%((eSGW^Pl2KA.?bGLn`=Mn;%Rhr8XoB(PLBTp3P2."',STbmH]8McMlZrS>redU,H0u/L``KQD`1AVj(Ou8Sjju.ms"q<F(jU3&jmC6p`no9cdJ,p_m)q<cg\"np%+&)@`],.Y^]RXh=T9"Gk]DVK.iL@<[^H0)S^m,.0qU%0n`bRhn=)Yh8hq?oO2t6ZfhsgF*kMQ=!%CCk,Jj'^[T\m-6J,/@kpsm-l%IIl8R5C<?a2hrJ^IJ)a[?X/!Sm+ia:Y$\kerRJAA\I]VXGen:uo`!tH0,Sm.m,^/jH*k?D]L;u!qVmkArkDf&Ig7V7@/TEDhn=F3%ir'nrqDg1WgPbC,hgPCBMr20mo?,(^rKRgj^]_XMIiI;?P$WD3bLaDTq_(NndkAP2pm_-fZp+KnpuUCRn&K(E?G6:5mB^a1q""7G%",l'kQhYbHnM*#`DdSItkst^P#GC1N+9)5`X-_^-$uDFV?Tri6mcF%A07Nl_Dr86QG^jWj0E(t<D-AiLhS0!g`N(rT9S51CZe&Pi%r6K"o^Nlnrgnm<KI/OeM&3A-I);dQ(K?X/Nf7/2AbmPHX]0G.Lb?o`!)S^UlqUsU2Jm4R4IK4kKSo%%3_lV>bHQ\8'l20Iu7qcAF%\:-U>qHr)Cqs#J(gRhgMpp[G65C7YFe]$,AqT3.V!ZGDuY.m$qmdOQoGQ"]#e[ojgn'YLS$[;Tqh;6uEhVR$/Dm+)_DYn:_XgdCM%hko.Q)fGVV]=GPa]t([6hH\rCh=R1[;fBfQ^.C9R-6-q$NB>u;DiZitj72tjFmR.lXN,A*a)m9\E:cYEI<U*dI<0hL^:q=mmapj;%?C0u*SZ_!q\G"PBlL*s2lK7AVFa\CT\E[/_Wa:skI$Lko<OhU$Y2Ap,IaaAV\mL$Xe9^MYkFR"dU&493?+Xr4mF\Sr<U6cpg'Yu%%/[fV3^:APkDsL+\f'@W^HYp1A;KGPiekgd;jf[C)RrU(3jf7t$8hHn#P"I:!pu:jM^<JV4R'6,3+nsc4bpDPCEm,^(m*]1N9fM=(%Y1$D9WMQ%U!r4If'Tu6EhSn5o'9DZE?H!siXKf\`;iEFNU5pq^L"gP[No<$(KcXErTnFC`L`lmCSA4[)rl-&Y[D2:g2d_"'fd@ki%nD653qrhE<*%^9h_3-dFQ%OWJkkjkq#N4eT(?<.N!;<3!G?CI)3BUkcgCEPu4GTj"B\d+oo]NF\r%i6(J(j)SVo'nZF*P:!rhDN-%XnNVrqYg(k^]5MFo@"e,Xr_kkof7uGb&_sk\U!7u5DS"lT=a^@SNH^nILc4@bnD.Din5^<F5[)cT)?Z.c9B%2%eu[XdiNf2r6X[4%?BB^c<8\3+Gf2K/MAtIkGJO=[#f&qCn<3p$V#c(V!^:Z.IWGngFhiJ.0VS[YW;pFC^n@jio`;SQ%</G]jFDjdi+*-R=olq"JAYXn%V`Ot#]7lY7i.(hf@02HkJ29+AOB94IO2*Mh@J115BINBNr%nL_Xh\:*nC_U8[l;*HmssVIi560%E<a-^JNnA:e(;C=Dh)c`!WDR@%!&IEde-du)##,#r>p"UWhZ+_TFU(f0!,3R,<)>h@BHSU+J[BA!WSt;C>rduj!_<t2Ul#6%70>"!$H.oKL`Ns+GLm>CODl3N+Hp>t%9e+44*FtFNOBHH$X7)&YjHor<9EMc%J:,g2cFF"%k6Q+SmIBVaJK,@h+A*an'bHHF#YJ/Wf*@D+D?.B=DB28G!@4ZJP#VMhX3hNk%VGhJ-M!PHB&tqsp*JT.$*LUsB:O#'V5<LsDq.oKP^Q)Fd.C'W0A^87Y;<Z%+ki9u<.6^+m5Ogc$n1d,s6-nMb?[7TI_/jj.K9(Gj%_tHG>VU"^GT>0V#'0Z[#hpX`<CE:j;IZ!^/d[^o@U-,W$kJO2GcR[iIn0uNO8p<IHMXnF.SI_?e4?Jk+5](tuk<h<>+8Qs@]]n<]%LOTd+E)qWW5j>N)f<FEsYkNA2CCdodJ#Ep,3%%/p:a,[S:5]%E6M06,'`CCQkefD0qM,F*LN?Acqh8]IZ?loDI6u_97F:de^@.9"%YJtXNJ$A,44jWZrF-+/l]]ZhRcXTT=iN+s9^;G*Ucb]SrhXg(;&n8$d.\o5,Yk\UbnAj0KQHs%Z^gdS5Zd7TMMp'0@q+)ILr9u^p%b!1AIX5Ts>J%NAi'?$*bX#!uYfXK>icf'9]hYSk;'i4,opksDJT#b^;IS7i(gNr''5EuaVeY'fYq%-O83]rZ<;:V>W;u$u)%6?V:%%oLlM_c-@BeV/5Z.ol<U0M,(:n&TBH.:B*^!<3/k2c56+LAs5gc$k*9dI5uEm.srQ]9YQ:n\&23=cD+CWOMU\jW7^JO2@e.I5Ju=%ZSM:MhPT(<aI/JCqL5NqbkoE)dbNl0Ro5<['KQJ(?X9$Q0Ag9A\0(&TIT9W7Beai'80d?[qSn+"1q;J]iXIO<,2rTQd'pt6HtE_X%RDNU6n;km05$M#N>?*jk<BaVe5$M#N>?*jk<M%R;ni8&TrQjYoJBoqNIfg^?NX>J#'Cas;rW=,=#;NHtG)(PVWT%u<o]P/rcb\#$%K;0NLAcBX2F)^a^18=5iUH`BEIa28IC/<*0(c4J!;tFN?INm27']SWp*W@AKjlc!LVtoq.S\=g1-h;CES`ft9@flW2E=5P`>Ob[4%+.j*c&=,Te!@o1$M`OBsfW-uqem?J+<j:']%VJdo[<M23G$t0_@A=sH<J5F"b"566g@tfrelgN`I"8QrUD09:Vn6,0d@n[><dZit%NSi"8';d-P:RW>,h?3b41lq1VkujJYet0"'Zg!ueBW[us<,d!GG]>A^O]8?jf`t-1h&lMY0OTOc#=3un#QkeG1+50lh01":$&Tf1%/I#Ym/U3r/5`gO@"%`bmAjad3P!(29Y"a[EEV=?PU0YsLB2"+KX?CC\g9kI</q@CDDJ=b'3Wf:NfMW5U,MmK`&6k9/<1f2dAA"B2%bfAqc[rke4SE<1"Np_:fkC]An+aS)=Z7qK#R>_R616J)p'_*kkZ@\`Z43!#6/K($5oWGGV)b`E9reqj9p23=NYt\`'``AYgm"+kG%m+BssJ[bf)/c'*nAn8:)'U\[>F['s'cWp3#fDWp95BGZ,>k^I;l_7ej^4a'ZS9?C=Rde'HQbH;?hqqD]$?ASS4]?t;,>e?P[S,4u%T+*FACJ$`Rro"hMHOT"'a/R>@1Y2'S@gsMDedl*3:Gd0H\h\@-'REPik_N*3Td2/kR78@>JZM5,#I4kN+N?`=Zl!&dprHkg12WE#%#s2"P6`#h%ef<,ejP$-#O0/>".Y4[,SEAlpS.2h(!&l8;M9fu2H-JOVg#(eXR5k&7J:s!/LH$8VC&?]SEF.ef&V(</,\ZQ&7J(YF%no:F[)u\OTh<$u>iRm#![DfD!+O;tC[`Q-5rb_:HUQ6A-h!!q8,%!9T],Q%..s\f9H+s)Gr#EciY#!\4rlju4Hh$UDd2a=c+mnIU%"ol6nT,7FsJj7q?:Kh/9R/[=!UgJ`?0WQ^:>EIE7d$;9>cd(p*^'XHd?R:<<D'._<Q[-5nXoZ41R[!c_='a/MrmPtj^=9DKl<'0k%/9g>;ru1JC,N$P/HM>g_PI:-mEo2Z)p!iW7`a?1@W<&C)]`VKE7H.fE0UdTKd)TT;$@YA7]-/ED*=76G!hp53@c.846'MOM)FSkT%RS;@*0"`C]n=&FU,KYc>$p2g-)"0bH`oj2r]Tf%TnfN$(-ROPVJrP7Um:jc$&p$&2:!As7a)I0d^H@sT@kT!4L?A?-/4SBA&t;HC%/sDC==N&XYr]*^6fN>`RN[N0Ga`F<)_>`/4cRN^>Q"@3la>h7Jep/8$b`DBeb"+KSP%h5E9Nh3Fk3&sjCRfl<.P(DVZc#'`&cI?F%G<\6YpW7JpT:j(DOF-lcah46-r1ji&R7S5//1+%_H^`?FCa:1f3L40RkN1Fe!RmjhF-n8O,FUtr?%BDKhglXd8':D<4:f[.^g)pi%bc+FY#<qB;M'&*t)^s=h@j)AVUplQnE^RA[Qjn(1)'N(G'nU]SNH.B9jbI5u#X7JQ=tZ\06qS7%PVRh$<=fb*bieC`*q#Hr>fkIZ%+[,Na)(,7m_nOFe,^H+H_&b7je2FiU491]<+D:&\SteG,J?/KAT:Rr(_Yt)<^Tr.Uk"2$iSil!(3F)C9ZRG(Dk@4'7ORYU9]6X$/%^A#/ZcXHf]pKW.EF-+.!fq618hm=L!*.I+0J&`R-kg*bl3'TC?.$O9%8Y3\))Z!eiC]#8&<G+EiSI"ht_p9?P5_gP;T`g+U=!`\2%A1`tM:qB!($H4G.UelS._$S(,:5_Q_LbiL;!oe%KHlr`N;dhNq<mtG6$$Of;)>UJjm+3]\orq#:rK'&bB7oh99^cA/H?5n=Lt*Hl%H<PAXK,D'P@MH8+;.9b;8Ad,9%M[su4Ur2G_."667^7=T0K+M%O!LB(9lX\95]2&]*n+dm#pCP9HY7n?2^CkuAB+^^?(;R.!m<:)%/0=qA4A\6TAVL^o<*#3$-0FQK_?>o6.X3Q(B,lNS.1D3-K-s;'7AOp&)F%E[7LT$*Bt<bHd(DsKG..\ce=3%,AoCn6D^4G99@;A(%cjr]b?ZY6t/'0t@)4&0qo<aS=.o/YXT!#-/</5NdQ6F`GMeLY)VsL"&qA_Cjkkh%%e%jG]nC(Y[l<tQiC([G7BE..n&!?8Ya^pjJ%`:<=_+j>u]@G44nIps!:NaTkSrjcdF/VC%DU8W7aigZ='-VaTA,(FqN4oT+5]^"rQF&,]k+g@t!CANpo[qej_=VEFn;88kSgWk[?%.*p?l>KZcKp;>g<)mAtO2L=(l_L[g1.IrR3?Kcm*I"<g-%7bG#8DX>,+4U6#,igLl8r:QV?&9q\;bM!ec3R,u3H[h3\*f'i-G%D6%#rH:,R;h_1b/n(WF7Sr</`#HOlE@3V4K^ZkEO!FPBd@+_&IomeRI,F164Q5=.%F(K3.+7cC5\)G+p0K"@_W\*qRBlB>*-YDMX8r*%^FFS63A&H`O\_WcZX9:%qWnhZ%a-``YL7Tbro$iL:Efo,(]J]op]CDOma>Or5Q93"9;HUl,]"o/FX4]!'piO*OqO+l(MKjP#RLTR%>*u<F4P#C"DLbBQ__Yk@;>b!c/RO`a$08Tkd5UN2b)Xm_UA.!EZa(Ct?&"H<hB$Ti4^GQPk1VF\p>bhrmlnk4Re+\B$ICe;_Js1[%k4NFhh[_>B5:<DDVe4^:UN9Qpm]addH[gA,Bl<+PC(KU`?\WN8&GN+Ia*$IMP$Dp,K,JSFQKgon4#OISMHF<A<c'4DmpJ$*:Wo_U%/#."jSSsD-dM?Cc].=3@/UfNkO7c`-G1B;2*ZEFaDbR1_/5Vbk_5aI"T.!L@k>YV`H&Z@C;`XSNXp%qHINLc;@Xrk430iW9BsUNs%AN,+_[E4ad@B,Q;CK2LJ8Xh2LP14cEZ5pCL%P3=6,c[7CRf,Kll034/a.Jjc)?+W4Ik]o7DCCQ*b!Y\UW%o?kqI$!(K`&&d_-4hn%?&<Mpf-2360]<HU-^:.a9pW+r2BO3DH/p]@b[o@.2+r3?-<h\",p/2JRT)FK.q4MOQ^s!S?BHb#k)7-n*q!-A:j4&Z+D'99S40a*%,>jU[jS[J+&dgf`m'92(M*II"8QNccaO.h5NeZc4br=NmPao?aK9"::A'`I:[=1()V'M!;paQ-oo;7`/1O$dQ=.aQ\2XSrCdP"M2%7.d,Hj*M\J`%82kAqg0r,e8"or?W)iD:n4.<mV@L)d'df;2T)\X2jud!.Os+2m9uDqssElQ`n1'ierZlcG)@:iZ%eijPP@\m+o8i%DdQ:f=WeAR<X=OM28VR3]^KOI;&mD`qR8]<O8g7"qS*(+-Xb^o^\HXbEYi'pr82rLZIK'U+8WL&^JJ#.2c"qno)I>6g+PI.R3Wjr%V?1"rk)97L")p:$lM4lR`qg^JZEO:Zo0@ZnPkl7G&![)1W,phr'2l;'j[\_M&?N;W:4CW0N&SeD4BL&'>lUjGi[L_3d`4Itg]q+/%q'fTM%jU@i6U"e/bLV'jT*iTZ[>X4p>Tb)-/LG]mjHC\FAZHs&@UfVl90B$&$MhO+kMS"!n"*i>=Lt:G6cZ@#rWG#0JD/Em5quV6%+<)-m1'a.i5F+s/i(W);$L3rmUpLMsHikRuq\bH%0)Q"ZeOp-HlN0O_>X/0A]1YurG_m-!/qL/p(e"T0[/7+:JoQl<&I@H6,`/aa%V*r)q0uL:W>uq7'9+U[e6FRMTNkQh:)0"R@X[Beg!QHH7U-EDY&2#!eR+@c*4FPRa1+(Y+bo$-:Gub-5M1]7>KJ)\BSsE,[]"66Y%"&3>+o@P,gkn_-44\0\lT-l0DQlo!LQbXs=mcPJ<%*$?orr[/lG!AaCX>!*<!,!B.C%q4@@LOSR.\P(PoBtf+6n1`fXDY53BDp3k%.ZC,eLd_gqa^3o,pJ-#V=!9t@OT>>q(0VkG@+TYY@C7"gXSCad5>FREO:_at;UaXgR:[j@<XHL./"kDVcgsaJN&LjC"0:AHI\be1%$r@f0GX609'b9X!k6Yo47[QV].b4kbrHU_)!t"t($k(M,mcXBS(ei4H6:)1Z]DHk7CC2kd!N[iZ^AiI*+psNT0:T"Q6%0Ld!qM#F%fsm(A#`VdP*D7t\^S'6V%NDH5(QaV=N1$W7_?(W,@".pWiIO&g)>XPBP]mfGFP?thN^IE%qBO4i2-t9VJKX%fc44\&J6KRWdq/65%^LAl.U3acZoMFl<O0N#GVA*6CnM4`b5T,AF.:MslkWkZ&odHo7LrZ:ZaNmV2"r*"_F;+pa^,.gY3P\cfSpL6S#!o*T3sP;C&[Y8;%XI>%(rENe.9@dZ$:qZ/&?0LDt4sKhJ;\5]/8jIiP\7HNgKL1gX5"+PFLjQ*3?l'lg!OVD*%q!XJ498r]K9H@`<'[i&C!^3lIC#9^%hBN_L=5#N'5:<)8T4%4]Jt3<[".S1r9nU'OO8eG7l6$%`[/8iYfMM_/%$hu+>3rE=^_@"6gB#R0kD]Y>$#:&61@[BC1S!s!N`HM8%cK7':!r?"$O8e48#l>D:rMQ^*mquGqJ+rNYlXt/9I.:,<Sc4$0p?a[8l]:p=0)k+emm,b0qVqO+TE!*RO+7,feUMr>%XWKpmMWG1%$2nUb.pW#$cX+B@]`>8QDgus%mI\j)leai%pK'"e..Sn`Qe#;9JJOf^()*/kHOj(W(4Z0^g6Y#YjmO(@-6QSGG33QAK@:0rj^uUI%*!muC#"0@9e'puUg=^)C':_#-BQ<mrs2`0>:Uo%tmKCEl"LiqsVV2p2&hUOW&7n.i\7_eEG#4_9Z/lB@e6Y&8'LZ5P^NgJ)3scO<%^\FE)X\h4O@>i\DRh/U:CdRFnlWVaAXVE[fX"F!teu'VgqaKf]`b1fj!O3=!#7%OdXg>kgg2h:9-;n"KN?uHIFgVHj>&YRoCtbX0%fJ;p>l*pY@EVVt91C2k<!4BXqW5YR#5p2Ml*4AKDWXT6#Q'Vg\V8=.@[8WH92ntj)AI%UeM=^GArs=dsU*s4PZ!siJcjBjhD,%qV%ODp(%CQ(bb,&oR"AA7/"1PJ\M+Att<JnXS)m)S?ls5D?c_h8+g=hlT8+Tj=&_>mGKpRAQW<?6br2BoF83]C!)FuR)AqIDG)jlEKB%$1JghAidb@L!>D\l8VUn^-QF7Fa@\<Vm%&4oj,GuaKX.^rki5&/5g2uD_P@'1TK.q,>*;0d=@u@`O9KY0^R-H&UB^^\r/goo%h&f%SGn*1F+M<O^!?a::u,.dM,gXX88eAq?Con#9Y6eOXnXtDifgSFrSmJ\';ElJL/Pr@7&,a;VX9OXEYE:Xk.)AG5i(#Z2QI;)kq6nm%kdfN!%d[4@`/NO[S+5(:nHlt\cnW".fSm?:mYp&$hu1lQi+e%7&R8a#k3AC0#d1%b\XC<H`3n]u&H)1,J$0-,`n't5%e7QR\UOG3%[sunVIf,*?IkjBipHL[RhSR&-p8>fPLQ.jGD<3#^k8+k$Qj\kf\ATd'f\S8rbp_5_3.^No^`IS@Z>&%iH\fB3R`=qlq"O*<DIAZ$%D=UPbY$V5gAFT<pN!8Dg"s^IHi,g6m`Vna+C[Cid([1+'[?lFO5JFkGHN*iSLL7`?pC,eO4,0;Y_A=[r!TX_,]o4V]pj-Fh9>/DC%!h0%0i!&alDMrK]%*UTI$Z6hD022L9DscO4*OlMJNi*.LiIrgPkLV465dD(E#T3Zbh/eeq.`huV7:5+SFN#"+$J%qd?aYLfVoudr%HqMh<PHfFYXXPst/AMn3b_hofej8M&edHf.&QEH`?)drOs"4>#8_uKf=n&?E:&$hs-@%1kC:9TDh(63+Z24pbihD&X.4VQ$)0?.g%;b-3TI3[M_0n=g$#3hfUW#_Cei:s+sX+HVBdl]cY-!3m\+KkmH=j\^qCqq*ucGSnD!fA>W@DYX'LjC^=pQSkc[,)U)-l@Q["[.rR%E3Ta&kKBBS>kjBa=F`mL0Z*6!jaH&4!q$A@dS@,D,Y.7[A,oE9;roc&Q_uK##hYCl<5CHTAK\,=8aErdB;\g9QfVp)"`4X!UomME%3U8\`*'^/<[%(]8'Ghm/d6,]E'kjfO")r0=$Le)6Q.GRUpfr'N$,Zn/*ebL8Qs1:6N#72@,B,(>!<==IU_Un2SUrR1MLk7u)-A>i%?S'h&.6$ZG>"6;#!GA'J\jBPd(`fC\oH7C55b0coc"&VmVBfFW>4ED!9AC/V:+\MF"GH+Tr6:UnnR@$+dM4`AhS:M04=+./d(.OD%A:+mh:50#tB17K)pYB3p;ue(g,q7`RJ93iie3,$)C9^A]>`a"o,/<%Zq/WlqNhRs1"BC/OG3K0Ei@lYfW$!AL)5YG+kOk(og5sn/%Qif*o#6f<)]K/MbTE]b/])\o+$>dB(@HIpt%Nu1haRgCjN-O_I>V$-LKX8Q=($V6U.o-Xs$Xh[gj9WZViXA\9d=2:.NEW#o/9RY,%@b`P[-Np_ODMs[k?FmLdV9&QQXq+:=?fn*+$co"h]n9^(V^>OOaj?r0-5H<T&d85".ZDqEF'6jN42IO!1q:`5;N",4]sfD:fmt0r%[O&+T.Z($[XNEWe'dJB.0ZAq?k?O!%L6.',G7u#"nR`eZBLSea1"AhOcO-Ie8,6%YMN9odd=KEn=c["#[MWD?Fj!D<V$.=(WcSFN%P(`^_+=c@k!(0_W%r-!r=J=0lU1n\+OJTH0Gj8"7J<b*7;\F%C-:bNGh=gAlUpWUNg_.7t<NH>I$kn!lC_M8V?scn\a=NSj[)3e"%QA#f^acV9P*l`SlpCi8o%e5+$+fh>&EEE:\n16b./Mudd"=IS=LbP.[Kk3;A*s@sPe"P?k*?^s]H9Uji8mC6bn?H5^!':[\&^u$m%!'#+WMQaO3!qa2UAd`:BMq#f%/TF/(,aZP>6$:s>nM)YaURHJ[nVHK*]2qlW,""Z\/'WC>FBXp=?s:(QTCHZ/UH+!$dQ4@0QElSr%ciEQ'$d[7t3l./\4=pS$k>c6)_]h/oZnj.[6rUZQCRg2d?:?7<S)R,[7H(,:$5q:Vge*nj5Q1R[c4+;Ico5LqK#mosFj]Mu"ts3L%%3NYJq$9/p<Z.9"2FSYJ<ae\so_VEE2iO/)5q8UJTT]J418":;_fg:!Gi'HPC?t6QBJe2C8TJ$amKr()aSmgAQ>"p'JjljZ'*\M8%264#1<>8@OI4esfW3fEt=fI]]jrWd;\8N/i'S&QQ(mKs?lCr*PeK/Or<U<bs!f]hrH.@Uh*[@mFY2#4?IMFe>Q!rWfZCX$3o,r01%)2'PfdaiN-g)/KSLc/T='Ul\E"(]cU\b4,2L%aFOD'R3E!3CV"nSAX74@k%)GAY"b19-QBke)d&8LZq/26*\u:^RRa25&>lR`<EA%Lb[!g0?GeCq;p)ViEN>]3hMZhp.88EU4?a0F=>_+73DTqGt/LtXP9,eYSUHP__C>X]J;L5Zgg[WeVN9d]EGGp7A>]FKQ3L<9Nd&S%"kl\pntjQ@JAIV<VrZ`NgVK2e(YViJ`We=OBEpf#ZsUkRE5AK%4\AF"J43?[\0_,Xkud1^Y3J@7MqNQ7qN!4l@]Xc3KadQMBj>Wc%4,@WQm&h`jQ):9e=#2=V@HZ]]TfT$]TX^pg(0aaGb#Lk12\o7"Sq2s1?pQ6=%obhI;F5U4J:)s>W-bHPKU.OXX*RGS<'1e.?;Y92%r,gaR!Oe_k=XmD^%A#GBKH'5hFlkcYA0_1:=VqbIo[JQNUZ-jR%]6??Q)\H).eB!'NRSFdqi']r<0Sb2bhVZTmJqq(*NsW?@!0As%X@Kgg7P7dc9p=l1Jb9D$FVe#56'F:C5@Zgdpm>eiG3mH9OQ]>6kmU9bg];r-D,/Zj1oI'om8\[(qa;`)hesejmuXdUbW4L0dH@_R%GVjU^.EkDZ$&JfK]CMOiM?9>MNn2bU"Q5U=^r4Gd^ZIN9JQFNd"dZ+M\AtWI"T='T$+KN3X[(tG+GRsA(cXF9`(oG-aiL(J4q9J\%B<HKf>a)\!qOk!-_]fa[B4c<-!10S(*CVAk_]aUI$Eni7p7@?3`91*F_8#Nsd.'!K&Ft?-1rH<aC(A4keJ-idPgf?RX(]7pC#^X2%RFBhP#ZOr:@'1ZC3N>F2K$V$j+rc>Vca\4VlLO8P3^YsI*.D2LUrjT)G.K`kN4Mbh@gEd#L*;iPbjPC!Lj@82cA='1*03]WUC'cU%NFX/XMN6,9qMN5E-bs9f+Ir'W](L<X];fSq-*c^/=CoKV@L</fC'Z=A.j\=)?k%0oQ,4<60?m4C];VMr7sn02&Tu.SH<<sVb(.cI%;C*<HhK6oS)coKb!RoQT<>d"/odHLU[S\fh$.*L`K]K074QV;E'=3g9B&-9W,K`a.9u[3NUB6(*aiVb;GaMHNXQZJ-[U*Kj'Ej#:%$tNK+FZY2Q,uoRW&l!T^PpKj"*KR@;(]nI`3^FH3man!l+a3N8afVAXcj4tTP@S,i(B`3B$\qtdP)a"'](q/idKXf3G1jeRMVEa$%Y@d"@ek]rsUIn4Qi"bQC-(./cPLcHi%[,mj`?s0)D0@[i8OHKLO*&81b9stA7mO*]Wt,3+fMt,MhH:*"64IBG*KY*]@$1Eh=L++c%>_J$0KVq]]Nm0W+h2-NA333.L-8EZ:'jEY5Yti8>b3p/<CZEQ\PtsZdCc\gR\k^0@=g^%^B2#"G;f`N'Lm5hV*fMXPkh:Sh%8>kT%BN^g&7P`G3#B7>G)Ot),Wq?n??58;:JAY-Pds+)g[7jUUJc\af(845P;qK6mRV_mh!t22&na!;,Y9iR*Q`A^$<VFH*2J,bI)-tld%6;m/"k2JcjIaAOB:/rkYKsY4[Gm@B])%4rdMB<N/6=lb,T5*0mN6,hi,YiM9i#uhS-FRVr782AD;o05-aH+UE2V)T=D:8eMN1jo7%e4P6ZlUZ*I)I(k]%D^cLI,m!9Qd9=W]="$QO*YmW'@_DbD,"]D@QEn;F-t!;BEp7A0"Sp:>fZJ^[7=jU#aE*#T0fgO-r[&kYE2@*%__UUUq&m'2B$fF/+o?.<.t7s5Pm^4!e>374@PB"XX#Zi"lPH[g8Vghp\iK''l+tl]^nu7'5?N/4?n_Ai:hs^(@&'b>$Ie<oN=6dn%Oc-4rof2b9Ll6#_`@JW&SYr5+6g(M)XcBYCZ<X=c+,.0`YEUY3.*>\#pAuU]Km!HbTa#Il`>F,8D`!WMA"\PD@Z/prYJI9g>\m-U%nOA%nDBf!B]%J3A!uQS8Nm4=Y=>@og"OWBn5,B)n-[SX(<Q0d#FC?#<k]BB4:!L.HP[`>7'+VTl_AGPe(<HUqY\p'?Y.\"8#23P=%+pL<*ho\!SdeQ).)8cI-lP,pWr)l("g2cJO@VWZgQeA1c)onN@reW60^t^MFaZM3V*db"]HQU0_Rco\q$O\0W;*1_?Ob74q%MF1h%ibp(*PIl$@S?W/P6jL0X2<Qr\]:#4J3uHp/KGN>Dp8]6E$,iVL`8$e\>=RPT84ec#J;kD(pBlI8W/W'\q$oU=/Khm*+FmKKH&I2J%ST_?E,`5kmTN\geh2BP^;?mG12DaJ?&3!s/Rse`g)PW,3ZJB4"_'3?OmNM__2jftq0i4tPM(,$>TVaIU4'hF.2@Fhpqi]"R/bl2h%Rm<qgai4b^bcEqHR2?eTp5NH;X<oiKhTO2X0E=ci.rl-A>ugi0/G^i9gk-XY30r98d$QZj];CU[Y3_sg3DMtAQL:ta@6AP8V$!+E%.coT(+>eU=n6Z/j-s]Zn"Lht,MM>p'"EXSCGduR7dh*#VX(YTDj2I,*YNJJ:':ToUC/Kg`^"ECEVCuG95l82`%Z]0N*0\A?C()GP%.'m!80]tTeHqNcY1D9:G?s(3sJ;`sJ@*p\g`Lo,#Z@1N34*fNlWbiT:l'o-o2X^f.eI7DS(/%+p@iE4QHCfG('35qrR^Rp'2PtE$%f-fI*3YmN!e/9Y%BQ8IIPAe:eUaY%,=KrX<oKIhc[?5N*kes]2kMS"ZT6n_kT^ei#imEVE\HqFB0Z?aA)=A+QQFOL@"$rXr\mdia%,ad8PNpobZ)iUqU<LPsF%Z`(p^Q.lqTeZjB&ho]<J>:6u#cp#MLPgOF9p-a#[1"=P-8\Q?0Ik.9ml`.fg;.<JkjdXH-G&hY"eTg^%.XIC["Y`Vc(.Jl@Me[F,:&[Fd%8)@+J/Q0K=:02qqS!gSS-oB;DB%$KoQ>;oLERs?okO0tYbKuZBAKJRo$8<VfHp461*smLL>psQ%8N2Zmit:?SXb/6t@<D(M.NcjONF$m6*jj4e/*NHjllgV00B**>d_r-_![LZs5\JMS.JgcNS6t9%6Jr-t,Q`q?&J,X5em#r/X=]k$%?0jhO+bu^X5\7T?(hk%gdoBKa2`q.ug%#_`cNXHmM:Kg0VB'b7gLVBkSE;-F>mM_3Jm5hVIPIH]GE/.:A[(q6G)%5[3/'rhismc+%9I#$XFskFgQ+hu6?=[b+.r%1N:1"#.HO<_rC(NY7'Cd'E%jL:hW!+,c')(41@i7qZ+=l:rJ$g(3,=5D"SeA&,5dQ3S3)`"#*qbP*%g:o2V#W%Ih@DL;H?L:cF3upYoj=APJ%f!#.'btLt1>h"LTXRY,2g8Xr4!:kO&<cjtR8u%eK[o.\hkD$)c#e.6p>V'8MuA53?m0r/%e4-+onr,n]LbBul8H!)SiXUR^]TK27]n"X&B829ZjLd6'7E1"b`6]VFQU$ssKP:7JQln(ZPq:>X\HC1O"`@OU@\?LC'k3\O75eDg%PnM+=oA2D!@IqF3k<fSE4Y+\am$C&3HA<g6kpT)<`o$-Z@5JoeaJ3$l,4Cu5_^C#:*mN+FV9>l>RGJ?CQm86Lh)ZB7:fshiTZ4>E%QPEn,aqLc\icGs2Wahd>;d3=!OP:SX7)B4+@QFiRBZ6Cr,8hIhVfJ<8*2\t:.A;q22rYsW&!:G?=HMe:PQc<8X>MMOFl=JR(WR0f%3'47QJr,69JQ'Qf-IWTA(A@m]W0BlWcE-eY2?I(e(J`QogI?=upuo'eooc#-@_HMA*no:@0@!MS(u`oVJ?p20I+9j^7K66L=V6*d%cqVt31QiHcA\4qsO=+1!*$7"@Ds<Y*9FcR]7`6Sp%"Zs.LHr<bKqUM%FN>ZVZoY*:7na)c%kCfJ.HRpGp6`d_l9W8G<D"1a5s(Ue%(nlWQgpS#/:J'#5WE0B^9ud#',C%)imE"UG5h3%=:o19o]kA$\LVVk<[i?"4Boi?Q3jHV6D55'j$L_=5pSZcUSb0,^:N,*s$>5gE%!(O5'SNR`<adoe=<FP='lcsGA%hOL2]K1Zp@kSO`Vd(<a1,QDVkjm61nX/)>GT::(D"l+:T$G^0!qIP!+_CBR=QaA(HNfo3_#(tm%%;+Ot!p[jl]'Jtpf/"c&T`\r)4UAPi67>@[h(."GP443^$O23aV=#rZ$2\V4E6NSqBLGaPBuldn;+]hePjPJ#=>&Z:DHI\,6rAl`%,Oc7)S8_*ELpV[p.0\'Porr$k,9jH[92uE7)]Q0=2Q.kPI:]W)6AoM=3!>(9LH1[#F3r9r`*S@sbZ=n_&m*&;V&;0rG0_BE=JDDc%/0=eV`P<sT)hl3hrJiXgS1Hc/-5HB%2`j1t@Y.*XW#CRhBugPg>g/hl02!?3K(6E2"D;k<2(J6pAq8N9W5rkbQ)g)_oGop^_3b_C%nI_]K.+#E-8sPhk;BS+8f)UDfV'c`"BW8;]Yh<+Y2G&HkQQ"k7:lo$@8;dPY>07W5"M<]8&7@B?g(F`r)L3/k_JQ::c6/C8I7RUp%qE?pg2t*sH9U:O#fEe.Rj"3'm<1H./^cATRD)Q*<Auhs#-SuL(LgO]k,.lG1"kX<JiafG?ADn"D!ELIPf'!_NXf>kugf'3t7-[pK%UTGO:JXj'D&a26k;m=u+<:F*%Z-t9)Hu&!O;)oPF8ua26#XMCX7l1pEi^u<d0lCARrK<DUYb2glRX15AA-A+%+[W]Jf/:IKE<IOF%X<uDn+;#^fIFC<ZfR2,'C5C+4A>0]5-m>&56*M2ui)r1"QmH3"ENtnL2Q_L!@0<N4Lheh143j:m]%eJImL1hN]akr&Hc>Bp<!je,%SKa*0G*0lAm:(Nt6ijI7U[loe"Bc>sP4YlP+aGZfR+4t#eW^m!Pf?0I&H_<FfHiAE3Z&H(R&Y$E3*ed@$>M:h=]\qd%q_i%*43ZQ%LIi-fJQ9GJ-`^O>UE//)<(O_dm_HYP<0%^E2$($<9f[%ne<Z?MbT1pF\&F5DU+ZPRD74,P0sK?.D8PkJXlaUneg]]j74mQK#_pH[%,,]MiYpj8nVdnp5R4DBr4ogk5?mIn=D.jd0VV8Z6R>&q03Ss@(78OCp'X=0q+@7t@5FIOj"bJ=bd),GeXEI?5p-`"=/Y*lf!pgiU%4oF(YcOq:7:io>r\$R>+7:D5-Z\Y5D,g;D,Q%R;]:53o5'1(PA]&$+0WpCdm4_&>t<_LPs)JZPFUfEg+SOkp,;%8S$_PT**H'ZVg%W%hIVScq&N;f3m_kMH'c&>uD&\7SbhFiYaXpnGTB^.sJl'fT*)%2c6UYtU&7NX]+G5q\pbB&JD0"H&ntn:S#h"Ng$r9"GK))g):L%a+WAUbsNY7,!>)*b`jm:LtkXCVJ%h83d[0f9k?$rW%ip*U^@Y$#d/t%omu$4/E;I`>EIF`/QCIR6otg.;]<3!31VDdWZkHml<1F+%$qs6V@.:$uUS'KE-r8-'-L@2Q)`djhJTbpqY=2.N*GOg*#sacoU=LV[F/c'.[j)V\PB."7ZjWk_76o$aOBcH#g3G;&N.JsNq1!.n%"CSMT.p'$":nr?SLM\*KQ8^+P[Kt+1BlZ!7@rebA@tcd9&"2R9C/p0_`)K)eA!EY-bZSFD!aiX84F=#0.Nnn@GK#O4/G5-Ei)R;8%g(r=_f^^:OPMQi$W<d@G9r"Elf++Z/N$dcAR6'jV$D@R[YQmTA8QbAg-ei\X>cFi+5u>`]$>;kP;$1Q0R'R34>sZ+4-u-a+)*&Se%r:!aUij&#K#[JgNL1N5\Z5g)mNP*_tF"#9:1Ib!Y49VO!*bm\k.*IKt"cosD'Hu-+q'b'W4RK3"pBVuAj)?P+S&:+\U=\<m8bH#I%@+=bBi0AZ><3!sV<'_$mFd-B*&[PADY26UU3SsKI/1ASr>)*nTWS9[9V[7$SG"QDu%b+5g3L#n^P\%t3m37#r:/hrpWBj?_"a(HB%7'im,c8`dras.V_-j<UA#rVO^MQ!("`mB+LQ&TejY8<.0SZ41+GDg7FJnq/9Hc6n[%nC$/)G4XnpBXgIBBXN3>_>LjWipPW-iBt+%`X&$?*H?G)L:a5_JtQRcK7;S/NjIcMF:mC)OCPh"PG+K@;6`rl8W(e-`pDmRB?"u>P`VA3\u<&n(/-g7?&]_+_pK,9V#YM4JrP#*%*sA["&e#2)U87ilP7UPN%c+oCIjj=j*gb5OA>*e!D*%R?4mcKL7V?ea)H.[K`1c7kfG7D%O.@IWa.*!Rl.'I^jS[C2/:T"dEK#+B%p2j?S@[J]?n3P<ChWd1[3/+cdJgKk8.bDe1SVE]<RYmoK<k)($itlA'IK3/X1TaSpB/..&:*_:m,!rHPaZeLu)FV."j9aGQ,-TE+%0._cE"0@'3S.LpD7/$c6W7IaZZ9W,44!(l-$jVH>VF8T7A0JHp2&+KD6t#!kAHGI^)?Mda/@3!;PQ<bM!-]$C9!]pA&G2?UQ!uLY%RO#^)i_^@*B:sO8;<j5M#Z;3.SeIln<,?AMTLk-3TUUi(?_ZLUAs:i[JE\gd!n4tOi#J.9+nCW8AS#!tc#=e=<C9V)h0Q,(OA(s-%TSV[NjC,,;Q8DKV82:@TmrSiG3H+jW1Ef2Ld'1#bd5[!(AYp$;IdFuXM>MFs<\c!mA0B_hBW6GY;%nMuMH\4C:Z^ungXTg^SV8E6%P2h\g(=8@L8`rIu9h!'pU2!EQ0.,4'#\YG'[Oj$]f<hYZVEpk%j(>^e@_p##Q2alB^e?$j0quK5eJdEE.X5DqPOGU<"Fb+t#2S"4%gmus_i>Db[8qajg!ii^Wk$%K\em*uHejWgq99,05I_<'WO['#:Bc!jXNHV"l<?&DG3N2NaV/:!+6o9]L2lbW-N1qLfb;g,W>'L^7%<uTMUUGutq<Pj*`XJ/i$<3"5;]Ug-)-1K-HN*=^Ef$?tBDtWHo^^brr8`cHmqNQ\,;N.=[C_Z3^m4"f<!EM[![C6PXA)^q]#\$aA%=8,,i((d)p&IO)(:V[I9F9@-819-[d9kV=R8$fdZ#d1k_\V#;]7_cg]J]JW7;?U"7>_uC1T&M'&Of5!cJTS/GSEjS0#`p-tFYHE@%OU[+\oa'7#*/mdmnDBmN8$(g9Pr#C_$,C;,fM)q^_^:,<UM2./JJDF(@Re7u3DrX,n_XI_(=$S*D-2h>6u(!A.#em?2V_nXa+=Ek%IUb"NFO!IPFJIT(Q$hj8i&q2U)k$IR?Y8cE;B.RK'#A=_+j6miGL(D2Kkkb6!LE<H?!N+ZPdhX5j@WmO(\TDU=+[tZ\F@Y?1q7$C%EBKr-Kp;\/3[]a74p\ZCc1)t+l+OM@CM)!]D%2C+79ph>+(I;SE@0hiRo`*hU:>nGT!>`H7M-J26Kf=06>`.&Ak`d^@+Nd4'KBGN%BD.#%estiAB?ii:AS^.#UU'$;'2[n3AelZ-X=[r0o2DpdR'P!cLE-a<\L&>qdA@BaE+\PJG>Kjl-Yilp"DS[8Uigrd*>\K.3P=\!%^!Dn^LII]Fb-tUcLA"`$0="$2enerL1cZ$W>YRBt])n:W&h9?<d.<TY:^,@Qg:3YgD'r^-ZQ^bD3!t]%aG<k=UkNK.\2>09CIa5$%2d<X?[-Y40ITkQY;q&!b;pg@O('cB3@^Ns`%!3ntPeGcDPVc(-8;K,=)MuRH.t@(RUoEL.,e\4"JZsM;A)[)bJ1N1])hqbJ(.l!W%>5*h6n/;s<U&g$g(V?-\S$V[iM:;#-(bA3?1SujF#ldpI#/OIp/Sd)"7[E<b<)\ZQ2_lX,k"##PWSY`='3eh-9FJ\`-Cp0)0M@u"%DH0*.iatVna8uC#fQLJhHtsM!8u<"s;cJ]#j'7]Q89MW5%4O>`/L=;:iJ\;I$Z]$LSs"8B.tO%dC8-kDF^)p]n3Ws>Ls>:,3`!>k%>Gm]gL]P;ujC'rfA/hf?Gm];`%I:!8p>6qf`K,LhnSeF@r^Jj5gqNc&F2-!*?+Z:YfC%"6<m/+!5_r\%^([G%I-5p-fKrIYK?Lc'%B*W+hgkhdB]lAg^K%KEu3Wf3a06mV.np_,M`oL!aNYd0XVi#/]=[\kenPfe!`4.)T%Od3TUa!c"Z%]A(SKf&SmlqU57HDP$m&_k6%E2O2Q/Y<UUU@$L1)f'uq<-a*%(`O@>8t+GmL&rP,;KRgi<=q/8m=7O?Sr8lNAR[]FGE&D@Q_Zr+?"ao$G*+6\2Aq?MQM6r)6c6i5%oD=+Z%8sD7mCXX:U9eLV!5ifJM]5>pApC#,`5uHC";@dt/<Ks6RIbn^&.LFPVum$tXSl0SLu=QLChQ,-`9mc?H9g*OGh@Oh`S!Tq%VCe._=Qj;f>b)P+X3T<;c9-l'M7<a&X2eG`!as^dMpO#LZ-K^[Zit-CO?QUkVHC$.4\O$`6rs`b!oS7CR(='_7F?"#8k2+-8AB7u%>=EQK<>(CT>L]'mkS.1i)g1=OMQ$Zrg[n_["9M?L(9_56fnL)fdrc&&X>WOu-uMR-e7f%&]OIXQTq6)&:>o`!Fi#M140A;1>1C[E%/Uk9@]!GTjE]OB9dq51h<2[mG0%i.!Z\IOWddsHr0K+.A9JY\]lse5uFDk$A)gg<JkF1c>hWMpI$<:/1fkF]&g6uIs/%9Al#W(##%FUF@p5lrOa<cki@L2&Id`a#eM$`h7H'@#:E"Sc6IOtQ*74)b:E<""JDNR8J#71EQU`f,IRg%*rG1`X]PhetpmQjru&+d+BQK@]<%%29&3iSs_CtCO$\^VfmR,pBTU,@#8/^4?S8&9Di*:K[h!4?16=hlo&ju[0,TYKO[_c(?B.#cj+G<DXl!j*\2JjnVo>Lf8&DA3Ei#a%jlp$@jQ2fedt^l-iS![H,&U@uJ^u.#`u;Eu\NkfmP_cQ?*db0^TS#ZCGd0UD!`<O6(rL`HYR3KYNN"L%$dppM.@?./T01_PC2ebD%K5_5+1[X1Na6hORJiAJEYqN$-Td8n+4!r+XUk^$Y3X(Y3.(:,]\VY_Ol$WL0`Hi'Z5/TR^r=1WC*4QRhOTuLnj.?mco0MN&0T`WA%pL_;%YTT'nmU4h@K>LK&Vro1,"@o^H2K].Jifu&Mei8M&>n_'i1(&k('nY1oRPND5hm_2dY++Lfd;m;bBLg4W%4kFSh?;uOW`5cu%&<35S#B"@nI^@>j^AU&Uh:HY,=2a&+*Egg\-$@p?ZI=f(Q=,Oe.hk$sD+i)Xip^[hcRnm3@s33D]!F3K?;eij/R?c[2=$_dF):1I%M/?a8F>j[aT8Z(p2lEUq:oA^jljH$@S$DBWD!/c8JQIn+)r/mL*l=>mm2j[`RR0`Gaf898n)Ik[e"jiJ1LQ]*[?r>G?r;k`dGA)l%hR%ubc=ri1Eieq5P<hR@XR([(fZ*@QlOh-Z8p0i3>>:C9'='L?>E[#Q+l*gf4Y=)W=JEeJM9[7!&il:l]NW0nbIu\uh&c!.G4:kF%6!mLg"ckX@UK2Lae2hl\0[IhU.U$a%?9c1b)pnf^ko@eR:/@C'YW86^,o*PU^+#DnG!)94bYaObEHV000ZB`Be@9<n_VI]OOu.'=%8;;+o#po66\a_;Qk:WCDi:ir^QYE=8%!EYuB=g6pVWN7)>`*-^l?Z0s)BT.n..@p.qP9q4A4'@rA:$::Hb\I!nS.Nn,'bYMRnB,O%71Ph5M5>NN(2e]aRU_QgH^XA-R#K1diAFjVOgB"+l@^((6-bs(1[7.Vf@XQ!-8D//.d3:;Blc4$/o9-:JhAGRj&LTUng(;;na).R%$"\aU*M7O1]!eq1?s>5>^>3)P]%WjhV_A]6c7dANhm<(JC36*O;aeW&a<jt^LF*m7g75?<\=V$@C=M!:H[>&KJ-V(KT>57&rTVFs%=7=,nX7]RW-hVjQ\M^.ao%7@E.5=LT0A1lOjUchgXJ,J2AWW=pT5=oM3F1`4E0d;69uWD$Db1lAAFsu/,p,Iu4?WhD,-"(?J22J;%]k&Rb,q<Vo^goqspF0E9$Yh54C:/l\(-H2eW!Z]^$Bp[dB"Ce_W9U&p8RkaZ8NBLK&OHra',!lYroja]>f'5L^O-M`c!*`mDe@n'%2jZo@Q741HQ1a'C[V]5JL92^sjm/gFN9At&(@M^pKhhqUFs(?+bhA^jWd=Xk=&kh$LphqMW&k*h;Dc%R]MaS4h%S;TS;&Rp^aI0'%l7/WH4CH%5L9jS-WAH@-C<GCfs(rsgk'*5#T3O4u66djj::!9#)op81pmf,T=/@n)YC\\I-`,eH0Tr3H':L_b`Pc]JXW`,\G5FDH%fr`)i]5fISC0fFQYhH/.T'j(;NtoR+[WH^G*M[8;W(Vp3atpYMaDEZLD_`\aDSEeWE:54qke9Hf2&bm;p5Gq6buMV\*k!80.Mi!h%+4*a+QFKjmlCm2M?JN4C9\l__[R!SYCY7QaG'^T/FI/;G'-l5RY&)D18GLs9o*$]M[]EkNb%f[m-M>7%1s?ME[sI5.1T(n7fUZ$1%k]6(9XRg1"Z;i-=p9'coArQ?i1>jNa'V3chqYQO=4b>I!_]YsQ\Mu%,YIkRO&qsV5j8"RGH*U6)Sa*1SAhH[YQY^>$_p4CV-"/o+%6rsM88XfBaHr&Q'C+Z]8L$jkOER*/hAd+&md"mu%1n.mMG>='`,%6Z2\nC"S[\4RDQtIAVdFDYa`Hr:@%C)e_&AC?i,`8C:,l]d^%V!Nq"BM]Xr9Una9)/Us8%4$#[MqM24#@\8-Ch>KjGB8^^%9*Eg=$r:P9Vq0No#b?oDm*IV;:6"(,FIIUo!m'E,WnJu1a1q[h*O[i%'P3:baf=!si`"4tRWrPG7LmUsJZEm%i?k`Hh?gnY_Xr&G1aA+C2!eflTQ<;_B8;47KO#&\gq<@0Iq56r5sO])TLC9V3KmOnisOF.%6sEAlE_AmAaCe7H5nr:9MK9hA6.O=>:GQ[h"Xmt$Ra/\K:?SHK8]2:PZN@)Qj!-<Jq8S6ZBm)6iTg2BKo+X&]D6l]ZOa_$i2W_Y1%C1n0;)fg+hg?r88$9UI>10sRVl8brC"EOkQM/etZpW8/\BAL0[SA\?#_d0IiEY4Z(^"SkP*hGi$bX"bBLob1SeiM#j*>,`;*ErXu%D7=\GDd#RrmA$OR[rt6o-$HB[BRt5S3%QMi3ZRkCJ&s(`n<>7!=`UN*=$&RA1H$lsqN<,*WQ11K/4n:T1n6]hX#%1KO/I=bF7CQg%>Vjq7'E5l_`=_9/N$H?ZCFhJEZoQ0EV[5*^%;/F6]V"%b_8_rd),Es"Y[gA0T6t@C=e"oXlC^/X;?8.&ZY,t-M:8b.kN[ppTdH1c%^AqL+hJ9]>e$+05!Mmkf:0Ic%=h%ueipSlHJU",5OK,."-@VHNEn-"&@jO:@Vn:pIB[gOa#D_=HC0*#E1I^=J^@O3?RqURXhA?dE%:o7W1JjkTp9a^iJ`Qq*=W0_RlF#7dCH9i35Ua17-CU:s5ip9#GR7;r:-XPkGPmg=61+u2\`=Z(L8_rU\Rh?Fs5,][)WqR\Z9BnLV%cUe.XUgT\qJT%NO0'EX?oU:M.,eN6%,2I:'SX#_0P,s2ZfRci)huoYIg=VfRI+`[tR#P'a4^IQ`;VPdj'15;ojf48silIq+enZ->%P@7]9B:7^hou:kVS`6\[0F?0A'Kt#^/Ypp+b%0U#>t>em[toX&jO>G<2%!<*?aAjm[UX/ER+,6U9t9"k`Qc^fD%;:_nfgi`Qja`(%lZH6Ag1,mjm/iJP34HrSj'fLXMRNE<=mtB[%d2ud?CB82gb8%#pff!BlA2O%e!cjFDJXnjF4NGDk$ZQ[KU@9hRu>ZjmW\cj\<&%M%Xd+M^3F7nUZIM%;_n_)2=jCl[n/_=,<:!TBai[@q;mNi?@.M+e3JM:0bU6%Fn9u@=GnG3-G$a:d+$<ia`?AM.kM=NM*gUSjIlP&)%bFMm3inT2ON$:B6s!#14,+YL/ESB13ki6[SIKFT"E^;5WP6.S\(]hOQ"srB30s&?O3FOcfXq-)G3EYVbJQR2Va@);?e@'-H#Q.9R%.7S6mck-^GiUSg\h0dOI`SD,'Wjk#`bCd8cUrUAn`UrLL<d2(bM`I;sms8P?(\)T]k;^<Nl!Mhp'hqhX0"]\sW.g4/%jGXY=]nRu%W'$U0N!k$Ocp8k^dX*I6e_m"<56o;I&BR8W;UdeQ&.ta,',@1?&iCE2@.\?@a7C!ZL\22Dq2Qq5]?`&6FukEWbXR]HqDbSehL;uT%Za&05@R*#An^=pi]g`:rC6GWn&Zg[NnMk2N^f\*cK<s;)kR!@a`r^W@;pah]Vm`?c"I_+E$(5IU;URM60SCgT\\W7ccHI:X><+fY%#(c_pO(Y5`G$+XG?8,ZQ`Ri,>][a*OB'.YQG)h")S;<8aem@+%SD@k>B?mH^Js0cu7jV*GQm+ZK3bh*68@>dNl*R0*(=)7ZY9?K:%lij]I*9X4KlDO*sLXtg2:W(XV3n<M^PV^W?+Hfs;)5or8D't%QPBBqp],0!u.k#bF<459R1T5cb=KKfoa`Pkq**/\)<9%bS$_cd+%6G1D`LGA=H6fmC?UV[LDr02iI<"!tE;UXn>WHI.<G?;aqJam-<WD;k8/^0+2F3.'[!F:MZk)%Nd=?,:G[EVZs'>=66=cTH3F'-;T%mSD"b$j4EC^+ggndVrr*R(]69C9LG$_m-Cd["du6`[R>BqS0"H%^r`C>k.'-4VCJ4\cub+3aJl<WpVfrpLRu3dXBeQSsD:7Q$$ZM%21EhZ?J'(;p78nMLN`%6lne%s&eF[aF,%A.'66")'fG2l"*jY^LUpMB=^[@r2(j!Q"+aTVFsA'.U0JKMgLdR\-Xn5'??r_Oe8bZZ%2J+(Q;(mbZn61HfTU#d+bZJP`)&n7ZQ8<+lFe2A0!KUHJIhIOaG-Moo[_hen1g=[-J_X@f"&\VuKmf.jWk;I6o4%N5V&mRpenh0g%G$<fhl;n!_Y8]L.<EOa.Kd"%i7;B@Y%_!`lOg&F1QL)CjHq%sV![pL<UuJa>Ef*o]Y=5Q?NJ3[VV;)<hDBiTG\<8C28d_NVHE$50%fhp=XC"'"7T!&D(+gqa")52O1?EbP>k:"oE[[j1G9:EDeXuf7g-dZ'@@unV[Hs`M)`>Mi#[ai4l_oK(9`?(Q(Y5Q?m&R^YNN'f\X%Ws<XjVUl7T%.dg4$6P-pZs<K,pRp`\,Go7^]-%\uaiTG0m"pu'o1i&U*kVBm>oiHVe6kj.<]"DWO4JoR<E\.2&*9V]:d]j^nJ%>l%a^mQ?[gT^m6,XKkd6SJr!flC;3);NWAHsad'J2/5VhER&ea7>b,0(3=e0b$H.^2E_C!pk#be<+%fu]dEq0hg3Mc5,TcnC.>a9)%F%B%BrOjd\C^Br1AL!+jpe7WBneh:o(,,M'r,o1X@@mq>q:jS&"'oBL0O9uXI;"trh^22QAf?8'S!A__V4=2)P:?h'XLdOV^PkI/@>%7]hA9Nps+n_,B8KMn[+4`A+3X^$B?%`G18=PsBZrVPjuR]m$nGXm_$1S.uEP<NC]52O1Ks8M/!t(Qtlt.]]#&!*-E0mI1OE\<>f=%XEL0%E&U\e`2TMj![[P,2?d**oeMN8HWQ"):X</)%TLO#@p4YL>pku:"^gV>m(DPjS&:)0Fe8&:A_)dL?LR"$lul5bpVcBtS%J1:%/q(9'\*qa4]_3Z?]qF,n*=gQ+CN\fp4l'=FfFnF'7ZS9.XcVr]>?Ag&3bQDPQ@*5hF,l%;l+9/BE`/6:H?&kLP[[3_<nMd0o@IVc%GFhR=,&b_L$Z<K6Rk#OA#M4?I7^84obXMl]KBW6dl;!A\(:6GiCZqQlGI?pL/6SId80fdfA+<*d0e&NJ6,b]s*EB@V@H^Xu6EH>(%MO&op#IfmI16GkZN%Il/Z'>`sJVo:UYK\PlW],[^7BMb@Z)oL9ah:/GQarSV.@5m$=linR%=>f$[T"<8k.etP6s/tFmQEu4M;00<%Z$8?OT\Yd'OlnF>T!-qE*,;1%R$,`r\ta2SZr,jJp`s7,a!U72Pn-Ag,q5MNK'*O"8t*2c?o:je<tf8p6dNUQWX.EQ99!Dj1'&H!%>MoojJTC)alAVIm<k:PZ>=MN,B"hok%9.#2bLsrN*X(8]:,g=H_a7L2#.^CVZmi3b*fA6b'^\SsKgXqj)U=?,^jND8p#c#S7+3Y+%]TqM1l]o:Ye"uD3#/csH3a#_"'5b>j-hBLE6he3n=L5r!--i%=Qc<d1XI.:A\[ot4fZiB;q(>][[u*5NP;UsC/MMC*j,<N5eupP2%$LB\>0%gso'('!o;eJ#V]\_/8L&:D#C:WtOT"uI`oX^;NJup_HO1!%$E:;+Fe_.7F*T)PI+Mr<n'_@.'[4-RX/g*M'Om;TP#WZ1(%j&GR)c8Ji,kKRh<)Pj@l0P:S'/+_ce<-;\8fX&<$F$$hr5s=RmY:[f&RtF2dSF!E`L+I:PM)Dp8T(BZR]dEeQ)<eKqW3UPW2^*Cq%\73i9E4gnYaZ8"6+-Z0LN_[t:gj1cq;!E[7F$8l_H5o#YW1n^lH^db8HerDEmm0)RMm'7<FYX&ifEj%m`(k;qM;#ROE*SIsm.j!:%3aYU7Q7':L.M]R"_iMAQa=l'U8[h,E:om*TH(e'K?n>hWe1>r";ANS?(\nODD["9<%F6c&KhZ<a>/)HF]g(i>hY!P?\G-t7Q$R;2%NN4H@g.ncAc<.!1RoXH/CgNk7.FK6gUV2/\H[D':E?F8e^Wi_JFMAFD1!`+u+#$g]FYr&Kom&K-aR)4dW*fFt$Q[s\F(r@Z7gBgs%k3U?MB=eY%1Uk4KDMsQKbhZ^PEBW/7CQ:/*c_-*=oKeGb1>LmUWqp>Z)<-bpELS!FP3G(sEs2*R8`XF*l@c<F-S`_;)@Rng'cZc3%SgpgZC<f__OBFFL^?ZC";/<8uA)!_%7c?B>eW/lp)8^Jg#&b2'4joOO<E1*olkib/WkP%lfMqGa$W(BG8V"JW(uUdM?C,Z;iof]q%qaimicHZ+=_JC#cfChVYe$WKHKF@2;N2HE\<]Vo%:=n$ISZMYciU$P+^6<&7BD;SgSbNI//!#"%5iR,+aO&qRW.J8d:\S"4J9A3A%e^8=N]t+UmhXi9e)nedtC+?Gk*:+`eECNKZ0B1i`+t9PYW\5:N?<H?FM.lr-!nl:Zg^oHYg]=j[>E5ZY;UJ,d#/T_R.718Pg#0BN%PIEM8H^U((>_lHhYeH*OPH;`+&BkrWTprO"C^5QR$$j\4EYm#9=jqD"9dhSV$;9-Zl:uY"%.9*&Y(t"YnN<H$0X^EuZQ<T:&7ZoQ%l=8G^ME6I3M3"f5Q1)ji_^p+Or[2KX*l8R'G^jsk>V6?K)'Z^@fLX_!N\8Up-UXsOI8&3m0hE*@5:Cuf@,#Et'^a#:;Tf^V;reKS%#<"!dqK6)>#JCKD&JXF*Y0[OpZS&ei(Z)GtN81"4NL3B5;`;q1=rt5%q1CY6oGW#8`DT8"dqF$jg,mlE=.DO;7-](W]W!jTgm7kL%]BH[_q[H_Hj^R!EnCUlJY4-Hb*[+6>1:AHQB8GT2OIdW+B28>e1+[+[&p"gD'P]$nld\fr)Q4pJ_k;u0eI,u$((PkDM67=D@@UF_%4Cn]=fdUAQBB'GUY#^C%f/r?a\?j8]]['q'QWHpU2JQ4:QH9?C.sb\a%=ETqCgg''S_mU\PFc-eg_R<Q8dm9(Gh(o(`Z/5d%n$e+%WHrb,aXq>T(]2!s_9[mdmu>p0lTI%np?H_BJXr:Kb5Qh/;SF%$=jq.4#F'I5kh:-e0+Mp*nBQ@]X&ZgdI@kbR+_QF9D4)SlbuCPC%Vq/O>h'+a[pU[Zq$-*5]o<X*T,!*%E7[LD1js%P13Toril5YsX8'8Z6qndLi5&5%&66quRNGh".=PE:&Ht$Lc5@Z6g$NYCb@bU9k%FiEN/=%P/MgCO&"'R,&\2&9gj)-/"n7r=9%e5>Db@b&fkcY>,"qnC(3*B*/t:5G*3TfjQ'PIq'EI%njY&2osDbG9<r9PKQ2.k[,l%5XRa,bre;[%FVWK`jeZc#8qH"7QVp&?f7$qAg11nr^LI%fJ!=O,nNkLEWm(lQ2'cPkS+UL:=>b7J7a@$^\)?to.0>eB.ePH+j2$u%7@k^n3/DgZ:"2jE`n7dcX)q40`<jC@?S+@*&!"W%$TGB:dHS?tF>&PP0U3UU0IQqO[m,dMf6S)JTBm`)eif'SaqaPKl:C.bj[ocZ%4"kfFdoE\NJ8gaa9elrrZB,7de[fDhA3r(#?Y6D54HXRo!_Y$)G<#m1p*M]p&D]i(fdC`>?g[]:oi+GV\0$#Ro^Xr2>%N#q2BDW;%[crg^bn&i\33+cREX!^!6+hpk0Z$VSHitmo@+[bc5jb;1-nUVF$j;8WCN)qT_L_%Z_E\oG'l.GYjAtX(Xt-BeJ5eZi]MY>+KjXC]%a,['pBbe%#RAfI#G+cE7P3[qg@o7h&29_2;Pq\lt\R5F#Qf&SMP$0uq=M5^R&kp6rYCT78W02Ic.)jaPml30\38NGJi8?.;[l]iJ%@`Q"g"#Agi%]q!@6Ie%k%<Q)An#4.ARNO;ie;lj'r'\h`'2EeM1IpG$a\(g53QYi_KktG6^lR_;G6%7]'HS#dqmgkl:KSK2C1<l-%%M]Gpr7S3&#0`b"K(L`W&-:#R7e(j+_^er\f&34E<2kWsV4KL"nr;.Vp;Tm.M3r)\laOM]9J<4FrR_LX.LaO!S;cU!ieUFjW`ob3%25uds"W.(RV*>@09g&e,BT[LtOeM`j)8Nsg!K+nG.X\GgIf?o.>mc64f-Y5?,No`;OBg=/5L`@t*LMm/:Q::F#F*BM_np1TI,t7+%_(mQfDDEdY6OMC[G=g(3?KeL'AQ/nq3e4q%/:oM$V2qTZN0h4VA2VU>0oJ+iI2us^-*dZS6t,3qc*g'C7"2EC)D@)8$'7n-O%Md^%,<DWo:l+$Dm(2nZ\RWkABj0tgHmLTP5t)!a6_Dq,8-0P7oK5"<3AqOD'6f!$-Yn-K[.s2pa?sX@_?oa:G#M6QP(oaK$A?`*I&.4-%E<:Fm/J]\oZ22_)P:%lr3\c`X0<"kkNBYH3Xj@m2g_RTdo;e/)Oa\#$%K(@[pg26&Kj`C)-leS9[lEOui:eGk"/<u;UGti&?D<rV%j:L,8A`j%@&KE+NPu3];==<b*_,nBQ"s)r-@@i1R<YL]imNi8]^gR-0%i]Ja(cD!T(%QR"9F<U3b7LmE&T=4H$dG1HFru9['c>Yq%W%Ae:Xsfm>+uUWW*"BSo@phER,[sS:@4DP&Z?;+H*>sn]1KfL`#q"V@O[,)4PAdPto,,,.]Hn'q7:?`'IYY[&M0SWD$R)RA"^2*U%BR3T.jj@SF*:PkaKa+AQ$(g/%DII5#e0uVZYf_.j,8W)h/Kq$VoV%BAL2d3&207'jJ11Qq_mKZB)sjd4-]SfB;[PJd3<D#\k7cT[%n/N]=_fB(9Ziac$jkCq1Q+N)EjR@,WXr@*/CES;K(UZs\KaAZ0k4.:0&kA'HYe1!`Or>37n8(`QX%0N?K<Z(OgN.X)7*6Q:askie%j7P]+qN6+oG+Nq0,=<@anrofWb^.IEE2\2-RMm1G6>$OXB$Nphp$Q]C6s(0r4-1j9`"/!@4B=`m]b5%\#V>j!d'^^E'M*-7=Ecr$%[(.R;)V]VZl-^",S-oRmJ3FnT(i.Ru;82DEQqjYGZ6dm6]Mk"/E_m'5L9=(Mj7u/eDS^uO:W,h`('Ef=&R#CHNtH6lD5]![E!K*U%,b`QT[kP:SF9dl^M'o]8!*L2+=hKMs6pA;k1(HqmOBUSIcjrdF!:5(p47XYW*-OcS"\1UW1lhofNb<=mqY^[nHq?4L@cU_#Lhr>(%L)(4m-Z_SKfC5j#Sl7A.53=-WMe()$F_Yc8:^^\@,+q?p_?bsB!\glM]NbMD)_D"ULXIEVZaDM6aB+BQQD$aY$/K6hY0JX/pJLIC%qj$5G>XuLbW-7eFd+i"Vj\h!DigpiW!anIBM&k*+iC.:D_0s;l+p8[@Ab&s"WGi)B-lYnu[*$bsW38$3i)38+E<J=+PK*;hYi3i%%1ILYqAg[s1$GeWOPbBH1kQmK;L:2Z8#N*_`"r(c65bas2_4[]k$2FIMB,It8\oT_?RL8L)?JSGB.lk7CKqbCf'tj!eXRKX)>GpEG%n)Y*pXiYa#VbJ_FSiPd(LCG*Q/b)Q46o_ddE\V!'2Dkq@3'L=iOL26BC(CKMUT.[#3XD*^bpL+RqM"C)=i\FP#!e++?AICT`FeY7%)#ebS)qta/8K-82R;Ia/%n9Tr+n0J4ENl+,bO@)BFj#f1):,ng7`4*HhA`SEUO3#Ke%os0^OGnGii<IU2eE.Bc1lk@!tb9jr56g2%TS6Dt7j\l,.ZGZ]#5EWL/pKfNjRi8IP;D-rPLhS4NMupm&e'9l`X@-JQYWm6%)<_&$ceCF<-t(&_B'>CW^UkWbh3%73pnu?T"n=t%K>=/"-$^HZP/'>E=1nSA8p(9\8`*<kFV@'_@!"'[JolX[(/TK'?q-22%?$`cb=RgjRMI5XG$HMAlU`N\>6)8>Z2oNEr"2ad_-:M<%8d^Na%fe/;.[ruDR2-%D<2l+4&aOWs&8Qr8Fpr^$6,bmH:5S&SgUphuF?Hi,pgmo*>]@LtNA&F$MIoQ?kW4\1(f!M`*WnQdb0cJ7%Sq2!`GpB*h2Lm%/Ferr+qK)qij^\4fKPD2%8bd`e,KQh^&\'d9"SA1/l'4A2$j6\L@.e?$-SX4)#TOD7^rh?WBXAM\/@\V(q`M!r%7JI-nUoA!tNIeeWIQ!Fh"d`"c:bft0*<gP@JUHVq@iYA9#Y\^d]mpbsk[JM/OWb,B=Tft50`rjsJ:N0C<JK6_##sI*YY'NCS`MLG%"Hc:X'$KBc.:%d]QlF$Cijc@&O006"f?P4f1^2Pk!*+q'TL4-sJ.CXhkl=0+,&K--]mBd,YH>@F2/NjBU)?M`L)F(pmr)j9VZ"rN%:I+.bWW1a1!eY&d8hMQS-e?\Q*L'NR@*iR-],*77Igb(I"=/=?!s+Sg=>ED.nR*"4!Is`a$4m>JO:6R:^8'`@"!:$]4nE^e^kF9,%"Umdk]#[LD.V^K)JYh&2d"PU2m&lCu>7Lkg.8Z]E!+Po0f!ST*UQnK\Zic(!3!.,C$\L`[FImgj9p)DCAK]PTdY!<E"#!Kf6idMK%/Ni,l#tj1*eBp/AZCO*"#sHZcN%ScJ;O&^5K$LO+UD,ba"LP!WQnU(!3D7i,TF%IZZ4ogY]1YQrgY'`mNU[cZ[uln`)/P@coA1(E%_Cr;Np7SlC+0-\&)aTZoF7'B/@g5K>'tIaqBOFsu^BbZ1a,tq1Z#hH?"+<'YOP>KqS>6-4S`WbN$ft&qpWM!nUo7fNbMFEl0=&,:%\CW:ljU5K&=Cklsa2#IpOs'4<.`/:63Y_fW-s(tN+=q0Em[WtCXN)R]D"!QhRa2UP^ICK(=#h9]Ac7!c;M)q>VJ[C[%mrPcaeR(u%?'$:p6;]B#"ZLCH`brI1">k1"RqiO$@Ue^3X>iSE>B96^GCYI#^nAh-=`("VfN&hQe^bAMk:uARedu*t6@<"g[V-aql<V&_J=MmW%FruFgOM?fY"VPPfJbR;8jF$;sQjO:).mVj0FtE_D>Z>rBAGh,FU,($sEs(V3@2`]0lbOt+6=V^=^^8WqiR&(P.mU+VOLWp[K.5BD%^bPB'&=@PWfjDN[hdpC/p\D@A&/jeq$i@"-(sA1ha%mN0\Z?28bd,SjRdGaMT/d53G9dh19\p(EK;G_#lZsjuF?ig.V*I)=*>DR%%5c:tVO9VQ8W:[n$;QPKtj:f=onK,qTW<tKg8uAg>;=o1O\^D-!J#EJ?#^k&1U+e*jlCmML:=arW#)iN!OX7#`SnX/%+MFW3FiRek%5WjW7$uCVuN3;fk&7#?<<s=s:^n:HtREe$IJT)uN)k#YAQmL=ZA72Sl"D>G#7Q^*r,n-#MV1W<W!'p+(nY^\sQEd6bK@30IAmkmo%)6q-g&D_[AKXI!mODBV5^eMop))K1'?;&AF?A6JcC(YT2X&09&Rhr1<*G7[W7E0cX()Q).P/CO.3g1ZoP?\;J0-aoQn_C)<>#<?S%ZN+L^UJ;W>EX-i(H;UupX0aHYBgj<3RTir#5-ZTQrA)j;R<a5<1Zfj>lti^Kd'`*dkm2\i-lP2R3!tRaLu#`/5YrpNG8(i"V]"\9%dBU2i%l1Q<AnYWXFEn,oCS?/H_3.DN'<k+7!,P*WZpXX5ap:,M77q>B%=/bGoLo$f(UC]Dfg(>NS*CKn`JP-LYTPYG:Bgi*nkiOf%;KQk@.c%4LTL6rW2A76BHjWGq[HhFd.pCg(!ukKedVVBVX0cI'KIj6MgJ&p?I@PJ&@4O?-405eh)SZ<E/:jr5P5HT[7MtlmLg$Qe%"Me<S,'E=ZEJ8emN.%cA@0`a$lJ0$KBk1C5f9$F,YYK_7%L2''dKu?\F`'?g!CmcCV1UC`O<Gm@9%%T=Q.'S.Je1Hj7A25t/3#E'%FEU&+7MjX5!mB%_3te]s-kmB;kR']nKeT'LJKY_1KBbGSRQm*4=Xn`">>^ffkV:b-K$"j2`gI?FiTaSr>sq2/AB.=LMs<s,$Yl?>%T3^8&82+O@mng+f%!\!:BGl(HMDQAY_qX?B2ur2H?7.Cj!$/9<LnQ.L=`"Ggi='8:U4<dVR\:sHCb,SfVD8OVZST+c<0ZKS+BoTc%L)tJ>9f1_DYoblUg]^s1ZEo[3&=BI!:KCL,"M.==Lf9rNGrZE>mm`Kc>Z,1P_>;B%Y0g<$Coq>'b.*YSTsj#L@i]u>&D4um_K,,I%9YQAGSmr,Y6,C/P\LhRd6CC.U$69=%-_VYdSE^7$WXX)SUB3G7FL;6=C/I>tB,B3Q$6;8;7j-KDJ\=.5)ODPB[8HT(S[Z][b>4l*%TWKD,Po8ZT@+_ndR=QOr\Q?<pPJCpnlWeC1J4r7j&lU[ppDT$'2a9@m=fF=B\FC82\*_H5@^u]S36mInKrl(#!feuBR-g4CUr6^D%[OV3uREeV`JO:$i+he7B\=t!#-H-6)/qkbb;3?T)a$H\df>Y^IiIDg0*@hSQCX0(0n6BQ@=Suc*2+87XK!Iu_0N"o[T[-r_i$oZX%9T5!*o8`CUa?B=4UiI)-].V6Hcu"CfSEif-7>0KV9*U@,T^tdU62s6eO]X,c"#G<+RSQ1:'EeW'e$(fM#_F?>-_AFP<(&:M=)`0E%5O^4u+HT#_"B*skC1)WUR,ZDhV+CgHK7G[Q:A9dWWDZtji,)Nj(c2"l'n")sl2VZ"^S>o*"g'MKZ6e`8(]jetZADWX1iio@bcYX=%A!%X-2es1ocgcnC@F%Di9l5i:'b=mg?(@)'(g,Fh77&P(]pdK=!'iN1,%DcUW8>hY1#)g$'G>DSG!MoQ(7^K#Ba:UA[A.oB/N?or%MG.sjbM`_c<G6(]'-'e6/37Gq#fT9+F9l!!Y(>g2GW\hNf+,_2KDi6Wl^`a[H".(]d8O3MK5RsJ-F@ZVfYk6^coqY7PYgY<-mJdO%Z,32SKkV="h.N!K&m@\`JmGXeG)FCOg/Jb&P&H`A:b>B^!*P3OI5RI&HtLk<EcW_d;sXPc;%b?6<1fqI[Q9W_cdo+C"".4j2D9(e%5,`p]Fp8/nT&Y](h57&2VV3@DER\_1%]`?(CVTXY)mocV'$.+&\N0@1H%3\+plm]G]6'o&(tNl3-`4BjUX#O#[mO_A9[AcWb%Z1:%@/Pg;D:KCkQ$s.`l8j\Gh@:6fPLkM.m"l>/](YH;QU=4mF"\I=`([b8&-d"[lRaZ^$!6$5.4&@]IJ+Y?\1RtE0D'n@.QW^.PBne5%^nE2]1ie;]OUdC.iT965*4SWm8u#/3ZOg"94#<f)g>hi6X<F5fi0nO>3D2e+W,bqC"1,:Q-lE%ab!i-24tQRC$oKkCA3Uf?@W@")%:4l:A!b\feM&(p05AmM["c#CG$k&73a9lqkR?j@NdOCTj#WMt)P6$We"2n'9W[WQjKGAo#i`Y\\.3,r[&Y+4g?op22llaredCu9<%HM9E?7lJC.L4Mfs+Uj<?M4dGj!<J(PN_V0l54ES-VbA@H,G._5':!Z?(=HEFqC,tU-_K"1-2mrf"UX[0E)G"XV7:9+8Anr!W$s5n%>P;#b_ZXr,?<^I9Sl?Z"j>@(GU4>K@LA/S(irr"L/K5P'V;j-[X/WXhmnkPPdjcWE"u_1U(b^U`S$?/Mq<i#Z%.plq-A5]s#6B`d%N#W_!i=Um'Y:;<I%l(q.D:ksO'hZ,R&`b)Hq#NW#C9+'KH3Uru(p#Vj8tO5g)ASCMWGNX\>@cD9K/b8SO7,/Rj"dKU*@o01+Fcsc%#N_-_i)%BP>tr-iahbh\S&L;T`@HR+PIoLLKY!pDh38^bUtTlmfG70[&<fZpm"Jj`VlV:?i_([L%q(uqWaSMVn6;uRU2$OacYdB<%bDRqhLeUVrY:/doWfY1T0[#c\1?5'9?t%"WQ0W7<lu6IorCPNB=V`VOhO[\GYW<YQ%aCsp&XfQC1:5K[j+^t6BJXV[Ijp1\J5&0I%>+g^6.*@cqlAA<R.%EESRIi*m!`G2>@Y7i#d:=Pd#ngAu2>ceU*D`OTF2RWlk3M6[mT&G)pF<3IMet*I"T=5.6j.*K-(%+N+qrm=%M1Q=ABoqumeE`:!6bj'"@P2.4,6:*b'5sZL$V=RoB*oTpMLr-Nd7tV:ZseDRo)J7WhSp;LRj`.(/$FO=hT?kgV+d&,G#3Q#Dc)Je%1%iS]qjAbfimhL5/u4l:K,3"De4o&2\>#S5Mo@4$WW8;T@f]&58_42I>8[%6k=ZPJYV%0$LM/(JJXTal6AOWSp0-bZrM+2=A%Meg%;7^R'.EA_LC8F7)fC-?"RWX^]7KKIX)"UR=&C5gLD"ko5%rX0&L<NW50o=A>GUU&o:!L+0ahmC`<foCFfEWe14=F2&$u^uaDIEk%%0:r[*K9pNX)D$q")pQYJ?Qh[U&5oU8F>-#hJk?Vd\FMC&bK'rU=!1e8]GSE/$S-b3IYgW]Xi\MoRJR'+Cu&lB_7RM>N;I`FpXX]L%GVI&A4Mde:NW1,`g:Bk1^F5r6Y<.m'Z.Lt8r"R_T?DC11F=InkQHZR2FjZDoZ-a!P)?ur1?o'bW6'mh(p>O&L+tUbLX@@09TdeS\%V7[$PRTMJiO;PCg`mt8\Np_f*]1ZI-UQ(s]36J*#nZR-+,4!UU*1G<E?jp(CkS>87F)0uiBX/,-h)e_SZE*l7GVtR+=<^/;)CeD0%g"\Xp'I+@pWt%e(faJY`Mboh(*YSjN3OQiHN9Ntu.Zk$04Y`'jVN<H"G/0u[aE!soa"WMOa]t=$?dIm!6OU)F.N=)_`Yu*eB@]gV%Ls7tW'4J=rFpL2SH;jm_Ns1^e`1;Z8feh:gMe^g]BaPXQ-f+kRN[Ol32NUiLE\B"SCnh)/(d3M8Ci*3K1;ZB/:.t%2WYF"C9jfX4%W[Nmt5R6$m]Rt`,4,_W\i/)HP.!e=>NBgqb;1FP1"N0cV=C&8HOYF;b(;kLPEV1KK8WisUGU%-:0&G5*_*GDO282u.:e'e&)#>X?%;ph0[A"];7)6!8;cAK:V)_X1+JMr*%p_oWe)b4B,\as-59@\tS#SulrK_dB>F2f/=&j1p.-C:.#ou5VHb_CAd#o-q`mTIo6Ypt'U%OearP,T.8d#ug$oW+?qg*L<%*5`G0pNMJ>H?(,q*V&c6CF#R.'(Psb!P!94S[05R*.V.mMhci&)91m:LK^n%R5pKVhl>l;s.jJfg%jK4g=J3<Ql_%`n<?tY'j'*/]]j;Td,@4-XWT#LSLhtLaQDiMB.N&5;>Dkrh&9"ncf*,E?7mMe<`X>XGj/D1ji-"iW2-&)D;90q[p%!?!cY@q_E;N^3E("l*%lP?PuirYNS/a;B??DLHHZ7,.[5XuB&4cIqEY+:89U$;(VE6nYYWPK]CaH$p7PR%:\10if#5=cM3bIa"t<%_(6Qpq&n2+jXddg`E[5&l4cW>BcGE9+$+%V"f[8*f.(qPbl!U=Y\6?Q[Zs][M.S$+HDDcI$BEPc*q780_?.rmo&KgSN^2bJc)I5T%#P'"alI^-J=[BY9YUUfae`H[>+$+7WhXSmGr<EB#bgZ"BMocg?NH0Ecp_eru"X"^&H=1.%CA5O1?aBDN3/OIClRe4XL-S`D\]/2m%?jjt1]_Ji>/-.8'.#TdS@f1di7i,2l+T!^ub]5WIJHLU@+P91M=0L$F33UP=Cqg1[n9FK"Z(7t&<kL7eKT[[EU]_B[)`\VOZ4\jJ%Rb*o]*i/tbOnBPd_SeSp_h]YEcNKKn&[\fh%=>u2`tl85-*SXlZC12leIjgVlEc:-=S^CtP6N(:2S>t$bq)k>+.i7Ug(](&clJ>R%4k*8d*ts33MBsu2aXQSHgnu/`FPF/5aW-3Uq'$D0#UJ)l\$6`R"4bH=>fW'VFYgjV405fGb_*jcURNrJ#PE#2DAj#m!K<\=60G7!%9K"[=U4F/21d71O'k8%LTWk8;LIOY#TX6E^afa;r$.`AnXPQ8Wq@TZu6@FYcUQ6B&W"Or^^dH<k;sP0u&rmeQ-.3Us+L3dgF3_.F%DJ`BJ.V_^FTF)_hN%S*Q.N2E>UM;@HU+eq!/<//cMb?]Ib+/#6>Wf_i?n[WeW*b[8(kEU:EjC";A5R<js-L?Afo^,CY/J'4r55'2%kU(DOrU%=q;0NYA-q>kN!(TB91l<E3A-2r@6%?'l>AKYqLqVh,+'CH4$Ug]Tm.BeF\[alSU9-Im=hhK(1=Or)Pk-9AW@`PSjVGTh%neml5?INUW!CnPI0C<sleN9n]Z8A7^^(A021>tbu93)oc26fJFNf9,JbRZ]G>j!1c<Ph8]S]-6D:4XqGi*Mjg*L*D4YV[11a3!/a%rB8DC`=o/sa5mDbD=,,)r3A`mShn>/K!YM%`/D\WK%!AIWb11'!bG@Y<jU%=7+j5N;4M4W7Yc)P)=9c)>jRD]g]?Q^dZ_EdHoh)4%]P%2)[nbmMdYI.,9ML<1q*d0I>^=Q3-P_-TX],rL`dHMQL)M/I\d+A#k7-WXRcnHB@EM7'6870W+Nl7I:(?r,4lYj,OIQ._iiKF5%SeVpA.?A1tCU5)))DPY>S?mO3lC5HAn<;iE:=hhgC-pc1XKfA(R.MEFCTStJ'%uZTm5VdkB=cF@eHPQerC[mHVFWa&jH8"AN`4AW%L]Ck?pF:Pq/e"AS4cZR]h;#m5m/1%B'\8_!o>@eQKiQ`R*4qZ:_QHNa"ttsU/[j_a3"96[.Ojc.'?1d)0O-W((t]3^1&:.eg^=>8%<b5Aj$_2TA>hc'jf'0%ci9[:Y(]@76n2`GcCiZMa9)#k8Cm.nZ3R&p'1K8_2nBhphaA^b$c,$D,X[Ase=LW<`\!13=*J1$P])\oW%0)e<08pVcHT!JQQR8emf,YE+HGtuWis*X^U*kQ^ggD9cn\QCGpbP2b,hl[hJ__0_P8mX4l8X:pqP)*\]8[W0@.'g?DlPNj%*3[1/%*DST%=B2Eb%X%a?==kM.9IK%d/`/pt4G8PO1(F5%25'm4NpGGQ/b5RZrJsT]4[%uF/%$QDD&ra*BNr<kP']"$?g$(c;h9ZUn%Y,b%oE\&C1!==-,>q@*^19Y[71UEjJC+B%4%B!t=,kSRJ:EhK`TPrOm0:NXd4d;-C"<:TjNWHLO/5i>(ZdpZNM-PgP7p_HR,um1O05Ql%LP2`k\@p!WA(*<r(R&@RW`Eg*RtV(PQnN<OANP5)ido01`-gUtc>9e<p%7epKgFJ)V7r!VR<@e!gkBo0Z@mZS;4(l`3sgNX@$Rt.%i/fL(EC`,GfC%2sT.,u1dD0aJFsq%dj^$"=B==0DN6-t6,s7caLFJV\:@t'/;J!Weo6p#LC;TkE%PU]#>]%,?XL!;b&[@'RLgmM!%8'r@]NLQ\2s0mnJVl"0V;.S0qe^8#0'9JLM;9_"4]Nc8Z:@-`/S(nZ;.'*Y`Y=DLGYP*dVO9O]D@]juBKg*F,Jf$[WO8hp."A?Zp%O<n>n>GEuk^oIM*9-jX?=h1;fjBDBFZf7*MXXnI29SZk?%k2;./FlC@g;(I*^KnsGjc-,_Db@:Q3&SKf)Y9l&U(/k0mLC*_P=hDK%(OEck#*=pcG;t!"d#Xl`bS59@2QZ!SiN->L]%2L1o'Y<3A@nk5BT]9&3%@jHifd3a\;h]E3i3II3Rcn&n5a]+8U4NYfA*rY7K\]?%$-*S5NjV=gIuap=>MJ0P-H;ZZ/2NOZ(caKIb45]c_m'hGQ^St=nO(qREPaNF5M,u+.m/]aQWNRs(I#:H?[#bnM#;Q=KW#9&&+p/<%9ol5^lF6q3jB^O65SCp+d)dQ69^]0-2YT^i;2gc^0l-NB1#A\UQK=DF(8=f`'O>s:f>jIHD?Cf%=+PA=SAL51G$^[?iUlYdmTd^*%N6'kZCsTFt#%4cCm*BA2<fS66%,iGt6k(>-Zcc+f$_HN$DnT1RZYi+o:_Sl.02Hb#d0nin;!H^ljOardTjcCohVkgn0JkSK7=VQC%P_#4S;``Rr8o1/]B]*G-`+A]Cr4VP".oR;7rgkY77Bq6/'<%RrpKrD>K:*1/:o"cU^(drh/o]"L)>TB1\q[:bV@2(]#YmIHpVoTp%MgnJj2W:4;rV>c@$fDDtS*-S_gr*?qhUgkQb"?q+2/"-UmOBa\r6!@_[]^?T7aJmX-SN:2U0.(r*NA$r*]^3m.Rbi\[1U)oEtm%;%i;.gmb_s)$V6C9,EdQkbY;pJ%:E9e-/TjM64[0t0OAP`Bg4>=@Z`:YNpR.agQHC#qd>An:o(?^I`$AcB[0ERM[MDkB2+:AMMs;H!%Q:PkK$l`uklT#$X2@TI/8#^BFKm'JsX?#(fp*B*qTUgV+.-,LNS=hthD:JtS'qi_^k;,bl\g9l9fJ:_hN&A+%U,eU]8[c6f@Et>;%`DAtjJqI/61K0+r'Dnc'kDR1EV9JS?`[\.HPpU$%eoXFC-3M^*aBEcudStg6;i&hs[A\1c6jjDeRrI>pbmb.QVYD[mDSO3KR`tK4%5G+_7c^4Y/@(":2Q_sa%Df\]kV9*2;i[Z2:qQo_`8kbW2R$OZje="B@'PES(HcYt4,I54n-!iE.CWGm7+(bRP\aW,jk0_r_qo=8!%Wi7acCo)pVJlG0SJ>,tRh(<Z;D$Mqpi$t]LS(`oQ>2#Zq7^@jcQ:D#bAL-Ik$[<)C[O?c/:6<,5j*CX(fmCKd^ka%2\l,lOdCq";%$CDAa-S"mi%odY#K^['p"i[`i=Q4Y65/K%1"<I(NH?+l_K=]BUA3HEg0,==Mjb>HtPr#h91Js/uJ%E3n)4jT1i;S%HVXbKa?r<WJ%/3e>)NYHh:odpS1(Xa1C*<O8^-3G,6)3Vb9=Qj!Oa#2uArRXrWiF4XY<\$2u.sMt;]Mp@i[d##cPo$]ZQmE6!pis/]qbYHm!%pL6%V5d57[X[e^r)\[^I:54"Xu8^9QY_uqS63;g=Ro9On0/)Zo2r32oFY#a_P6XB<cqgbFJ0g1-15G-e5+q41JAIsoo(S2npSVdN[.gb%$(.0t$q(@+Jj*f"1/4f-VI=hPc&mo54r2*e[5XdD#/%E8drPWuGWmmnNGO1BU&jPY!$#$W1b.O_]?H3d2:#?7:#W+boM*N7k*`F\%E?cUZfKY\,F(o.Q9O&]X8`qeg)K0Z*V2qk5N"3,6`6Ltq\2M4Te"OX48aGSu@S`5/Z(hDKlK^]X<9aEg,J3D*-Pb:<EN0pX[j$_)%HE-`tS+/Qs5Ybpc42`bqV*'%LYPGj2qD20OK]V-3$oLu$89"%*eq49--8+$@f1+89<M4Oj](JL38!9m/=d*[Z2Pp?g#3\ajA:SJl%L'8Q[!*U(>cf*FH<ajKaHa'uWhXLp"3":8S/_'SsIBjY=6ghBABtboZb(jh"LJE_/M[@!(L<>2<CC`W&dS=*G3MNil9N2aNl4,Mk%J_"`d%R2MOdpL:7W,uY4.,$JH-)tiaaBj>o,8O5?.*6.40r)%[6uq2Xlb2?R^"8^<Z8XCdQ4>[KBPYj68-\3)Q?Wtb,QUR<o=f&^%\e9=tShMFi8pR:$^;<&%!5=_YL%$K+4AfAI^7]F-'tGhUK*g]<>+P>=XihUTdXh?V6D^UW6'OOmDiGZQORUE/IqQXHLRrMkUVBf_%57gVc7td8,J'EX'oG_=72=TCPh6H(FQ"^6/;`HW5HarWMA4QLV(J]pdXCN8i`JE7tdF[3.W0qIacK]mdpffbrU:b[-,8O50lacf:%r-brM#!qo*/;`VCNJ.l179n%Fo\H:Fok7ELS!Cpjpb@*%Y!(EC_ooi!FpL?U/J#eu-ITXWACPNA,E"cFU$q0DV!6V$IM;mAbl5G(%Cr<*3.[tE`W4+Y4^Khg*%+dslla*SJSuKA`9k(]1B03,]3NG3/f@o6I7bE#I_Ch=6iI"M8`f.XlG,U8=9Kn(;!h&O+l?@bFR!:N<%.qc$`(gUl4P0pHrp]qNu:N\1?eEsj+Wh!h'osj>Lk:Q3N:WEbWeT3HY6QDB"p-V?Ua-KUr7%J.K=6?st!5"='okVVAIE(:9K,I<[%X/^A+p1qDtl-JBm$b>$;1f4tag5eB7+Pn_6)+^3*Qn.iCoq_oY>*@iT&\t2JjKOficJKr@p,+?:?H(6MI(iFR-1FWHR.A:IrV%BY%rr(`4N;dbX)LMU/0+3<B)o$eo8jc&'L3:7'Jn,=PkC6-J)j($:Y<5B?s$[RJl$6G-6WQJRp-l4g*^`W(Fg!*2jo>qIJmP;&gUi0S%`5`+Ero\3$Fs;Z^WtQi%m_QrYGX.V@]*m3&*=!tWc1'qWF"U,WW2M`G3k:LIcCWpV83r?YTmRb8Kc9RboBc;-.;hXo(#04'$q]X_%fuC3oTn2)pgRAM`?&[NlHaCXDoAr/Y]=0/#oQBH58D)KY=)BWNFce'-ZK8YRJJru/,m.%8QE1JkAkZ^\-2aSW!>j#VgL^249<Efg%`e[LTm-;D4WUsbr5C^=OPM=W7ZdQ=picb@7c5.h7Q,bBPmJYOK7Oo<[%8USYdZ8RTiUpW&%.dDW%&]S^F:A-os-,16i@iDS?RD4.%9se!L4F_,tkKY&nC=R'<')Loj@Z;%L^iRa!MD"S5//$hkiU(*hfbh2fk]XRDjqfPpk@8%PHU"E8A3?=jXS6<]:GQ9@M9.j>_L@Ta%*R"a"%Xfe%2#k*k0MGt=>O8n5PW`QHk57&X$@d'`.VNHihcekjW.M\08\.+[bOYC+_=*k<c*"d4s(=$Qa\dU5r(6*.J-IVf+I;l0%>OM79Rlu#.?Z1/^A]:mNdk':&6U&bc'`ZE?h^up=[7a&CE5#hC6N%$oVE$T+MENV3cWWn/G4+W]:g5ONW(ousTEW@3N*_boo>fW+%Ii\WE>()PeS\I<!jCYIN[IM*nB=3'NJJB#s?12XX8pf&*j(bXnhYt(=C:AQ\DZAE?=aQK8b41jE2]oLbpNDjnY/M9-`rtj@-WQZE%S`0uCboE)T5@U+4+IpA@<::qhE^[M<4@I>f9FZ=?q+I?Rp<r#Z0c=RmBMpK%I-RUE!9Cea8+^DIDg0+t^:Dp,J,F:h*0*@OiH5oR%VsE0_@U4qH.Vi@i[1/V/[6:cHT7iZdA7:V`D^S'lT3K""g=o'+>HR5&r\9B#AgF9L$oQt#dDS!^er'uU[D,aj]YBc7ko@_r#+5h"%$LmkZE)[^JmUY'=.8(6;5(1U`_WOrQrVa60aY,jjO+=k1giWHLaKT<@CYNl[Ip5k2&</<FHgL1"J?[Ss13O!^G3A^MrjKqEn5ckR%@H/nA&'Ea_02j'9olg1L-Mh=O?L6arfY:tlF=.GP%o4]#%+78.29oGY/]Ht-V.'@ld`V/79;j9?HhPpt2/)+-PGl*W4Dir-V"`GO%VDKSXZ[+_5Dq=2s?#Or&A]?@"nn%AKVg5*FZ1G;M;@Sd&YqiI#VPiO64iE?4=5G*]'=eZ"02GM@i@iL+>-;#Rh\JV2T3KQZh6@31%`9lV#&[2/H/52H)f1!>XmPeA1FrT7T\BFeV9]aHfIaKF.k/;?K4[tZC`LpjpE4E;T%Fm"&f)8pZ.[c,)LB!^oLHNKg[6Nk88N#ff%QZmlr3e^`e&*Z<.RmepoXcgQqOC@<8!5AlZ+<[aUODT<;PM<(7@6FpF$8@.V(>*DNfe0`Qlcgchh6=@mqm'`K>PU%"iYB4rkdr-d%Z[?AV9^cII:*5RQg>`2uehT4EdAkO?6UY5t+,n6Lr3%WM[gc*O8hp71aolk\WW*ZIn`rm/j]`)u4'Cs]<D+D)QiBthP2(09e#m7G%@%>o;$6H?g2UCb[]AJc1g\8Zb^5Pp)F>G#J1Ntds#C'#ddUH5JR=F%Vo1aNL0=[&>N+qnCN$Bs"D@t',SOK_D0:D=eRNr?urKg@4%(("a%hc>u34h"U(:es5&a<c<'XWoHXQZ:h7o'Ln9h)RF+Ctm+!iQ3Ts1DRB_p1Amck5n/pLhES3R(D$s`G8QLBRWRP$0LVprjDmf%kdf5&'7@D/\'&s$`*kK,dUr)7cNFSF3QE(e"po9,=-#4i4Mf9\Y>LCk_@\iASD3p=%7%3sps?ehG&3(F-m_at2.#s1,^@,t;%moW%]FY"M\aAjdd9I%he0%kRO/H#m@-b<QLMBD_#J3mT9^B5TDX1Cp=M/eNWuC_,&)W?-c+%]Tk]SjkAmQL)BI2'lVPFCc.&B/6VMMS'%V?(]10FAoDT'#=g=M?\sg#N;l]Inf]6VHm9i"bZ(H!YY'G!E>,1<^_I!tL.qpY2[Qcj3pQ'">HHUkc(MpHeRNgfu5I"9&"7]6rnr%m8@<"`+;!dceESk06?f$-=9:Ap#GEJh9P+nhDOSn\W/H+6)us@jD=OH2gGTiQGiAC^-=.;3\[09(%"_ginB*AKe0nJ4acU>Bo\or%O=C-:>^>0]?LY#*YbghRX=+0=]=INdjI3GJQSk''B)QXlb0@)82Nt<hqYK`*oXFF6RF;[AM)0<:VtFkG$k;[?1l=qoS>g&\SIjq\%kt@e7'RLh)Z4dPsO.T(@*5dh'2\4o)RZO=fg]Ngr[M_H-ECquI?puflDiQQg%<"RSm6Tg\?!,ba?R=%R4;odA$@GPa,!!PpU\H-Q%B.(mME8:M_Qg87ohc;[?nC^@H%fGY5gI\uIc8S[?!KoJd(?PMTa*9)Y[oK+ZXN\BT<Go\$=,d)4OhUT+gJ@[3%N,MVm$LX#ic)rQ%@@'a#e81Q:BbM,[Y=QsK7uUD#j5"36QD6d6L]#!5T[:"BG6omReq*V`6KI:A>Q!5mEjMD+[be?QHl:koO103#B%Cj4fUg>\@es$:%K\qD)IGn.8H[8F7ep-g(+laKs'=`0G*gZ'+*W[^Ls*\%0?+"O.'rl;J(q_HWn#[fpe7GmP_@8G;X5Wd^2USWa7jC2)^F]mebVH]N%mk+%rB"6YTf,YVRnmuWE5Mf/Qm=a<AD*qd&J!r.pZ-Dj2Z&V>AVl^&Q#JZM7[XSN$R!1&%F9Bn'/pnMT^H9':.ri%/f>S3jG`p"g%T-=2Cn_%&::2E!'ZSBnje-iRhO!aUtd7*\V2S^JXCge-3][))Q.j\Kr3"[t\NRt&GMq9RT#flStD9&EeJTpMMX*JN?.<,=A8P)Mg%0Gnh/Y:e+>[MtVD*jJF5G7UDE%0qOpgYVr!kE"NbjR$o(LOM<ZD^P*fo$K0Z0^rl5DDU*6dusGDT;N#p48Vh:>7^(uGOtKB,[Z!$%'5A4cY#YEgbPF!>SUjji-h*Q4*<F/a(jO1@FT@G<o3)F>f-eCf?&[S!LX8j?.fBN&99u7VD2sWB$i.A]T0M0bp&1Jl9ZPneHS`di%Zh8&Z?RJV?RAW97%.:-gFoXn%=S3DcJ1fDGH4nWTKdF9E[$Kr?Qj&m:^*"kVq(ndheGHCB'Os)cK`apLQd\V^g3lG*/l[A@"->@e%g\SW:9+9jdK""DOAm='XTJp*BAThEdak$jpqXJb"hG!OaP'h4<4YUQj$V75pUc9rukY>;n$HnNm^@g`\Wft:CDl0?r1f)CPm&ALb%5Wdn1=hD.7mN]Jl4+1Cqf1)<r447OF:$B*&oXahrAjV-[R.O`+-$jO`!AUnGDRnS)2gb&Ib.Vuslc7aghG2/jjB3Uo2mR"mUOcj&%8q6@l<ZM(Ue&mjiKXoYK%4!pW]@FCN;tInPi7P9W%W'q*P`4"[CPNFb1%>W8o[Vn=+--%^8(sZ4(F(]<r)2aC/j?l(k[nk^Deh?(%>`fA*&9$'.3`qCf8)n_d5C^=Os1=hB\#Z+Fhs8Y(I_;5K]D6h1op,gNLX4P3hP\c_R-Y"'5S2A.\!3=+[qMEE<uUd:gu*R4R6R5[%9Z@[/\Ardbb,2L=*rSAXr%PUVpYI#O(LCBbE[D9G)(#W<h0;PcZ:<Je`mQP[]lX<E]jLTi?#mQLDY@Dh^Xr"(rHLOAY7pVAAfLNM%r52*]dqBl/G@AV?FMf0F*lrB_4Lp6&eX5=hYTdg/!u1sR]r/3_om=#l]+VSgG-enks6c+bHYaPigt.NFYL`pBs,$NZjhF:IZT2%K%i.2YoRYqt'96U#DOft$!Et=rl2aZ/,%s\1_pf`Xq$.g?h'_A`dS@S,tW2]m%7DU=8U:>CA?TbiRn8I`Mp6lfrDXcf`o/&-?HjY(F%eUFlfjsn\cRf49c#=)R8=K_!3/q5IDI%-/&kMh=gRMG,W=BY/"SKoN*(1t7/r4&5q#RB-ZlL"5Y=fU4f^"iZAoC\OgI@WF0r-CC@%QLRic3CaV"JBZJ$jD8A(WbM5/[;XDV'*0^9>oGPQ]f+MA<SE&&"i?!^W4(V4KTN0,(8`'OI](@_bG0R!.X0'[]@+1#im%IJRBVSk%q_EAadP[k^:H^X)m`$P6f%`GSJ%7jBe,O=LOd1?=Es4nm%%<1)-Ok1h(,tJjON>#;Fl/6#8_oW=6<gb^OA8.`Tmu@\rLZ;l=%2-'%'td]82uDUZ*kL$AQe?epd'#5<0$ikMh+dKP76]o@)C&rTTY_RU0@bi&NUW^=`G^Ys3HjR*4SL]TC:?G36:ohIr271!*n.m6T*pEl%i!O%(nk3MO<3jL$ioE!VLH8Ji0\Dfuedg#iZ']0fT<(*>:4X6-M(\G`08+2@!F#&[:.^15pk"\W(\GrdFLSSCI'X,tG3dDu^,WT/%-:FHSlf?kto:%&2@2(mb*_KCLA>P!=La\`*),`u,eJ8TJccI^f<j"9BVYPK5^m^XS(1plKkeSqKDBGm4F-jE0c1<aIQFHLp`d!.3%mp3nb"Qg!QYHo=_(sk.1R)/H:?fLP@MVB.n\(,A>ji,"51.M(9Ds$)'k2+>Q0JcTG"9tV=b@PW?.2h#rh.)LXXS+7_IL#))MtIp#%<_)A6Pg7]n#]o:<9g)KX*cA^\H\oP*SUGbJ/75+2H.Z:oJO=%NfI(t>7^J;BONqIbEkQJW!1Wh3bC$WBhJAe,7b^]+bP8f#]Uau8%=aMsBG3=">F\eW^E#(R91YRVgNlm,[?(';H,7P.>Fpp/a@ahi+1&1W`L2U/RG27&e3"5asfZT.cml0MepC$o\XFd>=-qo:q!nJh5%))],F?*c%r!0f=F%-6e`W3BemnlAWQb4)>YgFQG5O$CqM\(dMRH82.t^[OZnEihqh5?@(.SKDQDh!"kpIbucOhUY0V]+h4$,u9Gh%^+N.d<#GQgb,\!e/)hqO#*\SGrJnY<S0m<?Q>bC81*aOiH[!s:11.4SoQBGBd%Dco?R#t7iC^t;N9^V`L)?MqU'k7k1MRL_iWk?b%4Og'SgQ9DU+gZ77jYN>l#m5P.?HhsK>UTC>a6tS%h<NfJo^/N#[s_TFlf.$?9V&iOX`ThlR&`UBiJ4O%YsV05.MsirVb6fUL>_+3%_/La/7NoJ5k*egrU:m-+Te?Lo7g/?*XN_F(7Y/R0O9Y2FG`jMeU,jAhPKDMZYKJ-Sm0_^Oop^C"Ae3_a[`e;Lgt\5FPuB;XV*),`%5d2fLTi)Y%nG)6cgP9Z`^G5_Fn4&[AcXOJond=.4W`Z_4bYj6hhc$V')Y9(u1jttDrN>aq\BXDEh5on2*H8VpDYM[m_Hui!Y@IV/%nSXf`k4:Y.+*=,=hFl:BL[#%t;kPZuiV?86i=gpU0ZJ9AgLb0BV-;hB24(j3fdY##%%7I:1CM/aq$A50iqV@B,3l\qb`+@=I!;qH%O+r"l(`N'n0jdkahB=(pTT,3r2jf3GhZ'aS/B?7fo9e3YG^)sudN:\kpPRJ;c+^dFJN(46fsJF$rThM9=h:0MGB;YmQAs]k$dR%D%b1%?)dHPAT8qf@^*>A!L.mK`e+bq+L7%<SueJ*7qFY[UFf-[4UWUN/uC*gW3K<$rmU4$j%8=67"Z$'20`YlhtK12UmAZF:.^[sJ>%jNWF*h0[n!I2UbjO13SW4(3%S[qf>2`H*TU.*S5C"q(i##e_pKk#M8S^d=L6'4DB/o*m%,G`7f8B52A9i8&.]Y3[6[r5ClbVWTV)%X(-IOQ5O+MeBo:eUtjt%mSES!Fmj\PaLBMO:o"+e@PcS365>J<Yn<Kf+<co`$_3eahmPmagMZX/49,:O]_f8Z4cS_f"0hb(P1+J_%fL8iL)\o1Q"L1Y/_1":T)8$AQdRAhD'^mbd(lHTn3SM>KHj/2b&?Y7$(]2=#7RTm#QF9bFY`q[qO0^(riVa*KHu%\pDTe)_IN(nC%cdNV7B.fSbi1-.EE`@A@?"^rsdU2CdoMh)s4'QprhY,lUDm(CtSV).XFZ6f(X)POSpFCU&#B"0IS*;WadGj@"V/Ouj/a2f[CG@')%npkmKl\e%eUNRTVX0(ZDM7%D^P[e(YqtTEP,E)o/r"T[n!%M7d0b]k?1-+TsMFg>%LL4sg]q-OK2L\l;Et3olmA\ARmWB"G\'n7V%dE@RWB&oh![mPBrgtSg=S]!H#I_.SKbBPhu[o7?0M)Q)sekW<^EB:S1$EFaJ2(1SoY1*]W%PB61ABKie30,<(7h?+_?CsPAd9OnO%.GG!aO^j)mG)*,O8!CK65Q?qTJdr<$7_j#BhNo%j/Wj0?g=!$6]"DK4>Kk(($I;@<oJ-[,:te=(+b'Ci@>OsOAcC`)+)U?^D![eo%21T1t/f%;D)dqtmL]s+`YiW=go1<a@]5GrB4uMn#HtpUXaJ<;cQ-B:"Yd+2!i-*Dqia@U<g@Q["Dt6pKJCFJ]=O_+;$3aL4B5mj4%3qD=OX#Q1hB)lQs,XXgV84@3KTtr<(E\o.i,_K$$IupT;U/Mum_a3EUc\VH@;"nHVr-`4=q<?s]&(>>](fYAjcbfs9laF?!!*San%eR"k`!J(p\+eCL8^aWORGp80TPdhm$7gC1q@3`B$BWhZ?:3,8V*l/@pOb+pOa[B/VB/C2t-X!8s_2O>i$]snnq"Gj-p5*KOUp^tT%!bNK>$g>^XM_sD!G-VW_/><s.G7k>AaeTGrlQl-fSb"raM=?K7f&.ct]EA?t\_p?[BcsYr<VA"Z(<L/.F*.30\))XTWB#'1:ptsH%NKQ1"O2$VmgnCn\47Vi)NkZXCM+4oW4^1.`s1(>M.0+=r<^A3M^pnY$%Fr%9!,c,pj^V,6"WML"IY,;`.@D/b2+,iD'pZS-#*MTY%k$j?u2Gj5W;J2/B)SmjMd&uL^9\E:Z1#Won[S''OqbO,V+&,;dUZiJ7gR8A@b)]#(a+`+X_5qFLclLD^YMJ!+`]e\SlF$q7DLc._%P/0bLIWk7MR2F/6W<NI6$+X7j3[\@qR#Xpj6C0U)d8m!R%d"tIcu0.&(,2pj."Xgeg`e&*F&Mo=msGlfmNO18&Da5l"4u(dn[a6h%O+c3X=6C]HmNOZ_$&@)]/MUTaLOri/XsF$e!ZJk\/inqqZL/<FIj&@pnH7bcA@hgpGR,<-J5j,j>j&CJU]OeZj6sT>PERf8'n-Ng%1uHil=4oj;9A^b)!;&P'5rJfD(clF=O`i;.5c2,7GdUo8J0jCfZ61,%<%eFr3Yn($+hgX;8IXmobQi/6*o[l\^t>\Q*bI+jWH#PC%OMn]oKK%*.%]mKu\`2V?62Klj(/sGfgf[+NE/<u=Z1u"`UBatPL?$.+"Y)hDlSfQ4eZ)'F:+k$?$=#XPdeT^6EJd=(Ki]604MFOX%$eF=k9h9;&]*IbMl]"'g+WQ%Hlf!3s]mL+&/EM0\%p]_Fnk&1_n/><NQMD=%fIMr2'X%hp=b'%dDRhWM6+TVnm]lrHK9c-B1q"Q`%))qI%)PCpk#cG-"45P?tSRAhXctn09J]Ce=GuZ1]ULh*f-8)A#;H<&!Qpnk<b-#n3aVODUccEP3@$Y/g!YGJee-l8MH9>*%=B+6*%R#!ZuY2t>^bU%43;J6o*muH=qDcCZdF,0P*;K.BBGDKFG;[8f4<)CDhk((:5!5IE:l)UbR*EWGK^ucOK@,MELS/c!LGG5:]@CSt^%CqgSS&uPZ)@C+M5M*ZRsJ@G_hD%.NOj=Gpcpm])V"l#,)jQg"s;=Rj-%bhUSGiquG_Il-s79%N<A]ep],AENXImEe5kW4AAMnLq0%'+6JC)$k;h-;c$T`JZ*dlHKh:-(^5Gd.O''bD,XU($.VsX?n6#Y\fQCKB,!<Q0iIHE1AqTBj[a_]6mhN7^40O+\f2u=MfmU8O$Ln%QGVS(\;h$U7*]Xp9[p[DSK#B2!]hF>8+7@EjXiL.`Tb&h#n](qq#8LPi'18?5e"EL(e2d`o:@bX&'eN/iKW.mV=Iio.=s5qMsNN:%8.XA/1i$/'pgYiHX7Ibmp>G&?A+?T!jo><Us7mc:kqE))f0B5is7hBLp5f7BDu\QZoH/N#n&+29RfDDds69R[VgnWVJ,%dUrkj6]%0E:k"YCHQJYQ*XTrgS?5++O/p+(,$9O8juFih8T-H%S`Br?hN6RRZ3<S'A7$5`.FG0YUZQ"Ab98nD(mC%T?mZ5pN!=pkRCiK5^V%%j_FE[;_6L@DPlR%$Ai:3WKOU_aAZ^3oPOZd2+)l`=5FPP-5FjB'b^AKbc4;+dRI0Yl3EgN80_c_Zl3EdfbKr:/l$*fjh9\W0mu+d%HRsn72f!"0L=7e5d"V$Sao#j;FqbO,-!X:_?R>/R%eM1<m6fusG41f'NQ8P0ON"(/"O/`"&[a*/Wb"jpM,PXRqpj[a19DH*T%#iU%*q7[37m,Je/M85rp6p-r+K&V"IU7_8hmCPY_Nc+Y)7H=onJJ!$>;J70m")H-+Z=nM7\'b#E+>uS4$aB\Z>_JUHWB)kmB)5CKbmQg%U;]%%\UO%V.g?\J`/SCJd"GDG`+YYk'PO`_f0O:<#J0L5IYcfOj^PFJJ.QNjTL$F(Am^inTs)fr2W21QDOUj"WAlgk^SUWRc2i(]%msL3Z_9k'27Vh,U'm)^)8;NYNR-e30mj`eu(B0V(;HOg^U!mUt.ADqmPr!9ls5N%`SCrP8dcamIgnf6/S$7]rg$PFC2D@T5e]iWh%1E/lo^nt2[Xm81I/lfi<1TFO]Ml8WWF4p0EW&q3-<X-V,e`XT9SIH%XL$a]jraXA*VF>;Z)Al%_f@#Y2Wd$6GRM*Mb[>:.6fZ\-n%73RG0L@+id+.TH+1%eRo]NG'dX;#aF>;t9P/=3qSX<NMIRnqP1>rJ!TglK3g0XD/e[r3[0<I%4g5TGYNPj=?%Sb_$]8qs[HMn.3Z%'?jbqDoGW8dLX$9_)&*U?P!+>4nQQJXXdK`7kcTSH'U":'Wrpf&cO-W<h$tlC`rqV*r.5-Dn"Ka)\o;aI^h\3'-'PMg)[<Cp!tKA%R^%tF9]$js/(=:ogn.SA'ZW"cQ?*?beQJlNbkIA^5DB2uB6ts.hCge6]%^2pJj^Kn`u\UjdRfWnAGEHd)UqY1i"O?AY#:2djB![m%!H*`Hff_AVUQ#*eVhQP.M2uU?ieUb?jP5.(.enjZS"tsUbJ[&G<dJZmi=tF[c1f/iE*\-8>iF4cpn`TriepjoiiAi,A.`SGdIMt[%T[.nn8%.@CltJd.]OOAihbh8ee%K.`Wp.;K`PGfeW<!])6/8=can9s$):4!gluUC/YWVn<I!0N;e8k_/MG3f@)HQ6<i@dBOe!_Ea%'p->)oWSHGojV:f]AN&p'0!R\/)3"D<N+9%A6+-2fOd0ZN>W;ZC5KE`8"9o<[a'fg>iDL".I_grM`F-&OI3M-H+,hg-o[i=;)rr2%X8FFPft>Qr#Ci>Qg1lniQ`QW+!jX;BR2qhVodO7o[KM@VCmXZS@CsTb;abX2ETVsP=@)AlH:Y`9g*H#14<gge'MYl`K,C[kf6+eF%lof@OVa$,NN)tM2r1YLm5r^;Gk+?VR*MT..F<(27_n;GiYd8nu''gps[e%p1/.e)V[u3V$\gMEH`6u/gm9p%1-/Ab:gEV7Z^*/O$%jK?FVd,)X'%ES5?&23l3r@%OWZt)41_!IZ"+$F4;#7M#.o/tY-$g!LnGemG]+[:(NrY,Vp#>@5C\@"fB"o/^VZ3Q%,#%%Wm60Kq'%1r'?oG;[d2R'`,#K:346%A2Q)cgN'%@?565LH*J_58mC*C^E's("A0(36[S!fKjc?E]'+8jV0GDa5+T'C3gGW^f?MGQ^7V,P#p2#%E:Ubu]um2]`'@#ggCcSep(0\bZ<m\#]i[Bk:G&0[XR&1)K#Wkdo#q+)jLCQOMdjloUR9#0->]8+@)@Q(clEUD(ZrRK6Z:Os4\[u!%!,TN78IC\bbB!!c#7AFGj%4cEpnE!7G\&2Lqg'LJ`c,?LI^`sk['ef7W80,hg%%VW4-Pf?GjU$-es.Cee2DC83?s]_kJmsOg0BW\%]4&KG#A?_'==]5Qi)@:(GQ6S(U@C@t$(;\7L/t-9JnPrBW%>3WO0q=PdYPESP$fqD`H<:E*l@dk-e1rqA3#>mp7j%nXQDg?X/5*i%CU<lNXNHlpOmW'8E<l9jaoQ_[&.TDAR;h=\blYa0_L-j;J]C-:%7DtB[6!qs%H0qj376m=m:,ESO(DfA)2gO]S-oj44+to=+![E0%KIDF+@8k>39<7tNK0S^oe$:`r.91(FV\f"YG?tP)Yp7`MC4$:'A@8@Dl*4ur\MaNPimJR8N0p\jrYBVD>mK"<1X:QS2ET(,Pa*P0%RZ8:s0h\b%nf_<j=>_8KafPjb(15hpLeT$>-QiqKKbSA4,<YBtro'nd<>03TH^Y:WdKQ@.iBCA"7DWS%LG#8G5ch=>c$]Dum1ab`%>BmONr&Ue(Qc+El1iZu]Y1JCL&DAuZ6E%p+q!/GK5Y;_t2kK3@<;!g0-ump,;[[(6\b8\&CYnd,FY!:+MG]*U(gEPeE?7JL_8g-t%m+d;3?@bg[rZ-?FI&MT#,+B?J\cC7@rM3p!CCe\uT=PN=.MFm,[hP#hiT]):W8jd/"-:UCX\!SI(m_e'Dd'hU-\Togbn9eC=(!@^%nD+X>6F.;HhR:s6!e3uIYq[uV2dM8PIZ"U@(I$'Hj0\i_>,d2rfW?ZHRttVCeQtRLJ*FfL7.j5U_pF>D6C:+,Z14fXg5'UBD2Hce%DdtAR1s^/T-!J;8H)l55DE#Bgrh?pLndm!QR4:R+)t(+-4>0tg[W).)QRJPhNB];6bf(J#B#F<)fe9u+.elC>(aW^f&c(2"!?5P.%R<W=tO(lHP_U<nFD3hqL5^LK_If.(qk)Y@W81>3dP:#QGluHQ<NKqr:V9?=SaS>#'[7C.]Q>SVs?X/*["2u'@]nS!/XKt$a\?Q;m%_,9E^Yg4*\'TIiQ#]b35C7**K\r2Cl4Ga0:ilD<t:CjC`Z,M6lQlS'F&ejfZ)G*j2Do=cC>DEIresa;EfeWY7Ra,-K[>lXHlmd$3%S[OH7%1T,>'5e:O4F%l@<h3$udrcV,\Q"H3YZ8T9BMf/Y>[&it'n3T>%&cl"/RiR#:#q+5aBDChi!p60/Ugklr>IDQlX@sY]EJ.Q%L9La"c8n_s^M0[AV+BtV2Wu=^1/g<RjK]D$J-:.3A);@7Sa+ELQdgO)nuDk*P+R&d'KTVnC_Qpf_mS1_])r9bbW)Yco'D,/Tgl"%%joKFL(QLc7[?gkG;eobfomi=B2As_W[kFE^S^gUhS>L(P0Q%>a13Z/B0^/urPN<O^QdC8S+'-_s@OH5kLmHUicD\?&87D%&"q[gg%b`M=&?dYP"&C4qm"(BWU)hu6;pcsIBAYGGn+[E06,2Ts_f<sWS.Tml>jN-,(J?'g2i'Q#TZIr'o55lsYT6abBJB\Os`EP=.;Y;3'%J/MZ"am<bdnS+-@:4aZ9&Ltr81PME6`lDYn]-JJSF/J$o;HUT?`$B&SZVMK<RpG3WYX@AJ[Qk\foY-_8\o#a=P"`f/p:)"eCnr"f%D;QO*(cb`J2GeqVf^'.MgBPfu[8hOm!`Y;c=Ar6WW-2`-[A_M-DZPB[/VfY2,:=9o;na+]$+qg7D:AfV'WrM=J#f6^h1^h7]JfM7%bqt2O3]3=@j0*fe)2&0X!NS_mTY62TTe-p%Xu:XWi2eM/k5m.inaN)`"!D?A#nrn)4^^"X!N_V:j0JQ9#Ktg.elUPNlggPn_(:\u%B6f63rgY+)X6lI?<SD7<be1j<%'$gk%D?DoW-I$4>3I>9;-gbtq!>k$Zi`Eb1)f@k<jgeEP^p<EE$8&aoV&EWZ)F5KmWXo_h2sXt%#0Veg0No5O<G(LNDQQU+3EKm,gOj?ZV6*fn4jgFCVO8.AZo*=?5gt+H:o@b0(q"FjANna3"b;UP/n3!X*!/A@=FY#c9NC!'p?c?o%6SF1T`.`Bk,iOjlZ\.,fY0J7cYG*t$$Rcn)!E,O.mnsZ9hZa=UJ-Q1r_a8XI9EHEVgX43OC'KieBicC.<ld_UHm];!"/EqQ-GCf?%U6O.;)P%Ud[GsifcB+CdhT+0YG5\0Wb:`E+$prX7`1^$1;K3R>Q4WU0R8:sV8XNnHh8]^t!5=qZ`.c<0L8p!#a5YUEMC4r4I!n`r%;a>6le6;K-Di8O\>7OA;6PTTU$Q924e\hsi[Jr?H\K1u_&I?^''g8\k-VWLSoOQRdm]3E3=WbL*?MoXd[TPp]R8ZH`/gCHNRb(#V%NNIHk7TD*NOL5`5=3lhO@bYif(-50.lLmR`#:eBB^g`)W&8:ds>u6X1o"i)uXR9E5qU;M,:XcVT9'A&b\a5>@K'rCF]BmZ@P%5+:%0O_)iWs#"Kf7g24BOIAhVm%tiLd)1+Bms3cH,ri&<h\-;(KrJ4='Lc8[BA@QB37V%d-7"`e,[%/D8S1QoSeJgj&KFg>CfQ:E[#N]%%%fmg]nbo<eLn)S?1!0:`L<I?rWsR\D/Xf9THS&o<4+7F^'F:AfH`N/*AL(p'7[fjJJjf+SM(S/)*74@ke@`XK.)5SBhB2%mtq<-%hNgGNXep"?X?4:]S:e3*;JDS'"VJUIi_FU,BDg<L8MQ-7h=SX20Ye$GpoMa.21g_:QAge]OV+!Rh.XPK3H3l,@&`5m:M17,(<a)n%[uF%7en#1\A/!sJ@[jD$Fa,#f=pGti%7:+"Dj%k,MXZmB)3B#;%Id-!CYRDDdo(jr@UhB*EuE=ufB1Lca:$hc!HO8I[%"u/OTD`o%iA#'ae&2PITCq3np`i]H<:14LBdPYB#fUZC!L;4H3>ZL?db7ZXq[1M7T<VSu3&X*k[dkeBd(<_hHefTBZ2pI*!CG4jfNgXl/2`JS%Hc'bG2*_uN;G)[j4%Yn#]+\hVYEO\&("_D3c%XOG\*S`#(XI+XKM!!jkK8X0O;6b$]s85K%LU]7WZ?SpFOAo^c]I7s:9gUm-#Gf*%VKVo1VC<]f@M;c<),n:4SH\>(EqqV],5WE?7$U,`1Wk5%Yd>+pj,IV$Rl!PH:iFka.?eU)&gY^H'5CN2J3MsL>8F?jT@4q+`8gI:%b*nMff<fN\*bS$IW`Bhe13g('la;S<O\]pt^HpL''k:H;i8$lB?5:VNU`ShiKB9Xr.Fat`Nd):@"&ko!K@cb2>6E=Q]ESh,Qop=R%'c88I?6K5RmqRB#+E$u^MkU\MP0sp=7ILiQaLc9#j"1`-`TQ))P[C5_eIq(OZfAs3"rZ8S;c?D+R&Yfe(O29"b&h*a;0bA(_OUqi%-@^?$]'Q;Iq?8]P@rJ14A(\7n!>t&R9*IbK`$76O2aHM65=g[_f[j8-Y2@nD&k^g&ih7HXqml^be?(d>%l^qfTmJJN<,ooP=A\I;%DlJ0pdY$+,IF)^f7D*<p^<*Rfq&(u#\C2)](,m,p'`Dc2eD5.k!D+.CiB5f`nl5Q(U"^(RH]jc+.5OEX/QYc"3t"AaAGMpiRtt*2%J-*\*%4M3YUB+$7joGj_BT!cfkm3ts),<WO';U`CmsUjcd6poS)n!T^bZ%k@dAMb3;f!W$`1BciTPW=el'N+_dq_L&8(o?@N8Gq=%:Fdtr&]g/\`Rf-bgUE,WOY5t_:"]>qIo"Qthk=K[YTS-@R\42]S\$>tIYdR,J=9\nBZ30W>i_Al7-sN$r?4]ss&<$nSk$e<Yd=fg%q7MWmWa1\<j7H9&[M_l?$4dDq"Olo>&STnIU6ouG1!ZG$/aPRY4j=93dhIVQDmFa+pda$P[^]PlA3D%)n1J+adbgt8@Lci^\tH-1%:WP[(pjO5T&Ok,LbbNViDHg?(mHu$?r7jXscP>^\<u*2DoQ"i>7.^HCb&Y2l_&dh2!0q6GO/;5CBn=UrN#:mVC#HMpEg<<;eV3(-%P=lNTd_YdNV)O=_ZgR$>4b8>!SG-#W:o+q[X`1A7JJJ\KV?S2``nbMDg@F:?XD:%F>R_U?YNN74bIZ'<=qqIQ_+;`mS@S$VkkSJa%[7q<*i*c<R#@92p2r/aRN8gkU#rtYR?\du)YE0>M]^c&_IIsu21dd-!FBIr7>2I6(BXDQPJ_F-!_9,`8*gE7d"CYRkSig&7##[S!%$^"*O@j"$=AV7!/;00@CV\$R``Tq[)"C.ZP=J;`%IA-oj?F8q4#A^.po#<\+`!75(_Y)'eg4sY9nATbU'-;H.4gC'NGgb;g'-1S%%a&[cp7+Wb>1;.?WDR^N;Gi%dk,mbRl\Qrk.hHGmJU8fI]XI!l_8rK1n-;e87%OHeK%cSbEPDjYpN&dI1J#KihA*7i<86Q..K-%VN%D.GKid\]#a`3O9ubtqD_VneZ0=5MUtS;VtdG'#FGo<D,I5,Liq$I"_#KN<`%Jtsd&4'LAY^k?=.8MHAJ[4;]NK?2ni,IeJ/J9/D"%QtSTZO.FN(2sY<PS:jN+_)ZEaK5>nE;gDeP@p+[[[<I/&dEu"8.:6QPJW3TiXtqhMfk+VH535gi$CZ>`DB5L'E5bqoAoOL2]-4'&%#\92,iWu2j^oA]'\Hqf@[TKd$FYQLKaNeHm1.JlJ%O'K+;2)4O&uMa1XC(\_.Up&nHG*J^UEcJ6QFJ\aXPq>7n"q,K0Fi(Fk(1)V%%9V[;f@+P!K]NJXFTO?$dSl0nXV<&5:I<nG-GpaJ/6q'-\hf3Ri#k:p\eOqt*DePJ09D1)@M^BQlWX4>i>h%Q8UPgn515Dg#=+p\%*g<n58L]ool.OR;3GXiF=<TdD<8Na0qg2']JSmFu(g1p*AK,63M*j1OE+;tm807-`%a,X2J3EZO4Es)W,N<Wbi?;X'XAd.0<_$2?%$3:*kK"^!TeaYs,"ble%eW@;.<gK^F5#f^io!Ergaul,_5M,Z+l`r:bN[BBe"W*+Xs-*XL;.N%&VX.#<<8Etp";*NM.[hjq@6rPW%[^J7GI^+Hp3gC(XgLZ%hOq;bhE.i.WaIXqPI8Qg<j2k1g4L%dhJ=a@f^&fXE>%a>UH\>nH^-.^fZ)E\b<Tn+#R<ba;I*h^R*\A:<%Ng<Vm2Z4I7`0N=0PLb)YH^Df_Z5)]Zhu<HeO4`kf8_V=/#[/k%CtbEVI,lQ6Mso?C*1$crJ!1UiMgd4@1#%("Vd7>Q0`?%NGX*(l%ZERc6+J!iF?06oe:8i8V5+q]uZHP^6`eUi?gS-r`/)&3@G+,VS7KmFl"YN<L;)(Su6C_'!=K@Ts:!>l.$'3"MRhQd3cT=e4a_A(G%WEUT6#(FgU.M^EaVX'&7%EER%2%0%"F.-jo!OE"*L9V?KSoT6)f=3V/Bm28/WU;%;'sB;A5D9>RqP>4!Z8/F-T^H7APcAP50n5XK%\l5Cp;Zhf6qDj-d`9^-aajpHUL96#iQosH4$8oV$^-up0coQ<^:i1F(XtV$Fnd&&:=RT1(i/j0fq,C0k(2tm69&f)R&U@TiGX"l=%GpRspqdE&EI;HECOZVm\T,OAhd^-5'T/oRGXPG3>RltTgG&?!W6A$FN6GEcaQ&TG?HUofuGWjTgnZjj=4b=0U23\rfd+eMqf49cX%<:rM?8S`aQn\iqnR7KWkZYd]'<t^G)OqHl$ClB\W6LBEKmY'AAe+4=7Buog]bDA6.UW#<cV'*L:]gMsE0I]*ZP@CL+CZ<]fE[&O*%NU0&X7P-3AnX.I9TBjj_ebH[$@-'D#0u\iD$paib$/rAfFZ=Pj]aA7--)nG]&C)ugcF^fd9iIRIkpVuR6X-EV[85M?ckD_q^cnh@%H\6959R&(OHr2f2F!lG*>JOMlT+iA%#tbL[(8+%L`]F:]Rkfi6pIk9SB2NZ!)d5JP5&4ATTW^&Q2/hLep5&O1P@dIHA`b&sbqMnT%DJOc'AWQ#+H/k*SEN(.\,.?E:Q?_\!W!0]tY-,XVh-t7`;Jd\V!Tsj4Z4LUnX8]/DESc&BYd,HISC@ScK8.`';:[bp\._=4>qMu4%b@o>*WCNmZ.B!\^07<$+PV2<b%Fg$ZGdcH*JbO[&Ps8uFY,7`Jm>3Ug8kc5P1d!>c6Hc)$5uC_\V8C18>kXd?,h'$:&2kffbms1V%IgA?l8QPB5hm\f^oIV)2[YM<X\_]l,:M'U1Pn<VQ`=%IDO@1e-6`0Q]beUik7Y/)-fe&p>#V5XA-do+)8S@2(/#UH:*p<g2Vnu+8%8+RY)liKUt<`CDgltCgklnP+NR$rcV4UQD-ZShaSGVlDKHkDYD2UZ;d7Y465$A56,<QZ/!2:\1J=ZFG*d#ghm>QN.rkL<2e$<1Q/%g%$b#`hP$OCh`&%j;:<O=8P"h'4"_*Qqn+>Z3k>Ta[!2>j(eaaQbb)k6c@KkT1HHL5-d:O=VI)S0dW+rC/cK4c(,.*?RDB+IG\4K%#2L7NDT:'<0_G5mH6=Ng!.1R'Pf1II@9kU0.-.q&mgW\Z0#\\GY%*!$Pl"!.Q!WH7\\6cp$\n6tXr;;i*+GNt=:jU@bS3Y=m8T$&%PMTd*>p[u=Wt"Ve9[?+!Yqc5W'hA`K]ZeT!pU3YY(cm:=WQHue"["U,\Ye&u#XA2[:1^nsIG)%Q,HTLcPRf->q+DaP1/ub3&c3u+%j1m7[\F5W\?.AsP98u7)\.bB,(tFSC>Q/KO]4+2HD:UT/VQO0_Qd2UAX"1Hph?7FFW`lcIPBnX$]UH^fbKRMnfE<e!)-I;h-o]1!%s0]:BOT$bua_Uqu;\Q/fp!U++'>FKEFbos?RetJZrI^]qXZ>*Dr>d,n2Sr'[9/_[7<;3bK;7p*T;3b^%7_CM94qbV@/:HBarOKDe%Lh$asqU34!E1H89[Vp+)m4-[AP^V[sZnU0*g!i,FF<eGYc]*r:I-uNL6lLB1'fFpX>.g#"Yh^rqCtsB9#'*a)O;uul.;*A&q*"5E%#A9Wi'TYSi&V<Ium,FsK4HRaC@o.rD\/9=,-!5B*er2\>0kK'Z]+@:&2fP%DM,'L32:,ib'M#MPj.Jo<0cXVLNH=NI\O&0?PBYlq%>Pht=G00'+B7sJH.X@;?`[[8a-%]^tM;fZ(Yk]r3luIR2ItkigZ3Y*#a`K^/1dfgR#N_QF(-3/:cf$D.))inf,BO1.`Q.4_WrtVE%qPP;8$*3Zslubc">B`IRc=I9O3C=LTjZ*@SpdNY^.Akr-2gnPSJ`@bM#ucgsa]dFYWDfCV@`9!hoPfR=*%$MbE[K/XibLpub]VRs%j0Po=n/9@7\I:k#"662L4\GCD(Gu9B[N]Q<I.+f8"^Hm2*a<5#:U9mdpmqMr'pUaqS0CILZo(#i.9)n8dh7G:;Vm9C0pZ+gFreG6%Coh2SGclMC/KjBSfZ>+3["[ohmLh:(m_o7403K/TM%7fa%lol=J`PSrNK\g3$;Ai;gGFe(HO<ijIqklo4Ep)NIU&dd_AZV3hEF@H%oGG/[o>AQW(C:2m^@/TV'=i)=rh+FN]C:9@hXU'hQ$Sq)1S#1G3\O`,Qi:amWbtf5LZ$Wt<GDI#Gpkau5^nTqH'8]/:(C[IQeo.I%_$4*0,%hrn].87IOh4RgeW]RShR35Nc@pX*'DAen(fMod&^0O,02$2s\IZt"J#mG&fQ/_5m[9PSEUs(5TUB:ir1#hNW@>;kY)%Rp%OO)(i1$_gY[ttX>[m9&R[jO&GGF&f0mcbVnC'n$i;(Mr5d77VEB'#%I-WEnRr6iZ!R&k]b=Qm6a(WCD(+*^J.;G;J2a]nc9^6-kF%ZfHj%PZj0&fM[?lb%%&HY&`[^H1>%$:Rk!oT&p[:n"E:YNKaUnShqVX.UU'<qj>=-N<ZD';<>s&OZR1bN(=q6dfVbONuc,&PQg;_%F]7+*^:SS>ipoB;l&gh&DcPH''M#H9U:+:(fVACnd:%rPa,1SL'\V6,M%Pl<A"Bo1>19n@N3ba2`=R1u'Ako`j3Y6'D.dn]g`iU7%fdn1\isb8gQfhYI&MUW8,+:*\n.[4G]<t+QbsRgI2"j@s"pB^$?:4fTh=]]e3i9"?8r,9\RU2hR#m!C#R5^;GN,254=c/&*g/kC^%A#oHlEFFocd_om?WuQ'\W<$<)7lX<2a!+3&m!Q6#4^]SH%7)/!(AX8cdI91%-OmHUR,b8]I_&3<0-)]-=megqac.A'2stp6M^6Vt%ar3l_U%NLf-1$FGrR-IboAJ#RVq!JB..7Y+*$+B[B3M=BetQ>GSC^4sS5`SMQEkD!16c"N+3/Sblj&lfi3dS9>?2;"2+kQ&i$e5,%KN61i@kF^YE^rU`=JlSpV.>E`%]+D+)XKKWO`g'(6kGBc1UIm[h\fkr@o^JTB55nu#+S^QH8)`)gl2f;ZdE0jb0[T@j30kM`eqP"%-",/!p_8Uk$Q\hhoaY!j;pR=o$i)QcBA_-"5n(7V>MOTU$Z^3Cm@g*pNKSic'Cp#\;9\@ji+8+>+'MS\j+d;uU:QU]%c]N[Au8*:%2;%*C<2l"dC+GR>Q2[FcYY,4S:=G:Lab6K9FIF+J39fL^S<4:hIA>)28)M.HZ7OE,+i.Kd_b#$RH2mM@Mr3nNj4j"UVj!FOLR-I3%1*]P/`c&;blRWF;_W0!1XrkjKr4Ht/A;M]f!m-,X[am+uF@+q$c>sGZA+;k;etH6HW\;(CbKZ_I3h5Pcd)0<UMt1qE\/,k$L6@p:%KT_ZkG3^a&D`q^6elC*cE"NG`n?3P=F7in)rAup+5i0K2";UR@<G@#1^,o;Pp<9Tn8mI-"F1)?Za)]#u++OZN?5BNRh\:fAg)Qn-%QY&*\'M=.4i>>_Bo7V:>5blrVNp(9k)FBlq%="0bVHc\!2D5?338.9'\e%*G';3P;c_.F%0.5.L>GPg<jm]j73kV?YA7g(fnVcD\%PeKT0bRCsZ`Zu)KMBO7X2a@*3V$^_u'JNX/<&7Yp+H00BNrEn1e8C2]G6Y8;SM>8:W:\35f:g&H:Ctn1ldQhn+DQiTi$bXFZl_$,%WEP2n^<fbs=6\u96,6JqB#:$/9/+g-%$p*Ce7S#$1"Q^A_".^iKIH6Ed1Kjc;MRfD#+C]^m7hY@6ucai(4SP%!_LJCn0tG-Lc[`B%521opf0&c<W/NKW>a&)D<0aOAcF\3.`U$f")H^+7/(2uG&7f\Ad?I2#JnOuBU=<K+F#kR5KK;qP-nq#n<4nje(Kpj2j>k3+5-MX\%?2-5?=Sm/]nkD3@#f;d]PHYKq+Is_?3KqYndtUS>A;7HSQ#Q)@>6WS!#+AGB/(*$JJDG%SgR/0%+lVC6G4!f$r)`O+)JB1gP4Rit%ZKF3-e1#(S,(p`)ZHBZC/"f?R]d*AC%q$2hr8^RR;0CU71DVAhghp!dpA4Z,VGEJ$5.MD&>i`_B5:2%WM`7?0%4A4f#Qm8bcTisC%SApaJ?D;.HGtcbmg\fX6ipYu]4CVOf)56FBC,rBGX9EVLIrle::m\1jUBg3ekiMP/n6",4R>IAI"fteTCgH4#rq<49c2Jl(MU>0Z%fU`6lR"Yl@"MY;0r8O&4ADSq%6_5J:N_Ubdrt0u:_-c!JSARAsJ@$2F9,$LXQEMimNCE'A"X"lc&tlW05!$Mt.%q5dBU$nU:Tqc6%6B!<Wh62Y0H`!#^8!lUeokhY1pDk*$7'VRoprZ\?FdY&6Z_)n[$cS/A+mPJ6:q.[;K8GH\]O-E"<SIOc]cphLMdf_f.jpIr<J?#P%/=WU.o9@8)4JF%IK4Du2Z:H(=_`=HolIl>W:35*'T/a>"[ZA)@o]8/^M#=%R+0]7n3Ee[L;"0Z;@(*>XGTK4p,G)'1e\VZ8^'./Q%N2S!V:OJ4('sii*Ade5BNaQTD1Z7qbBTDs@!*C,1<3rr"4e>\20H,B-A2!66b=ql/-)aMQ,/9?RC%;'gc*=2s5s.6!)A)<:m0She%JEq8"5OZt.b5)ro6,!9m8%a(006m_EY[4sLg6,M0P@@l\s/f5XhA%qY`,9pNhR@A!r%J%!SqmK_CKQ)`M)`@N=!HmM7ZONZ3Um0b%8+,*@'WO4eWQTV:$$bh-o,ETl2+)"QnfF:Kl:/*V/6"jmEC\.=5qq@Q.'iP0Y>,7fa66.^Hhhs[X%*>$"bZZ<`'_=X$CR9cpO)h'%_L$M:-DR#SkfYC"N%4iK?k"@iq7,nEB-7TN2i#-rKIiXgDH#u"_Q8*s]lF`lY_Ni>X>Oa$DSHq+AVMl([Kcjs[OgPn=/lu<I8O8.%cZ5'Np5'NO9R0a*@T(e!;)8:bahH#N3)G@Dh(V:\C6n$(r/+YC;(:rF\!f08MH*@FP@[HD9>0u`GIf\0Z\`!B6<!$'+ejiEiR.fS%7-0W9e`/Ys'[u%):DcQ8P/7_.[Wnb,^YuZ6\2GgSe&fX\f3V0!m"_E]RJg"r!oN(i0k!=ZAQ9CM]#s9Fd_Vf0GsSjtDf-%]N#5!?%ZLS^?1FB1Q.,5-^p@hG/-9"LJJJ4/42.&H7&NtJWZ`4n,3jcK>EMtXWl*/^rD%9QpYpd6P>]G?HWG?9;3.`"6&##LF$(qoL]#JYI%Q6DrNXLD&/#tCT"+Xeb&A;<7$`Dfr'`?D1UG&ebli8%fDe`FXn,ni2Ke\$!(rqeI#;U!9.K;q$K70e]HhK@X-*E/"l^d7'\k"@4D%^N0W8csAs]rcGjKQNGG$`W&a:3FMD0q"T.7F.tk>#i2\_iqT8CV#j0+1Fa^j!Vg<E-+%-p9<Mha+88!tIalhH20TnP"u]G7X'U&R%dT1K<KN(2?GSALjf64P%Sj4BaePL"@iP5a^IEmZ,oEZkqVh!8i)]Hs,9U13U\&eG\Jdq:^@\n-^,R_XHs1E8<n#RGSBB<qXT0kuI%7N:IU8Yop*P`tZZpQ^o=2N34n@OrfePa#GOf+,k8fjU$'+/[\G4G?l)ck;Q-E9`%I*#6S-5\<7Q/O:g=mFi)Bfq&,54AYq5b4>a"%05&`h5"4Z3F2G^T8SJt"cR87%]L%+0SD(K>SsoEZG41:]aZ7Tc6k;tP("\IC9g!T"/YnYR5I0m9NL<='fgj1!HM3H,2c_ur864:K%3%TU^oFPVBeNJSOK/G$ub!9J*']^.$b.i(_#6`s6^<O2bppb8j>?qI>mk)k8XCqV+HmT%(VT@>I6N-FZ?b\bK<N=,#eR*sNd$WK.%]BAtV=_P2HCqtRpg49Hu:\>OGeiZUR)Z]NJdf`dL<m/7K7r%\SPIK:l@T*>%"GH)[$I+ft[Gbo_alsuGG[A3S?S>I7/#Bo'dQo$h%_?rKYnFf07(ht[Pr4d]][`#m$Km\4_oN;#h\We^Q8#$n40eRRfC[flb!Uml,DJ'9*4mbrka#!L7nC8ObXTIY:Khd]7L$6?<FfdS&%81teAQ,J9`aF\&/%r@CR^^+33%S2B`k?n[s>p'h-XX3;.64,qX`9I*-Fu),`gF2G=,jCp%fN52,j7\=h0lmikm@1-.In-9<ce:hU%SE=_IkbQ1GQmCm4[:J##Tg-%0*99U`O\"oIM+:>%.X!W7\H.';<j_/QRUg)RVhl=jk3sQn-VdAc_>Iq*Fh(G<k%^epeNf`mj.9n3%q)4WY;.!M7m%(R(84Cb:T^N#OTu!6\26hKE>t/R=PEC@E`NC(4"oeGj7Q2j_80sIGEquDO7`9k8*>eGrQ:^72L=#Sp\19]^jhbQJ%(VXG<aLIlak9;#/E1J*s2dr<=UI7qpKme(N4gp:R4:NHt<3[]rlc$u69V!%H\OT0L1H7D>GP4?!c!IfAd9COs,^aAr#*Z>M^gK4N%OudRYFF]"o.<-/X\T7mCXA[7+I&R4iq2;"R#Tk_,!o`0;a<Up`jG[\e%LjsSoXj\;AE#He:eHA/'LDD#/eJ?u\#Y^Ng:H=G]rpTU%#[;/:?(m[XL\&cESjVFCHA*R^YdLMHpIApP#:nh40f6/'fn0=.ANQ/I3arR/-f'2c^q?(\]EgA"-9R$=Cerr3#/2br]Rb4+@`(H/%$23mGK.Qi6L'(_Z$QD'5%s)"%N_@%p&c(.,3'"*tL\#;kYZNZ]$P,"FSplP`23?(aG7+Ik,>YGebp$q)7[Xh]RHr]4S/8fpNqkF2%P;(WbRp[H2LVY=PWU.qAfH7PkW\:edmq#(U2-;?J[`qc3d*;8X@VtiZnX:Y'[AC@f>%R.O:^obZTks&0L]KB\3;n3e5HW[>ICAr&%)'n;t"g`9cK?AOQfU-Yk]==Tts/qL1n*G>nStA\m0Ph8HqtNL'/XqR*O#4?M<sM%al.^cP4VKHtZL&\!]A5UL<Q6BD\t.Un2iJ&/%B(up@OCH^<X(]9c'^!SVpIZ:TAU=[Z;capbLZ#ehU')-EA8bLAJZXbq2ahQHi8`.f@CA$R]hnW"/BM:6[spWL?1tbq#/!LS_Dc<I%OrYp;s6%\L-M>YaIs=2-I-TOaM=9c$g!L!eZF>S"f:@oT`*Rnf6ff@5(OMSLkC"T4g;3`O%S:d0@)8AGIU2C=S^?hD>i3A5P?68c%bH$J4q=F0"TCBbR2=c__(cpI%7tN5ra.jAU[dLd&]SLb:YDrJ%eZ&'HR2t?Qko'2t:7'pbeFK[MQfU&)c8JS3SCG1A3^0#SCB;c;%`IJa-!P$gBGe7V@A<0b%$REN\3=[oSE@qMEXW/R7>4oiU1+K?$LVG4EIf+F+TDE:fiH77%0@q*:1FU`=r(Jcm%e6-6Ck1-@\T)O,%q6'\_e),D>EE]b'B$k'.g)&pjVh;UmYd8C&_>l33$YT2O_QqU9fdo:V+5?p9)Yj7#gr-X9mG%+[ao8u6m$lQFI@b#?D<ij4a3=?9%PY[00;,72"j$F!qGofM3#B'"mNutRbe$o1Y-fI_=^2_LUHtlG]AVO"MFG.utG-/j:/)-m*1#6Ke19Bd&>NE$Gp#,^:B5\`hlAEfC%YEu^m"]u"_D2o%`iuM6OHi<LX0F>[5[$18/Uk68Qi4DG`$`P3CoZ5S%0.3OO^*dQ"\3?Oe&pd\F/e)22n/N@0D**)TY<D[#[BmN%%3DMg67I_;fglKd>fO;9S09*UVZ]T1]F*dSH`riciQI@'=8,`84,N"UB\'P\N,^fT4F-$hoVOrA&>OT9fK;1EK;hYb&'>qO4So*"j%LJ\q>Hu\$T.LBD5Ehdi\Xi72eZ%11P-XRjIFJR#opCLN9D5YRXd=qQ25E>)DoY!EmMB8#OR9AtFU9#RHZ^dSBhMtK1T&X:8qf(4,%Z^e\8&=+pRVe:PWqlq";d@cQM;a!ffJ`5Y2p\U=5/!GZ+N':G65[L+E6XSYllbY]\I%5sFq@5+uQLlmkJ8@(UE2UkOMaeR:O>#(p%ROUd7pgnh=gUL.T=++Y)/W8#U_@t$j9!!PQGefBlAb$QdFFuMo12Q<o@2U4@oSgN=:%Th-QpA8faO,Le;)=e^K&I3j.?Bi$ER=#6%g/U+*Ngnt'h*8I#Ii&^RWgBD]iWL%Oiq<hphVTe4ikeIB4-(nH@WXDk%FeNf5+P0-;Lc=G^n9EGIW7t%9H8(m_Ke>$!qYJe4tWd^%K`9rOgK!'jb6G2!M%C=*Gh[d6\[m2mW7.-)<i)FCnp19.pK_OAUBYPT,ePL)#+[1[kCkXajX)2j8JV183nm$!h@pdRj'+jB]=9rF%Kn%k3_/FnUk[1LCU`cLVX>GBKC.$$RLX71\r9qgFa%NUV5^iM8nlWOa"tpGg25#i^!>L/&Arr;P)&cmPaq!Eucr)WR69*G4"2e##%%dqKe'dos":kG000hrPE=aRkZYA<We`g2rTX]+Dido,LQX+\grO2'(gg:qmhBHC$qa!pk,m7B?ne6>DL0S7#_m=+*VH1<L=SOp=J%(Q[e#fR7pLdF[lZ)$ghQp<7UpHDGJ?mXkrg2)Y\>?3[h!o9_30qS"Zp1Po^,Kr'4A_sj9]!r]?*I+o18*jst0`A!/W]r^oN[.<"g%bB,$+LrSJGIlL'Y6W5sX#)00HSTNn;bnLNUkTQNg=a%(%5!t\l%H]6_:qVS11W7ssQ_'iNo8/q#4j8Q+n-JC:r20]b5O8sTX=kZ6%U`9hgon`WM+#)2-8))RFV^(?ogN-^N6j)T%G"(Xp8d@SO[8JmlqA_hWh/f:M%VlE/A^!BW3C7gncMQR*TMUg^IHmdOQJ!7/^Jhl[%$:[54YD-Qt0CN*q`23;ONUf2RD>;G&nNAGl:+Rb/eta^deVIeGB,uc)X1q1!<inDt7=UXgV2(B>Po1$M(`ii!g)lj(!+7i`UR+(a%,mMTl@?orGre"pd4pt\\Yr&Ul.5*:facq](m`<AdZL/iW/>iC5e#p$GMDY%0X3IEt?C%i#2qU7>5dsqabQ`Hq4G4035%n>RCE0`l%Z%5dMi-=VlDP=b1*I0Jf&A-W2Af!"iDP4$+2Usu>7/1N@MLm!.cku%'Z.Ft#ppe!fKZG9&X4^iKL*g<9@/^-\7QpJHg2I(@r=C;,%a?s(*lC'gb-<"fnM\e.1Ajqib#qaEZ%69%sm5Rh[,A3E?R-db]&a`e)Oq*k>@%CqOcLZWRa;<@T.Q152r,[:c1kah(&,!F'BD0JL%b(X9"i;)N*o@S[b#hI2YIUs.E;1.=s-o`gWGg5im\'`U3THuD9.PQA?2$dK\q)e)-Z(+MQ(e4`LNJaWS!-W`+'phEJJ$FP2X6ZJT%18iG0$JUIs1o*'SeX0/]!U$F?Kkg:qppS#S4K70QVS)0].E-H+Ft8&0@Oq5^S#0r84a4:=_5Rt3EB%<P?pHf1^%GlqI7`%DNRa=^%HWW:"'jr[A[(KI9p<mnSBRWHnlT>Dq\-fk^K%@uqSA*t<X,]15<WjIZWETtuWj9\S*0Wi?Han.VI",;19]60=`"X'*mOdZS+RDYA%EXseX1Yir5.J2@7%@DLI&)?oY03slXqG-`4;J6\X#J";mE=Nt/f>XBip/]4[1,n]6m=kN[&Mp!@i8b::MC?./R"#'WVs-kH+=n#/%TG@rj62!2QAib"9<m^SD=@iGSoVfLf+Z?+"dXah_<AQ[/f:>^C%YOM?+6R*Z$'qE>Apq:mi,/MDmI,P"of-Cl[b==(j&le4!uI!c%fn7:m$?rH/i8RR:mQ)*PE2;RTa`JG5H:tBNPlr6PUEY0,hqK+Di:-uKR1&22Y,IK8@Be\2lD1T[`S[j&<Yd+m+S>'`_D.aLN:Xal%*WP4R0FY#CSt@T7.g0^(<Vk`:JU[k?N6SQ"9DFR6,M"E`c$Rm"-L<LuGo%=?EEaE<1DG67\;82"LYhQb6^;i+31ehU>$sB!1_X,N%,qE5)hmPl:jg%#FSb<:pqQJrWe,+FOn;fa+`=03!X%1,IE;I%94+,Da&:&Q]KI1qeKLu+5'`2iJA&.3c^5L]@er.s)He#Sjo0[D,%EM&0)NIRN40#NKG%n_T\BW/'^UNUWp11H?Nmm:2.cb_^Qg,1n7*VX0SFY`gDY+!uYdrsM,,Mc2I-N/B@$E0://,FF`rqTR8gtAUg%N&qFof$e:/Nh)967k,l<':-s5p+Kt!gn7%=H-cAAJ#]#76nh>_N;=M>)U:su1sG0r1u6W!(K@+ks3bTh:6Z6);t2/Pfr:m)FrM7?%CT3r(hC@jF]HdrY[-pSr?bST:=U`0n3PWI/!o(nqEYdb#Sr\De)O]:Vn[p@mP,a3hQiWs%Bo%+?HR3O^M:ZK$,Icr`"u=Un3!W"%%IdI020EA`2*3MMIn?#Spj((4#ekpAJ^u+dV'K]L1Mh_KKBAO5PL4hF.^?6L<7I;kZ>T6W/-:G?`:be8KJ"*:.c9gYIQoG`"T=bMd%0qR<F)JsDR-IUA2a-S)H.[[*&r%N:j]LM_>_PcfQJ+<ouQ_%q+Sq^nY@Q?aL>6s',CuFT;PNLFW;JX67je3seqGT<DMrOd.>iRS'%WZu#$]j0ueIU8g5/,A;+M)SnNnVu3%MiU>Rb9Hk:#<iU5=8ekpgKd&&`LUeFqr_#[o[1:a&#`>_&D[OdC7:J\:o-AcRHi_,B]H1n%j#VObrVTM7"UgioVf*+B::F<_3eZtHqFI'1e+B1-S<6$_qt7G$hj[0t<fualf8D6q9]D7rh;292dU7$$Q2amI:O7J>>P86qdXsc>%M+S^XSbp!UF-IS7GaaK&C!LTDgU;p&SL<X6QVWCqV$Gnfla@ksrM\*Q]!%\d-Sm+`/c"L$^Z;!qWfoTOchWc$9g3D"-2frC#j4\;%0**^%Y5dC*,%#.!SOf/6'RsH-?6];mC#k8@NVkf^D_%TTbiGsoA'HX?RT]H$3+YoO]f_UP^T@ooD&;QH#N*$rB9V[=3n:RM(c2`M%oA$m_0U#f:a\mI(LpYX[SA"RQc_6nOr&?a.hgJIP.*kJ/cOm<q,MuU3?nc9j8Un,m<RZOfV4=FJPN%N\e$JhtaLBl)kpUl**+L&t%^@_pq7eMM%dua?F"fB2Z%d)R28F/")i,HG.:@F4dmsj5WR#spQKk?XFr'dkX#!T^*%*X#U^)XphndnhJH'oW4BXF-Xrq+rDe8Q%P%G'arHAA$rUWT2uElcV(uf!BRU;es$qCR1m/@9<&HH+u@c>%=T<?^oXRpnj!3>I\,KRuIrW;L0U)0LtIDcoQuUj^+f-G>aT.DN_XI%>:7O\$=_B+Dc9Sn/hOSXc&nRqNT,nGQ.+crE5,V-nb1F)=<8DurV#=K>/o9J\)KGK&4^<TH$=L(UUB9/WT?"5`S$fo#3J1>dBd^a%5R)a/Y0t.M_JfDFk)MQbo._a\n9]=)?.RpQf/F2:G44&Sc0\?,ARGHj?[ni.$4Ckq+B=Mdk;fi>f]N1Gs8(&M=sQ-*jV7WefI;6@%dMZlY,;O94.N3M!c_h5L_]\J`1Iajhq2"E=.9$CR4I[riK4DuEmtN36+4>sJn+<D'"aFSRmNkngP9UQk:I`ckba=T+[3!+nn88Zh%Vj$2j%g]25&I_LS4<H=+Xio,-<ZX&Wj"0<&:!^5u'sIpiRdLdW""#RW>tkT,Gr4"+p1j5"+.XeF=\PB2;JC'&BsedX:45=Pi7"So%IN@bN6W1dbI6#J5BtrgK=Ad1\)ZSLLD;QONAli;rA^O[Y+haJ!QHNU#/Il,p!iX3>Z.mb#NHJ'QO_gV-mOsH=_VMn8#7lO'ep+ae%+2U%uL^"9@<ES8K4u[HVZ+p*u>KBhFORm1SoIQY8D_#[Y9_,sh[@giUhDb"b(35eZqT1DD]RAAo%_d>(=P%WGaS..^X/ad[I4T@K%QbhOR'Yb^&#YXQ;]2UlbXLot\r:0V@VuHAPDGK*C0I<(bI_2YKg+6sMq^KlHP!1p^l`OTEUU@>0S!WfqKs:XPnmm9A(N!Msk6$-L%p\Xf')0K52GP?AI$;TE((38ML'qEQJMWBtG`:Q8OU"%8`4t)Q[g9GS@So/]#;s0B./L)J%q=a,m/=X(1QTAKOs61$?oKN^^=:SQ=%mpPgoH3>7<SO[GqY[")OIVQ:Z\&bCUhg/&[39mKh0?NP+C?YTg)mM?mVoM!B(,.gF.clTJH)1;JD;5`*@p_TO?5r]]4;&(0<N;SQ%r%CrCiNqYE,(=Fi:I!__P+;&opnF!dIa<oMr3=:LY@>.2^<u=>n#_$nll.o?mEtI.`*VKTm)ZO"FDG3OrPnDF@k1D/pW<Nr['RlB%i[rVK1YjsZj$O(WVjb,4pD];/,Fu^8.P,62MrMX:-,qW"A,pci[OlMY#4[Bjo^$N5f%$%5*H#o@dR*4iCC_:HD3<@^Y_;GG+c%UG%O,MD-'6(ARWhdYC%LUgFXN6!V)Z0>$)/[YF?=(3Xae(cWO0Laij3MfGj?r.]3TradA:@ai@8'!41;0*[@,-PDhd0sbqg:9`s(]9%%+)O*C&F>/q9Z5!:P`37ea5HWKe.O=#cYA[Q<V,-?Y4=C^W,Sr#nH0usD"K-]gP,nsPc&RZG@Xjb*RjemX&M:e@EjLsEqDgY^j+e)%:Z'$k3h-OIXa6grcTnQ%T:@rhJ<9\S"qH7!hbE&g/^G<Kf^=F5cqiT;O8o(F5K7mj*?Y;^UuT!:ZfM2)@sb9WT^Co>K"VfFcY'5Z%E#*NUDW6X8gA$FRbjhH.,J#F:??("s08c*q7>MsiFY61>'OuAO^^-9s8W-q:+6^`UL`HX,%J9F:Z04/."FfPgf)qCIBS3kJII*V`%ER1`pa&+7$`R1f+#4Pt!)EG['A,OMFpnPl4gjV/iTQkj?CD2gj@DPZ]BQ+hGAgs@MVBc5c-UOXr9Q&OJ:W(8>*_ml7R%5jCm_<+W%>s>A`"?)Z)@FtL.j4k>V5`jlZkjjI!)a+rQY2S/J1%pEdgH[Sbi[d&4is-OU>o"Zn[G"iI0WWae%XdTRH]/!;0;fTO5*OR-%F@,)%Y\3@g]N:;0eW(/B:nEBVB(m%3m4,_Pp"?WG,\YF2WV6r=OlM#kcGYlIQAY`@'Q5gJ@N.=FY+u#<bcL!8JY]>\@dDC$?@/$&-#%[s%\gFl*1nZCjVegCdJFNLN&+)+?i&#Lah@^(1+.f,:0^NH[9<aem&2k(03e=9_D%1l@,uKM"YbE"I;ASfej+bR1C1jR50h<'jJ6@/T%Rt*mS#*,"go,.>[8f6)1-W3>76OVlF1a"A+PfQ$[eDj5\-JV;-(/:i^ldKiW5a;@J'uPBhlBRP8nOV!G&_&Gi7pEB/]fsHaA^i-n%l-TB*C)/]"JBRg52@$P/&p&6A1D<Z_R./1V_GZgNIRL)Cir/a"27+Gu7i)\`O1T(^4jbW?m_U1!8;I&ZTMcF&N)OZMm@eIQSn:0B%ld0^AFO=<$g7iIK1?Qss`@K('Z>I.enP:`2GY#;r(t"!^DV`?L>&I)slT$UKk0Zl</lKXM7%G[sqF8mCZ3Lo`pi(CjGLn)l6jr_#%,sDbSEcr6)@G!inBHM0@)%@;F4/6E4PJ_6K;Wt2lQnIrmg6\e=#A.4:p7Scrq!Eou&U[nDoDPe,l.Zd@:]T).@e*in(p#XE$h2)&%l(i%.41^2uc"Zq5!"*ulfpPtt4]?0\c>fWaRMAH"JO;RK4h:esEOKK2VIG6=80l$'L>c/ji4(.YF7>0hI,Nh=<=[/#K-DV&W<)ej%AXQ+2`=2j.G%9q_kGs^j2QH?7GlM7*Cu>E@"e5gf?8/NGK[)s.g$-*LWdXb!"6P@-L^(LUf7_)nL+j?W;?P1@PtJQ)#bB9C6;hl;%Wrm.3'CDN4apen:r"`Hd>NKrjoOD:9a]9<5k"j;Q<<K)l&?d=mSP)I4D;c(1W%;1#g%'*hT7Mma_E&'O>E@Tm)&npA0'M\a()g`<%[W)b)4(2FJ'X1AK!kK9l<\_,0A#cSiBn.PN*n:/7PDJ"B\k2ib;4hII''9DFFRDKc-"[N/WW>t.jaK7#-k10)Y<$1TO<nSt(2Y\o%X';X0hC%9O*qYgNnH&KrNqosihf")\gQ9p7^+M:XCr:GMa2*^IrR-/R5kj=)kb.Rl<m7A+`0"S+jalCXRfPj"n?N'Ib(']M\(E>l%i5Ogq;eA6G_l7YJW'taci453tqa1l8s'qu4F+BB(RuJp;<b1H?_ECAp3//M#JngXh/lNheBb5mX8X=?Q^ajm\WhBSY&U"L$DC4_]%f_hFn5I^TmR@T2@AZ5p"f"iI\CHc-rdG>pZ_"'HAh<Je/hM$Z\+=&J1:%hBoMNQG#rn&CqECn4V_iIsQnZVbj_t%f`Tj3IdW/CCR%FF;&QRbHlD1;;CB'j=o5mGp@Z\eVm#S"d$P0-npr"Blr1+PpUU](pI4\G2Bgp#F;p[r&kZrL:OXNp?!?BP*V.JPGjJb`:7MT0g&I%*l2EtfP`8V4#@EdS`/RrE#$%S^s-oU0'm-_r9f;bfj'$uj5!2;h6Lt-\$atWfSoX7GmpD.6e6<SHP36H#KHT7Mkm.)'pATKhrukD%#2h0`>Q]1LF'NJf4[Sq%S9onN0>5a[>_^u$4m9_8f^js0f_)F,?oUGsSJW1QfmAJte3G$r\FUfZl(Bd'5<AVI2dj-P$`7H#(JVC>%o\mZB)<!o/f()#%"4JW;2>jtO.\41H[QjMZeZ6XUd"gJ9<qA:#q.dU`phbLOi"64gLG_lU_\.[Y&+P<aJlc'/8N'5s)oj;I5(ZJU%B\b_hDVk-sN`M8==aqc4GQG20,eP>#D72((0,t-$J(qiQks_(f[2>"-*3L9^qJV:)X]7Ug5/\HheFq2;.rSES*B\MuJa`d\OG.=X%^[T[?'X-W=cI`#.Kn!RRXa9A\A_U)BYh,D`##,cYc>&iC82f6k*1m>:"W(4-=9bBDHK%nZDY&S\,gS@XS0gR9B0k&?QJbDYG#+P/%*\lb[c^`L;Ku`@+aRB)(/#-(L.uMU+/iXK)>1HDYUW$.*kch#aF?th+PYY0j[ZsGS=:uQ15Xb/&*c#X<V*tIkWRJ1^UeNR>P%Hf1%6W\WB"F%7V8C9/VGIqhEbgE:+(=njQNZ>^,Ic=39*LenUMS[MpCj@p%<?=qaq(Z"/p^ip!oUsZE/LXjKoReC@HF7*V]\RD0k"l<B%0!g*D)C4R@XVSZ'Z@!9i?kCmAYDZsg%Q<7+0F4X\UTVUje?%e>3b2h?0_`X&bKR3qE[,q/hJae]Tc7h,e3H)P2+^!7j$`TG8.1t>%X\OPuDQ3[4nb1]rXhO&9D/X@5FZTho##X$XnE5j&"7g(b-ga]Rnp(aOkdTOVI=HR1*2na]&GGu5#;d%U'1-J7hT&$V`"Bqp?CTEo%5QqO=g30l4f,\m=]"=FP97m\tYjDs_qEh-:_@`H;/sa%r&5L=p-AAKR4Ko3r7+uRS7K]dY_8TfJ%:Nj3RbcfC_</t68puYc`,Y"4%>?XLCh8pTj%;Y:5q/&h]C1JZ-GHV`J^`7SXhqN3q"D;Rd5`s%09K[:Cp;S,(/:e#B<a/%snFOr#nid<Q?gFgK?.UDTfa)#t@]ONL%PS=Yq`c0sqfU7!qBELE.CRVDro0^i]$+7^F=Sq.GV0B4LN-]/Ua%AFVmOZ\@i4=[VIMp$"3;C7'HG5Ngf;65Zr"S`$f*&`*XJ.?d%R<cTt(l2@6M1LkZSadSIFd9VfpHDW?4o+tJo3]gnFkc,L?[q>&++NA/rq8dPJD5&>&P>fhFUlc=C%@6Crr.s34mV=br[CE6K;s`f%^CKOg3<&o<B=loX&c;tRqtr2-!CbYn*q`YAq[_;.VD0:#m6qu/BMZ)WhTSqe5g9eK*t2mn(1`imPuTS>b#JkYCLd%&gBSV(0(bon%\!,II1FVKmkc^+UCd9A\a2mVf@/\h2A6_n'S?X":c_RAXc;cD6DL]m@G]Xe'<^tLK'X;Hp4bs:pGl.@^-_l=+<\=OGRi]EdDoJ^n%WFPZN-cBeqnb3b1hM4'(eB`h@'_*_E?SSXj4h>L4rXXLlUpq4%*WY+b00fnWp\j913Je8ihlXtlrq^W\5Q9Mu?Ta2MFu72q@*8uM%W8m\W_s9/iR(O9#3>$^['6o8Y6_%QN@f[W0[Vt2SgKCQ(o#JaPV]PU[EDpCA&0kW,Np[_4QjApaa#b0A2pfQJ0s,0#q)Wc\6J.a1%eMn,YL6+]*lRVSX]NoC,'^lBUH<+iK9>\]g0O07a\:Q0oBk6Xqk,6L2Su"(Mf3KubWa/!IfsPe-rLUnN*5Gas3C*Mc(*P=O,C*cN%,:kFWrf[0\UOc3bS\<XMS6\\r^AC_\QBriRaMa>J]u)eMaZ!\MOK#Ni2L#Ql(l,h/3*Qh?1T9?ferS@a1Q*;Z2tF.RD*#e_NpGnZ%2q02k`L`,[LcKuCmi:cV+tsC+;`!D$p[-KjMb!@&o%f!9PN=>>9('<,E-KR&X<QP-WRJK=HBc#L$T8Zm@,,&`L^*EPZ+H[=L-tZ1%m4K6ZNusHE7$q*ZT_9E`#Vju,i@r:6l;gs=@WV4M=(We:)c_PCmI3BS@03p6p!s1$4>on-r2FLtht"P*>&iT21;rGa#^Ua*q"%)4%X@+J/0&qlJoS<H3ZXs)i5$8g!J,NfIP2j#^0A1)L4-IAWT0J-VqZ#3oGnIO+5#]L.6K\ak^ti.M:*:5(iUL^(.%B0TRtgKYpsH;S%+QXG7LY'f-C\.S:Qc=^"P\>j?SS9,VK1b^n=[n0u[uNK:?PZ"'qMBm.s,Xk&?>O.B(5KX@a?)A?:7<>B$o97EE,6nA@Z"U>cMcet%m%:9\X_r@;*LHr@kMG%J)-JO>Q&;VQ=DTH&`hP$='EYkX-EJ6qf;V%-egqk@_Q9%Q<6j%(lJYWt6;o:bjk;1_ZrGX5:k4B:T`Ust%U2^\q1D-T_HqlXJi-BK.?LY`cW<Snqcie8_#V?&:>3SY%cF5Zj!g>0.'@'=sU_!)WK\Fh_X%=Q3X%N1'4MRR?$j+"8h/&n?i"6TT%>k.n((137n1EG$S-B2+bRV@Yjb$D8K@@Do3khtAfp!I/#QmAXkR9j@$E@kE_n.pbXZXuk(6kJ4lck,)*UI4FB]#bfm/lc=(Q(cZC%3'oDEC55tu5^"h$PES:)71?,'7m10Pg86QGC!fd-VJrl$5p)L;UH17!p(oYc3CjFLjKZOk-oO$WRl\9XER*oJQB$XJ1b%uAR0nr$%"t&+<&_M_5rqO0D)a&A!3K'R<1Q@BJ7e#+TZqLb/dk0.,l6^3J3m<Zf@S]Z*`=G>?=hHN>!,2_4bf4`<`)tjd9PPF.@U_m1DR7cu%\1C+-Te?c[:tPkPUsYj,&NYHe/T&'J8&$au#5"a@+<WA^R1&J^E4`!,<?dNql+3g;Ls;k>O@GLR6(qLNUk_?D+;uk4.^4m@:Y?3h%.)WpnJnMc!-l3T/A+pW^9,c:^AaX@KFEgIuV-5L"f*\LN6LCL*,RDjY"/$BhX!^6uAo[#h>g6:^$X<:!@Oed^.Z%W0enfHoV*t3W%cn$PZND`p)io($1!/Jp?Q-j8!iM(<2NO`;*;[?c1A?t9rEX<4^*`MP:%-@bG$O4'AD#siMM:a4=3uD'iXqH(GSr2;S_@;BK-rdKp%7&1TBWBa:Kc?3N^_;S5rQ6Aq;":I%Y==d0E8MhHFjRB4e>W5uNLg^T9&7541:*/5c@W[aK_bkDoc1%I/%/Qn@dT]FgD2'FH@[iSi%+ZT\i!!;^JjP1:mVK*ti\*6h,8-`.>n-$RDW8*nWC;O@iJ8L"Wdl&Z9+@!e5UV<R&l%MHl<Ks:E_!2"1oJY0o9kHr77_J)\?Afp,%_k8[$huL>[>s:M%W=b(_7_dO=gQ-#f0EhVk_4daL,3L+X`^/JspuP2L@fX?LOjoR._0\m@LW`3p*QE`;K4]\u-@!aJ"=Cc.74khK%EZ"LMA,p2,3lC(2&YZ;9XHB!sHU2!I5ERE1]>=2Q@%\.B6GQ&rA%iE\F>VDS.NDs&/5cn5K''Vq;2cl^3\V8aFEpq\"Oh*6Ca(5R%MdW!QL06-f-t1Yc,4g'<o2/$o23[m&?%*0'LXguE[k(,t8?>[4iSIa:6b3K92hbFUiK6SJ!_..Nd@&J?JBuk28'X@_Ad8";(cJE1%L15d,.B$[[1a3o>0er%?0VPQipMPV4K.8-/lbES+?iU?65?Iq$]\nK/)riF,XUNtF4BDfK#"3>YHi^[0oS58trl#cbHK,Ga*q01]%l5W6$6>'Slk$_qFe[,q9#N[!3aBOcmJ@YT.[8HfZ]I-8W.**YpGG8SM@\fTg4a6u?N4-N&WE4nS?5AgE#`IktS8'5WK4l4SjBil(%_PpEqNWClr**MfOUbE30L*JUqGi5\\cH1UB3>R$B!;S<2+puRI6sMN&=a+kp(^',^J8?,:"X2B''B*gPXP?+1=_SBrq^Nq]JlLl.%V?7Y^$:s+S'LE_L"7YRXkHT]!`B<jo925%M(/mu;k47+K.?2q!'O+P8kg&`'TF,N;AU<<8d\o="XOP6GUoXQZHRKg;RhQMr+K,<T%PbM!t!>UZ#N@H3^(L2JgPA;q`3],V&J5([B&_K5>[-%RLi<KH4p-$Qq&kE7+'<,SsdV2Wa7@<?H05+1i$!t/SR:/uD.,+r##\U6Q%[tT7@)`f$?5B1D1K.9:F"P*qZ02t!Kk/;rk:tW>3a%"rF2$jm*Uq4c(m'8CsBGKT:LDH/tGr*2$7"&:H6kjLh2"%b=q2dNc$BJq5%JgO14_q?"Z/anFs%SYP]O;JDY$%uanGlauto^9N$'X#?URk?;eMII=#G#`@e\\nfbS7'%/ZJMZ#ME690>%Q8mNAcCi(2+e.G'-b4%)!J$;)G,A9Ei[<iFmsPUMr@%%bQ&,(`obN/RpiCaS(uADMIg[@Cik[%V`)2'_?PQn@r=1koi8)^*LB(Jbd?%9k@2fM>7I3dXi/*3%*G-?];T%J<LLIXi.PjB\m/q^na$9bNgXN`m'hYf5rAY6%1Uj:0S/8d<1EP?tR,fgM(?ZW=*Miknr.I0>mY,(1NoX@6Xs"W'fp5_l%5a:@aR$^2E,XE]@Ub<'9<GkH1Ocr.N0L1G+Wf^K[1pb/i25%8!7Z8ljoS._Xq3uXcO2,0EdEeHj>"mOWDA)SHn7H43#S7DW(Z/0e%O5*AIKFrd$b]jUNNq(Z:,9mPu(<j`I+'UcD*Q&_p@Ba9e,LJ#4,r-a4Tl.*U*7XX@JnS+a!Ga`P-$1;<B0p^WEmBCiROs<WA-'k/%]k6$[2\Ip2Gr%5aj$g?m85,?"&_>/n[4i^^YY/Yam0&nYhY]dGc9aZa"YS*bQ:4NrLt3d+&lQ\KC5N4B]q>a"9X8>HUq#WILa^^N%ck5FH@k^,e999p0[2nN.qj5.&\P(c08>&XLA$WdZcjEW02E#W<o%o82C_%FLM1CorRk4po/WXd8I[R^oQCqHZ6n0dXmh2AC"?FB<%G=S0t/)]TFZtatEi#dOnrG),Yko"eJ?2ksN;)6bTCeG2]69TpU[t(/nQes=U(3D"XFrB7I@P-"1eS@$U?l6f->m<1,oqV\hR6cf;%9C7HeHe1b0^IMc0RXO%$cIQAo!G`0i]7J$gre;[WosAt9`X4>[k7;q^3_.+t_Nt0HfD@le`_;2-N&I"0]k/CETYAgA;%C(1S,"2=%iFCp?JSg%HVGi&eORdV/Ar&6A9^\Qt\8`dgR1HSB5.2/A!Gn!S2<g\8$3WY;V,f('n@W0<:bi-4QK0H\RVcr,OpC)$5A>:W.PgG4%;sm(=:#m*_j*?Wu\\2ThS_fajL4WWBDG75SC3hj+a:lb[c+]/=7ptk);BsX2Jj<23/`%!PQ"Il.=2l/2J<B\SgQb5CNW'Z;c-g@G%W:IZK?r.PXVf#Ch70\e6#Uc`5Lun2H?YMR#;-o^C/8`9D<SF[d!ZuC>N>KKS!dtN\&^-r,7fNh.AneY^<-_h60^&NI`S=X)@D^L\%/^$LoWDQ,tWS'XOBhX*'dc;C=r?1`YHE`]ioGW/,Hd0u:]g9W'!a@;^pt>C^2U0:q,YNY'LV;C>A(M]a7iV.!_iiRI@o;c-a3S!j%1:s!"`;uBQC2ub*s)WDJjI9PNs'oGFpgN-/5:hc>8j&3sU[qSMM`o9Pj+\"l-S:+o)i/*JaL`3tojX#=And>f*`Y*p2olNM,UTI'%bVa+-XdKN+.a`ss];(SIFm>GQ7/W(JK>inK1"k?8XrC>36+]$;B^?r@F[a7>)(*[henbp`$\cGKC@AXirDfEtUJ\"Z1n3>%:_sZ6%-o@.%Jjp\6b8K,7[_`^(T[oNbar_L&dkpK<d9IBN1bY99!+.Al(/:Q<o$eT[V@/r?2d,nZpg[:JAQDeT$;lSk7>i?eq^Y?/#@J#i%1bQ-,Hgh+kcQ2)X\24Hu>]^><Ah^6anRPE$Kl@n<**RLl%.4tj:>NoP,XC='LX%Z@kmEg"!LnB2+N-%Fk^=Y7%Snn/H)UdW<-^Zn%Y4I$#h%=WI]#h8i^lbHj,;r\`WhPAcW00pak,!?,L/(`3$?5FV:dql-(5tV"K7AGPFN5&);+q1pHpAWRZp$H$3%"4;(@ZW`.M)I[%S=os*#0ZC*;D02QW]-<aKAnEq;[c<.qkaXM!,i:`>#RgBP4;fn*bK.l`J+X)K88l_*l)(H]V(6$W.g3LbD(bNBT<IN)jjoc%A;'u%4P^SMQmNLXTYW(Sn6P_Bk0-Yjh"N@Q-@p4C?GX#-Ik9-X^qr^:^pG:dTG$'JBZ-h*=I83.63N3>h$""`;h^;;\K=1"FFrTCi"C>H%`Jk$WK#Mndd/_f8^,$>M3b\9CV?6;j]neRnR\"DR@M%H1aHf%n?PZ4gd3pJ/!.;^)nU_aI9D[cqK(5%,r0c?#GkF8:d0R!_2E362%g<%dj6;>7OnC)J#apC)((,%YEJ_f'mhGEiB-db/UlDXDl&@eDh!,CG&`b*""(=Prp+SNV<@q?_hCl@&P$r]Q86AU]_0GbbLmVuX@%g)rZ/+J]aG%1YlH0a0B9X:qt/O<pC9IonP^Nh-]u878ddn/,h(IC_=-4bQAYTBs^(WZZ:4gC9mK>`CbH9VB&N(C6LInn+10M6Kqs%/@"J8oJ,c)a*.S>*pIFM?6\b4jn)W<`Hk4S,<KaR=dP2DK*+]5$Dd=P4YkF9XJi][d"19j@Tp+_d6ZE(!&7RaLk[(n$lt#A>,Pr&%C!["mGbNA!dYh@)Z)D%>PL4n5i2_g2_cS`V#e\rI/j/9RAoXhZ;;X4h#it]b7U)bn8r&co1sG7[KFD>r(6=jfY">\,+KorBJP>f9%F.`R`NO;25,:0m8#%pMfCRLp#X\(//([l-\]#PTpnJNgR-gJp'7iN?;cois&r7k87"PTWuJfd7'/CZSn?`haaHt_"h3V!5$J<)D4%@uFkV\4qpV=d3^N7`(s3Yjqh!()Af49XfXhV_lVMctH_4H)!rpLEYqTBT0H)oM"Jk4Q!,UTZjT"e9K(0+cT,AkGr=pY^hkaU,*oq%3V6PcN326\LW3OcUkFceAH\9?iS0-?2b\t.SAshbO)6AIfTs&'pi6lQh\6sM&Dk:#-(X5e>;S@"p1:d75R1t["Gfm3/V4Wm`FdW9%d:i@_g]tl2=%i4(J;o<c'b`."fE-UoBJ+og<X3<I6LUuWro5q,EQPIAlE!>&iu5O?%S[!*9$Jh@!d1AoXl'][I>_20NBQRPK-H-F%l;GHXa(%I:L#k(@Pgt#17a+c'=-n\I!BaL3$cK[(G[QcuW0L*/k?/QU"GkK*3Ol7:P8d>^L4/>&7;.Q)r-L[pMbDA3XjEk"RtN/<%RrWR`j"K8UL,6Y'iA)Gi+##_0FuY!"q-9l/(>1RSfep5fCLH&S-r&n@HQ//\aLhB<J]3n(n#@k4<%&]l7N11h&X.TcH?132#TVIo%CCY*3-Bt`(HD*SXB"8BoCJs[tfBD,%JB<#3Li=FA1SX+sR]&ma)?n:tJAVS5jta52^$]i6=`0(6o4VHh#,8+-*36uF!eq7%LBJ7R%'OQ.^K8,hJ`?Yu=i7\F2^*'7#RP+$-6E_Y8cqm.F'(n%i[Qe]Z'Sfsm9/SSXmu0r&HV,gR@Diih$-*Ao2SZk+"I*4P$cAq$Ssj%2%_SeIjZWMkD:D49>?VM],.U8gcQtn`%l/C"!(naZ0V(leU73#`6'a5Ae&SBDMi`RZp9,RbQ"C!*IYuH]uO:W,PM39Fr.*qU;b=uK\%J=ET#hlTImHRL%HM`>F're!Y\\X\7snr_0@n6l<^P<*e.("mRE[![b.dnjqj0@ONJYg1,:FG!d6n2+D\"'\SB9-jB!:]aK+&g$(V%.P5b%5a3+T$7T11b1PeO'9nu-fm3+pI?5%8SR#CJ+Si.g/;J4mT%jC94H1Ka/ntcZ4b*^TE9*rek2"%?&Q@R>,>,qDJY9@1.9Nam%,:F`3N^chhSTafT@fc$H23@.J7:h2^3n:gA9VNe)1$ac6TdjP\$B$)unkU2>cFQS'#6"+)DEQ;1I'f"^#s`;d<'^H)9G/mQ#4R1X%e#JocJO'jSYK?*6OhTW#!B'=J?^6r>U4!K>mYA97kH71g0,e+&NKBGoqgo_]f.2hrnMgoIkrua52u'm,JJH&5BcRD;ad!j]Qi`&9%jPh3l!JaiD%%9TT1]0A1dI1RY6Z40l4pTLf$ITh8mc]W)E^$Cr`JIH+VCPN8iWta4Lh4AX=GK>RM`;1PqkZk2.c`gm]JGqA1mTS#%>!*Q'Gq<9M8BPAj$hX^W5,R2+HkciU,-8k`F2``68Q8`6j<q:"&K7e#Ar"?R",3X!8eb=qlmK,T\MUKmECE_D>o3fH'`t(sL'b-u%eUF3r#n(t\WJ]E;<0\r]Hs@GI#.[/@l`3ha&*n"u!lD*SMpn?)/R%$gQJH*CMpQgBhh<V3&IHemi8$a+G%0#BTXn,$"@31]")=pj%Ubs8\BOSjq4\?'5(s(RkB/Hk&':.`HbeD-LiP>hiRK#MnW\IM/AN""FZ,SB8XL^7@l(I;f#:Rp0E(&i+c`fXK$cilbWT,nPEomYl%KFo2#'4"Vn;8A@u25Ai@(Fh$:9Y5';Ne6%[;oiBg>jaI0"rSaf0876$C1n/Wc=>nmk\,AX_l!6/I:e,;4#T`.6Y2*3=uo:[oBq1'%MV2,"3("`kA+7G_Cu1Kn^b@n:71X@Oo.1:Pm;S/#WNid;`I"T;;c,^<-.=\*@n5LW,V!pf!,mO0m@S2#<`L&OR4F4"XK!?J00n*A%?%U&.X$YYI[9gmGH"cIe"8lVD@#8ci923F"li$LGY8kJ2)a#=:H[0#F.Sl>f`VmSU9s+:Rb?:Y7<eH]_VYl\uIY,K:hCE6=6GV)"%O0::e,WG^IWLkLOP;$-WRtn+Rk,&k#F@2Ek+LQrtKM<K9^P5&u_6)3>djoND+e[/'.Tb8Q%C*3A-</@?R3,-8VGJCHVSZ7'9]98u%BU&pq?.toea-NPUoouA#p-Rq(:IB9DBeYISWR.Bh'Fm6!"&b3D)[=B.D-ju=8M6Zt#QYO-$S;+k("+b4a.U[NA'"^83I@F;;KHLl%O=C>N9<6G`(mio)/7-.$d*aY]/'\2*+B&aq!H.BrRjXJoFWUJh.;,['[cal.O.JLa(Po\$\/=8ii_;-aL9PEX]&PqM@#3grJ=j9l%,nO*A;YU*I?nJ)&(3QXLB:*e<.LNYr3[RWTAr/%2,][CJb!Rh((8AXI<36(Q/sYSKG\nnN8)n0H*H#FD)"kZF<0\i!!!b=q?=&Pd%P<a6tQ8/\Z.kK:;Tt.NiJ0NK\k$?M^4qC&>-n70g0f9$=&@`2X2G7eG1VL*7OATW#/Dj4-'V=m_:^f'YqH*uH&@8D5e2\^hA2N0]%NS9>6#1!h/,2lRrj@29<ljZ)Ehin*/5P`B.(<Dc;M*(a/r.!PE@gpdE0FLG=$9X"h^CM+%6NWj(6n#8c;84`N:g#M?c)%h+;6N6C%4u`JF=$S=@V).107;B1qI2uS'0kdAeBo+%_T[HXA5BrTi4tQ):c"#alTlE0#!S+G[?<fd`^q^l14F/VkeY*rZ8Y`J!;:kh"R)Ga]%s#VoKs2?p[<C$kq$al46g`],2E?L=J=._1r_I9lPLF&B.n=YNPFA!#rj">LNK'"*a6^.Z%=HsU.-^O=V*_T?t600u%d@8;DPq1Y5%Vg?0>0E<\jTL,HA/KF6S$8trSi-!G?9S0<RTd<@Qdnn?40JK!JTIC"'!1$u4>j@2A@T5A2#(p/p?IR]h"^"``(00MEbcHULPS%IG%Kp(9!+pW'5Agi4>'!sPUpV`I8IkD)0`>VZ]^j8LV+C6(ihR!*88GDSXs-FaQ4M(CXZ2YU\qd1ktob]$$m2RIC6bsGZk-#4*i:)=L%g_^)G*RL7L!+[GK6<-Bf+TW>gV))dlN>ElEruN[H$"blN(CS(]M;0qa1AA@IF"3C'QGO'-XS*L?l*,11e2,UdX8%k5rtI`XOIQ7f%JG_kSm[KDt[.s;_6;pFJ5+\H%c*uhR1%E'\Q<0jQa/?dYH2`eA4T<L1W%2>/\J;u4W'>he)@W=G=mR,Wb[5G/b!70/fbUd;6$&=U%c)_dU/6G#\_%l&8j^o@!7KYn%5mS.(L/1D4[F$m,_f7ETc]qP0Z$I&X!WnG!ALZV@^Hp8"KD.;$#4^<5J79f39T9'H%X5Er%P9,!%QO4\40b&jp_^**V%1GlgHCA]A6\c2he*#,H'kfK??:p(+QfF2%?8Rlhhm:,4Yf+?e<[@knOL`ik0YP;JPlOYBCt7oemMVf:Q34A:%0nKZ9AY:XSLo?)J:uR/_[!\6PHhF)oAmS0c__p=>I6iM[MAG*7d0pA#d*(Og-XODkC?bQ.qE$JPoe-q$dhXU+5T'W@R.Qhuk!3IM%08Da<_EZic+7Z,5a>/%7=PoRCAsF-A(U[<qNL;02RVdZ]FRY/#L1uRrn^82d;t`WmI+$73AO>\[r@`O=>'%>VY\#V-nG<aR)@s^_%5)SV-XPUR::%>2m=ohK_.^_N6/h8S(2bRY]1qbQp/B7*J?Yh@8>:^,>Q`au).J`5)(qd?22oopN8OhVbIJGKuC=lh?oY=Jt2>Cp;%oSs/88LfVYh5D_a[<PPP$Q_I8pc1;jb*+^Sa>*&+YD`X9o%!4qkh-KX`NFI3MAOC>GV5.eM-^Q7n=82O#+G%$7`UW&68ufNC!f@R%Vh'<IT(rV$X3TX^af""+frW=(AqTX=(^;Sil9?hT(K?XU:uO!Bf\Q&MIR>P#o3:(*Z/tB"J!_CihXVU>IVn4C9l.9@(\lI_iRn(5%<H41r`FSGA938X$KgA$Pl+D*I<\T/6(f@t9*Z7[/HjNJ$1/XiB0Qa%M4'6Id=?<:rZQS2R"G]5?":kU=YPH)Y;A5,c+Wn&#9;"X?%[:14>FEhV&9_P[mK[QMu#'Lb'Q.*)9%'+0;d-O!.!m$h5nRbt7#n$*&r08$ji<:lec%/15b;`<*=@G([#_dLEa4H:'%$[!d1rKLK%UIg*bTol4.o>V1`4#SrQnSodDp$/9M@)uf=")fQHc_k@B6qJb,LY78lnYf=.^Ba4eLVUnb@`L%o%H`9KJ&+opT`ErA:WQkUiOsHQ%#MBPW*ji_5='Pa"++8;M^dcpd[7.<O2h/%6+bQW*d&'?pcW6tiDhpLuJ0B&;6bsUt^BO#,(uA(t(eYcMm#_b)oI=c)&e1mp+s!5o%lg!0ikr60T>+H@7pgPtkW(HLAnMHNGE[XZ%SqUR9WN9o-Js(SK#R3.Z5i\Qq)E]MeL1I:3:ccgp,qC,(e`A)]Qn&Ue&JF>2:a1j)%0"J/W$SPsr?45D;,[Qfpiep0G!/i5P^rnX[p1`2B4;ankPJ8h>oGCVL%kgq;0h[JGp%NV)21\YBlib^]cYHdj4&=sQQ("&8'gV.W%$9op`Y>E]Oe5N9E*Z:itER:q%g;okL_7EW'OMKEN?o/efPo0oeo+r3Z?'GuO3?be!?8^5F[/!q4#1&p-2_.jNa,=D^)E?^b<)FkB%+.gp6g#BmQZnJ3#;#$-kA3t-XFtfBW[PAO#F\OeKJ1(a1:R`3NDMIWL(p)-EBj^@C&3E7X+)?eTY%XdqHn*(s7C^-Ob>=,[o"l?/%$@clW6NCG^A471QK:XP,0r($*3Sf>eZt]l&7(U@pDW1Z84g6i)VZn_JcG/OJ4ZpQIQX%uM3`qEP5R8SqJG0><.l%cS8<;pe"H"RR%>b3TaZN<OG]gDs/gZ/khZf9+?;#s(hpg\u7r7&!PnRn<CDXgFqrX'Slr4\RQ[$6&9+6ToIZeCF31Ned-niI/U8?7hk8kD6KH-RNp%`l-;=V59V#q13@L]I97nI=WBkr#m3N[tj_?/=f#@VMWdRCp#&AgU2G-HnJ]h=U4RW\:k3h*VdtdWagqQAna##4SB4@9'$6#G\S5+%ja[HLk4kkGX2g^_6><m5Xg"@co^QS;SJQD*K-r'9N6)(%TJmH)L=5k/f=K8"Q1F.)UN1*9qC8LZq/I2l<b!eQGpiaEDM>.r=Jd83%[k&,K+n`7]$c,`98^!V,#;?;T!3MjtK3OX3G[-gWl5K^F`O+7t(4-c-I!$-,?ET@`Cq-=j9PR=I(eY#batF[C0<*Vj(KF5'C+7E6%_V3KdVgO)f62=1I*h:?5*eXXGj_kkh[ilQa39=\],*qu](4S0f-[#OXV?D]JF.@G.GoL9Zp:`0o+/Kqs<kuWYO8\U?S:>S,;%jd[%\\-i$pbga:V8-do5mFBETO8Ou.!E&s<G]Ga[U!5bH`kCu&Tq=]?o/]_4cI`l->.ht(a+8)!pdb7HHuYG%)RdrK6!O#(@P7*_J@%D%SkDAN]THb5'a%epj)qscp3qcBjuP?X?ARJq\IU;@HPb)X"M>cD/N'`Zj`3+nk-&)@UA>.[*i@5,.+6B0LeOX)2R=$+W&e8d_ccuY%@?QQ;H@f;<%+W)r0L5fEjT@2R_tJ*e4KZD2Y=&R6FbkP,"7V$/ikX3XOl@:>_Ol8b8E(L$jqYXP3T'p:67RcpIBRUM-@^G=ZZKDR%?Wes)hTYK,j:s.)m/f%4V$gM$[_duQ!8d).$hs`,+TGCNAIA?unn(TiL@9GWNkZ0nWQA9ONlmbPlcYbB)]c2;L]J@%U9pN\b7OQ6%<l"?t,,;LrljgrBQTf!^Ut2BPjEebbj_5.E0DQmr>#1>lJ0!<J9X.#*O,rd2j_3'D_Y]&r)DOHI0*[c+H-o=V]unKBZ^c"W"G.$F%m2J*$e-_l@REHj@!_ZibeY*Iga,As]&5uLlSsuiRb^u2&`E2=QDW,ZF[#pn1*&?9#&rMIWH$:[D2ru2fZ;nlGOW$+QK",8p<PDl]%'4('YG`A#r0^1LLh>lE?F1c:$aHA"Ej91^.CWP+qO6U#4?6YO-INt`e9a3cL<=W5E&#Blk^uFfBKf(q8cWa<]?>i8W+cl1&2NY1H%Z#rL80lK/5m0JEcg2e2mQHg%O<4PW>>"t7',WDTS_L+4#\+es:TqP8Hg@N"%2)P:DXsr.4[Wm1M^5g;El8C6[!JVEI[qAtF5_(AE%U%7Bs+FfR"#;8O8f.$4.55GPb+VfkBNke-(F?,Q0B_.HFS\;[i]`fN80Rm9MJg>Bq%IYPn%uNO1ZMAUQ0#,7jqVYL-gZFUX4+[5o%X=nuiR^^]MKm^!cj77E(<*h#tVN5rL&u(Cg*S;@aRM?ssHt7r'M;k(uJKrNB=.Go4$B]i1=U^cHnQ&$/^t,CHd[<ACE/e39(*MPo%Wncm5-9SH,\GSb5Hp-LfcV29X2j@`)Rk`8C;;PRlLZ5UJP$C<4XW2H@#\)_I,!%:.g,/W8nAmOQ<l:2/it*I!:hl/^HX1P?:_nbf%!JGZG,[+l^9"%HV(.9(T#$%=o-!`?-iG/E,+CBaJY+J-i+lk.`LFW&K?&kEd42Uk5@`L510K!j@%.B(@*[46-1JImmRpDO0=us>t%Ym/RHCgMZu>f`Mcj:?@#r+uslGhV;(JNqM8JEIRq%``KpX"0ciEQ++"=\^MS8Is<YYJ,\6(\1T0L2sdtJ8iG2&KjGtg@F)V4gm%E%R-<&]\AqC^V*T0mmW*u$4IT^sr+1)Z)JJ+Y(d5*j@tpU&]3_F(M.W;3%M2@-M(9RG-J5kSB3Pp]M9/"r/K99VXPq4$M9[N$nZD:q%n>8]l5St+=VhbZT;j^Yp\/Gie:5hmRE]Wsb5an3V't6Gl)4%d<:rGp:IfW;8>[c9bH0h;=2NF-^p/3IpRkk6ZOjT,U8ot8pD0^5X%A%Ykf$V'(DJ_4doMeX:r&5Y_uY/YG2V$/]['m4oXD"/ocIl#/"3d6[qbgS1']3pfac,'A+CCp&C(VIB!T!Eo.Iua"`0a#,.WhE9(%,34cq^<p&#3<HNh[3-E\HXRbenMkX;V8X97'6:(f'`bZ+]>QQb,qHQcG$dEZP`qqrUZTCT)<s-7]NJVC'J3l5@sI<<>[I:;DOOZL%4s8$UTBDP2ie7qOj1&i"Zh,*#@WB[=h`l?JRmIE6X39[)FhVdFU(k:'7$>rc_k3TgU3"/K#BUBONo@+a':JAF07KV.7ir]]\Uf&]%[O*^TYQ0#D8MFdEhYgC&P@!7:(+t*an"b`=5ke[)bj[#4n0S?4>nX`Bj=Guf5(UZYOaJ5,aAONP#U<k*QNqPud`"+45W-&9`A1[.%-ZI/uq=)KRdFmQ7dU)%!n@c1t>NEi)^iW/W$4kXB3Ac_fY2!5^C*K*HC89hMOT?8(!ZZ2"^3mKA\(4r'<g<Sr6KA#nUOLjqe2rrl%F#$=V;(\#^(trn#$KGR&9E%%uHn?-r6W9s^j0?hX`P"UOn6BiW%U,]LCV'Oa$2S//:p!ci>D;34V9!tS2B(,"KUuk#'$'L[oKl+#%ksU[C+nrI=J%f+M,f9ET\uH,0`?>_?(93#aCX=07#0+Y+69ZMCPqRU5C2eu_KW4J&oDU++4=T0tB`c1u+gG6(4A"@JLn;?$Ki4aD%mj(XhKiYrC2nQIaSUrY)0)(o#?i:/%rb9f_=q5_o+lqKaos_k2'7]@-.!3Y@)GSWbLVSqL<p-+c,m&L#&'OWT73#BB+1dTY9;,@%%'`*#JjL_7/8.U$F?FOb:(G)ll=;us/iBP)%*ulK;j%6N+W)d=WM=X'7;L#:/aa)I04"pMAH:)\.HH6*Ic6bW4,l+'#[a9IPQcKKB%)K03ekO9c-&cDR"nCH@##LJIqYBm`bTr:s5r'@2`BX]K\&)m[lEDi_m$?^Amo7B%!W6.%tVl73d1dst:>]'6@Og.kETpk`u?,?Or%PC1-AIVrbYW8Q/ngU7b`G;,uAi-.mGP:!kP-"2n+.eLKjF)$c11K^,U>)3$:pA8IqW%6.ep1r'X)@$+0q+]=a/;[,kDueVQ5;)p_%`brQ_&qnXWZ7\m&!B1:jiq?`-+i41#o^IQ&!cLRq=FNI@Xb]t2+raX;-8.]:W[A?]o"3KTHm,^*pWnNtjX,O9W9U"e#g.#;,5030%8<6^K\I47+R3@L;,b3iM=0b(SrW9k+c:)_H\9FHS#*.C"G_p+R,7qV7!_`$9Yc=4e6QJs;aOO6'rX,(E7%)#H6^U]Tl"d3KB<P/f%9>@SV9Y-"XBB8Ou.U7Y?XO`#m?fN_d2Ff$mYY/FV"C"Ra;!7pF['^#0G2*?!Z64\>4."iK,XTGMpH8YgcOhRA588AsGQE3C"r>Fj%i;`..ALg`Im(3]Yl3G6(5uM)Y8tU<:L8EQ-*hC:XJVG-[K>aBR@<tp'!XM@nUgT$=6+Squ[jtZ=%@8eS80bu7fd?QI3#0Do'hi[f%&kN=EK!n-upuL[om_Yl>p>(Ki2e(4Y7/fN7&>'J"g8EtKfG1_,$k(+(O:Mt36m7%UWq59R#^=4:J342=V6odi[Y2d]lIg8D14?A@%R:@[t@<$g=Yu1>b7<&dL+,FdB2OTJZ^Fi>j\t"]:rAP?#eji#A=Z"k@!Z':=V11^;-"DRW)^]2#\1"G+Ml96#2#AM[6pq$9PDZ8u%gRpOqh'aioAc1isL5$:J%U;F4;?fgSrZt.bQ;!#G'ViF6fXUPi,)i(7IT=SYTnT%`j,Z8#,I'cRR3_!uh+kR[.W[dK0U_8O0fQJ$%.X!:+bImF5VGV,\`g<l.!>p`nDcH!.g4?\-;j:p#k/';+n1)/#oV36ZV$fZoo=c>sX7lQYY(T)!h<5iFMiCbo*8oT`l'Ng<S<u?Q%QZGC7on--KWaNWo<<eP<^]$p^0H0/!=X(2=T+XeRTu<04&gg^Qi3Etg6]$N76E:d*0mn$%o/g0ln%Ck4Yu^6DfD@[>]mZ2A0s'it%2>hgoTZ-a;g(!H3D.h3'\3tN,fc9YT*JlUdbX9K/lD8Bp'="N]d.ugVjc[hH*ph6?mQ]fB(RBS9i3u"@P-/uOM2b!bmm'GCI/Jmq%"TCNBql:"_LWEp#;395u$TS>%]D1/*Cpm$iX9lHE`,%eS.:JuJ3%\irUYJR/mMcUT&grci-3L-o+/#rg5XqRMOK0!A083<aO(k-'%"5+Cd7Xpj[<13s_.I/<$b3Ta7q*&.FXUmdC&?q"mF'L=/?oOO.+tO]"X/r:"BY?]qbo7_)h3P8'B=ZQ\VP@r>!0Rib')OUN_IfM$%s5Km&qS/E]7mTIYc^@8'?>d/tJ:bO*_B\Pe9Sf'`Xah5Dp0Y]nj.Z2@PL`EYFuV'1rt]Y/?c(Z6":[MI?tD9?(`#=E<D.]iS,XuB%(kHDD?Rrtj(&[-V>kJIMs1a4rCc:S??c>M%0l^*j^AT'c`cpWiPkc:]4giHR0Pe>nYTEW[r"R8&I%SI>4rWIWYOtX(cGe_cW)g%M%THU9@Nr@Jqr2kdt]ESQRc0.YV6W!=ePi]++WkhAaQqfF*)XsX7:X]j6(Om#crTDfpKO!qFb%'5L1MnUpms:/lD'FG:YJ6E@`;(EQ%q]D`%L$<'H2GKeLLPe`tKW4HI1/oc&I\R\P?c%s:?OHI$Tj9022d-djpt)k5J#t!r-lW$NVA01b.jbrs@/g<>;OZYrcPqc/Idoo-%en_@e^R%Lk%qC<N=J9-Q%<,N;oc4jc*>EGtngp*A.pi,hqYoBf]VcFu^@3eNma%hma[Ik6d5J=T[IZ&Drg-F\.25q8YUh$]D/69i%7@c=1].WYm]tNRCm.iTFB?gDl!WFE8OMB9JnispF]Br@i#Vk@h#:B?h,j4XS7f#8+:M-$`G,gh=(K'l4j*Y6fGkUropoU/q!2"R#%f$N:"B2-.![iV)e"59%?6O4%fI1&lM?>d6?6_:_%*nuZh[o;ERM!rG,rm0bH.!5mINt[1rI=2'So^Sa0W]WIGIjOZ>5JEUTrfst5%%(SM8O4lJ\fg.SkN;F1##6qPUU-MQ5oT+%OX_0`J)S$aZ:$b+d](-1lVIg$"FNe+qNqf8D0>@3".W)nA?ZVt]l#-ESkaE@BU"GIC%TOI['qX>2<.7CBoj0u7s5ERrr3b%LV]b$6W+nj+hPg..:"I$NI6]79/.mSTU5uak;cm4VXeS+k`%-$^n(AJoGE'O_k^h.:Fli=dj%DS(*TC%'qKDs"Gu@Z'WpI[KCOC`GRO*g7Z^'67]6@M"b>jO=r#neBjLS1h_9H]^-hBfE)H?hBs4@eB]EK8Mi=j53f3)k>?h$fOKM%Z;<u@"cI66P>ur$ak?]*-hk(c-iVXC5:\9ASiR"Xg)VhJi@h[NrTj7TlXY#PM?a6sdkH[-ejMschjO*2:NGeu1[C[#!D7'U^/Zd5%#i4o*^kNEE8##C5r6bOabii\<6oUId*W7A>+'a'W93%f1<+Id'<(f,kq$Vn*i@+7Fb`:]h>>M;u@%4;:EZ9HXXamcm_=:'#jQ,UP%^dOtmHg)P9&"-Z3R9U8_#7GjGmK!u,UoVb0[OTTt2]:Y[%o6*"6Bh?-^58b4^[YDhmQ'`q6FRC-5SE<r[hX2R^0Vni>s1.9!i.?Z%?g8oC[H3cYd^K@sN";-P)d1m@I<k_)PZ'[`0on*/!]1De^K%SkWD]Eg5S+eaO<,<8R!%jn%hT/_l13*5ao;B=Ti5VNdbP[L3rFH%%!YIqkj[AP$M+G"e7Kr^TrYULkfI&<*$_i_l:)T](k."[P/6AEMd-.K6;W!C)M&N9thFMK$a20OhlgBbLP=sOXrKE(8VfG2bDmmh2%Q/02BmeX;lnu!f=&j6V&1P_h6ra+@LpS%=qX&*_!2-RCo56V!4g)&^r)]Q=::%.R)=XZY,+Wb*%]j&Z:R[#XFSG2q9`Bpt[I\/8-%M>.X$CN^&Uni\Ra_T/B,[E;9FE]L?$NJ2\X;<r@bi[ELN1QbRS'N5=^I9:A%0po4i@@P]^!oIk;hf0^eXOIb"'fM@Kk\C$KhAuV;%E0/mJ^"i&?I,<>?D><Zh6JZ(Zre<&)FL>!0($jf@81Zae(>hZl$3"d(<(OmT[#3kb/GDpAHngrcV[;$Qi>cdFAcgT`P8jZ(hX>s_%p]'marb!@W)Mu$T4:%p7$iX=X&6LF+d>PhU,lS!4q`?%lT1A,t$aK&*')uU-pj#g0'U(3+'E)9)rspCIJ"F(?+*k?qNl<?`Fnn;-%$+cVlb4GWJSpN@^R]d+FOddIX-a)F7fGe4/TNk4Aa>%Wi#E*:29r^^-.])=DSb,@nMUl12m,&/dJ$V5pJ',cU6WslRC?JVQ0qM?Z%c)NHP#0Urq/t`njqOqP@8;KW'=q$]nc.,Hn!S)a$=:Y^N+ab+CEVML]99uW8WLIDgCR["nf^CD^`FXBEfK++VPkHkTnP\V9V+*^#%!nfp1NAZ:sgNKjio@.2`s7B\`QV\\aOeHE98\4egiNpG/fEGXK7uGCUP4cu\&knMuPUZ3lM1`'H_;OFHJjiQtaUm'GGQHQj&duDf%P+FJKrHtKPY,]j@:4C_7)c[a;s's;aTKm#*i!d!G7^6/BdS.*r.1D3n0CXH)m"U!]f+e44\[T0]%[XCAQP*6sWE&9Fk9Q/o$"sX)%6iorkVHU+=T/4DEN%aiR^/V,/<k2!&E43i;Kg.W5W5X/^IVPV6^Ah>L[?i-@\_QjjJ`%4-$gm>;IZWJV]<RX.IK0/!6DmRr<t)lD%)ajZX`ISHd3VV.nl]D`$Z;<Euh?\.lPWScPM8B(QH[jN7Ih<<.?V&,h5<c[l#Or%jl<eqdMhJ/jC;9)7s-'D6im68H>Q":/<;q;j%\C`Ea(^E0a>d:g&ptP6@=j,]9.K9jd[/KX;hj>A_`RgbgXVCg"Zrf^%7;_V#d33UX\,=`9BN:WI#B'#[pO;_cdUZ)(k8i"d<g]i!%r]qbd#&iuA*n'SF*h<J.SYeG]="c*uAam-76pSq&\M%5Gk=rj5#OUhYS1X^9X*6pQpNb@2\=*B8U7QiBmZ1oIUsX#ob@r["rT3C<%0WDg5$+4fO5U.Ph[LW%ilPM3.o0XL>Oubsg0U&BB:@]3X9XW;BS2T:_aN$cD`>-?7k6h-V4*9['S#:VF#pK_-eYEWb6P[eHp3F4!%_$:d)[jUNpX]j\o]N8e72Mu0Yo:K%8(T1Dp[bI#PRHi[1@"s!4g+ARGN>fT`?(r0_fPIoEs4=2npb%dJ]/UPgW:X<B7Urpu'3<U.%HY08:"$S_\QSU!:K3,o*T;sh2^G=nc[2n9@1nEbJX]hD3NWB1U15I84NTRF1`(p/YL#ugTkJSEi0;EHXZ[1^t"$9dflD;KBT"*J&%U[hNd<]\"4cmmde&i*PPTE2c#5>%8L$9p&j/(_BXc&Xb15UE7fd@F8B_][l'ieO6Fr[T)b1G.t?#(4Fng.,4XIe#Rk61gpV;sAL,%][$k(19\*-]$\2/Kri(,PZ\bh>A-d%F<@+neP`rCnB=?o3.>6&*Cet<J+WqSa=NIcf"s^1i%#">:&3.;C)EZUqFCq3d`@L16ODbs%J=3K7I:\2nb^bb5:JJg3_oGO)$"@R)lp<->+mqY_%.+9&2j#^,hk&6_)OM8;@oII.*pDT.r/jr?a=4b>aU5&-(;-X!&K6ODgDV@4%&,IcEaa)W:[<o=u]Z%^ll%dc0hn)sh@g#>U1WTNB@%Fk.1`NP,a@_$l94t$"M8NB)?#KTl-Vhkbkp1;G8uEeQ*q'l.^@INEAn&5G%J*u;C)U30+B6mQL4B3PJW(q#,P>B[&=`-+5=k1,jhZlR]nVRc0jo$RS.R0,\*q2UNeb3aQ].R^Y%bW]AM^%Ogmb0.t469N6B,RFM%&s%`]TjB:*j.I4Qe1?hVJJHZAmC0k;[%!&JJ6SsQf[=VcQV5TG4Dj*1>&7/B&iq:9h+f27N9_/lDX(i;>cMm]M;pA21f3qNKTs.T%RMU<?XQY=Y)Y+mbc4b-h7e)JR1'+m'Jc\j%$<[PR/<A`*B,Muu'OCoCC<K?<Q.ms$,:HVdb@`<7iqq`.gM)iHqgThBa\=T"9sVZ[%V:Mb@P.O4Dh#rJH2%)hD.K1MQX-=66!EN4c=((:u_,EWI9[1qSa?Boim%8&]"1pmE><QTU(3c*JVQ$'44]Q1s"1q/5(t_n@5[a=j%C?r+N+t,iSV@B&K+B;W0'-,6J.p%'KQO[5Z-c-L>b.mfF]QgCi?\1GYV`r>e_dmKmO*nVI-R5R^-ONiM)"9m$hP4ERlkq24l=Q_W%/ehH'\[@]>j0)mW&()%ia!t=K\ZafI'Wgs]/,s<LMPLP0-l?XXU[rAthXDq3U/FM(g1XPKZ&+1#+EXIkJWRDLp-fub_[-%B9Yc"d%qPuB+:i9XD;aI^+%j>X'8d-!U.B-(cUtS=PB^ZC:o+p=7.HTeaCZn8"h$J60>2Tj7B(.$&Yc*0Sa,<<PF,),_JPA5HK/W*Y&D[8&%iUE^m@KW-Ds!YhM=!%K(>C-A4"0RM7*/kuXJnMl(+@H]KFiap'6bl:TIdKmQ^-manl+&nr4t?2:h)s_!T<?F:X\gQLl`lf'm#a_h%4fPJdFAtR2Cc5M!>Q6m';T:=g&Wdms-TNSk2mScdmuJLt2<O^Lq+:4KpJU@q4*MT::,-$uhR<9)QE3K_Qd6c1Q[4tM*T&I/47hE]%LMuI`B[o1\0`\3::,8L=%+W-aiIQUb](I%"p-SR']$G0POW[$'nm!hiHJ!YM,NA_JZdfTQM!R;p^I%h&d]!tMrO^KAXT1'^5;VNl%40r8?<*Ss55Pt1'2X4,0'.!TA)hsr9?U&"1Aoup2BthsrZ8r!@d.)t^$!n%idjKa\:c+9S$:,Juom+8)I^2.%HR,b%02.no@h%f!%Zi;*$`FcLpYakF\.G!8Pn=9.8&8@9m.A9/u\b7pgY(MheO*j9t2NLt#68.[oWN:m7IC^&5lp.d;Rs/0p6\uIu-$1%"\=].A09ba5%i)Y`;7\=IM?(-Ed<pEJ?!SppWN:NW56-4@&[+]r4c.`7B@M2ImdCCK=Bi*^<!-7Do/Mi*"?3B#!L"9J_^ZlZ,`N!G?Pu\p#\%M"1%)t[+uba5@.M&l!4CcsZ@r?r\.CD2u6j&a-HCMOTnr%(qHi(0?aEY.[8G,^h#$W'6eDl7'/T%_YSE2.aZZ)VONp!+W+2UJZ+;CIf7%jZZLm:?;u<Uj-JY*_bd2ra'abNW2dqhIjmWQ*<hOY?$`FU/W5co/YGZU*&EFP236Y^G[Ulhlg\#dYAs-%ZP)*%k5@*m61c3*D5-i%b$3f9rW5Hfe7oNV+5#nY>;,\1FkVW8Mu;YR=+sofof>#op?<k2rCb"4$jMA!n!W[H'8*D!Te]aIXjSHr:Ao$kn-)L>aIUWZ`4m(]%'WlNr->rMF#s+Vr#Pe&&h0@^!r%%d7VJ`iBeLiU5U'F?6jB9.t<NP3FPi3Dj<d'kThsWGfNT*U3;(H8uJ(/2&CP\sr(I.ZpBjaTG%11uQ9la0Zkm/]G-^3a8GJ?IB)$[/_"LKW\G7u*(=V4SUE5=[(o#-U*b?26:WcN;d4Jm.VBl@!Q4n#Nf,,XQc"mn8ipo*!pL<p,N5%lck&e(n:)nM"KR0]#XDd7!sr7EUSm?IGhsc\<\R#W?\<=rmY884b4c.k4M#W4t8?sOl*,E9/<+27<Hi[M^DQ7N.H%BfEa@2:kdRP%&Zi&r<J5!?P_&@]2d1oBd<Edtq^pSumoso&V&gR\g^*#ZnNBSY'DH]boipf,[6)2>pO[l=7$Q>QQ@>ci2p[,;G?t)q7.5?"eONg,%7io?X@\QZ,ga:XNi$Z]r!D1R^9.2n#d453L*nhX.`W^)IKg15A-8lBfpcrKWa!aK)J.a$/;PN2Ah82Fo8\]n3&dEg]d]G[`$^G,@%=P,RQj_'FLI;D-G>i!i8Lq=XM`^)Z4Db$$T=6b3m4TW]O.X<MsillsIo9:rmP9,Kk-k*Tl.d$Da3l_.1o:p"2@"SV$EA4$F&;)8C%M'g<l8]:G_-YMg%;V4piL,=&L6C;/4S5uBU;GJomH(rRD)?4q1f+W!>#?.QKA;Lq0W^NNic)_CG2D8>$o,*;3_86)&rG$Ef9u9=3%KN=G=>_#c%iLZ`R7E%45>_5Wr5-5LV-9;SQU0(/icuE/Y<"$IVj'QKJ-q)tqm;DFtQFBl?U>=E?L<`gIkLV#\CHQmk=5&LKr=+q\%k@7HQ@]RrDY@3=c628quq=2*qrZa$6*=jEq)J,EeiF8lo:gQ"gEMlX,[K!po/)n=PK6i#L1?P<AWn;&K(-9']?Y(i9J*:53kQ-;h%$__%SV?e7t,@urRd3162b/tt,g@+Kan_ltHIYM@)F:.](#YHJ%-#'17DanDfCpDi&VB*IRgHZ0c#JKRo,u#B+T-QpG^T,Dqg;1_P%m./-<jAOrWDHi_m8>b!C)mu$OkPF[kIX#aF1/fXG\&YSVc($Z&\:1lk\nA)rmf&U/>AnYBG!;hk3TI,JN%.F]qjMr);o[CTmcJ05%Qfjh)p%FES0JpMXZod(&S[LWEkKTdXojsnGP,YOa(:3W(PKuBjm?XorI!.D4^1^klFL&*ZC#_67Q`;odgSq<=cHGRS2;6;fNNnE6%CN]2WBKZ0fCd3Xa2J0QspA*+\O47lUr]GL)\_lE6qXRkiG($VY?^o<cNHatm)l9I+E<K>AJKT",l1Vth=4aL>MbiT(:?KO0<dinN%R)g&nh=pU([E/e;%U!g6F8((6+Ffl*cYf#VL=8`WFY%Zu*3I[I>S]rfTlKgLC:9K[RR^;E(ZTsY3Ams8bbk-t*bO"[P@s\b\N@-D%^-2=u<%JgAi,=n6gsb[!SQSr.$?iI*p97Z0gFf>'j(jk#f'JH8CA28u*S*Hg^9mj5%ujddkI9cVH?$5K]<\oQ@+Tk/<,?oTrM6>p%`@Z6+D,D#m(:2c_Ern7HZ><n38nkPn=X]C'<VKOkP&o`,eNU(^*F.ulY@k;07k\n(Y1Y/bZ?9Z:Y1f;`h<a]Xl"3e>*50="=6nmW%6`\e^-lg?gF^Z<@!D]][[qRA7;"M?,X/NM&HeF+injIqOp::F6=Ra3KNe1Pk`g+T,/Hc#:]:*)=Ip9Y.mEk9h\_I9-9Y8`]#jP_G%Z`C.;3A%l:]Y_\!=BSr[^$ae:8W!\8nIEtoRtYrVDi4eSH4*QI<fWkPft]Le31[`Q:_SkrAm![9CGBt#I@\VH/aU.5$AHU,[.SZe%j;s=gStuoPl,2l:8`bC!rH@^VBKU-:S_d:Q?<a8lgq>aqSi/3"#Pm`P`I4WSC+Uu"e]+6QRAUpf!-%VI[Z=&jDa*@F]sa+cfU^^;%B;\Ba'K-rX'_f`6GFJ+nZYS`XGIjJJb:0MGST[J#Vq[b[n(%Q%Q/KFgij(GcLH6S;k9/4k)UD]U`h0YojgD1Qs08^O$7nCmkHb:Q%B'*^S%JMK"<dr-4#KmX0@a<\#]8KK0H]d9o]t9E<hc:>!Q=l[[&,E3&Sb\MUI!VnhO52D:L%rJmFcY@!IVPT;SU%K#hf?'8o6CjF%aT]1h!/3GTPlO2'aec"3OKFL;B:`IND0r7,G+>kA[>Wr\*,\g'I:J=SjH=SFDV1)]DrmP6d!4htY;Am#bc7.,mp<\]XVQ7UrALhF%-ZWpAR\FX9HbGfq3Qt8@<gWA[o3.Vhh0;I#NI1OH].-#+F'6se>KMM=,WPD\k4oulRU(/OcD4f/V-:H65B!>m?S9C?&3D[WJ7`]%%Z*37:P4hW8puu@QI'u7*\COW5g_W">@=Kmoh,u-L$(#<Nq>,MLI,ieS^cL;"IW8+1-MKEI9P*C8r>sjHN#l-jb2j(8iPV&';omc2%^Lp3iS"'*%k[hf0fm"cqQIZGl\X[P]h-BL;I=_LcG_VC*aBo6JY3$[!Tte's2YU.Jg@79+nAU?530Cqt4M57Wl*$YKc:\)M3o<N"%FN5lAa4&fXg#U+hG%YUc7/XX30tFW[h^+h:OL=:-'hhoCZYLA`GP:RUA5SiQ)ID$9H9.s8CJ%cW(f$stDsH+W`mqAa[8lV.2RtHJ%4j<,(r*j>EmTH!P+)8>p.mlOKd+sYH:G3^I2sb<D!?Hq*[_/$[nu#.$>&Iq4Md9HJ>RkB9Q3WuAEGu[['EUWmM\fa!`>^=#=$r;W%Mo/D"%:g6c9cO`\Q+p%a?lL*pG=?.qY6,p<Q5l:anbHdb_?S!^L`NnTUp#?2W5W:a9eEN/V'Jmso\#_=FU#f*o>h"7L$/ASFe=Y6%4IPa_4#A!<W6h=<n3I2;6-O@hZp@b$$`._7f?I;"-Qb<]5OY4((iC.&%Tu0o?K)q2mXY:rO2sNVr=dS1S4aQ*7&.a!bepTj.h>WH%J;$4L=i,]CH_lh^i/mX@SO7sc\01m*"->l$Y\X#gbpS88Y=?+!o\.31hP<+PSWs$ZHgskSJ#X3+0HtZF8;(7`Fs5g#\,[/)ih5r9%l0f\uocSWJO<\M'XU,s\#Od(no>-3S5XTiCI(KA5]ZDjOhOQi<Im`_C2X!n;;D+(#;r`;?Os59lY!L"up6;t2B'cGNKrQ@PN6^kB%_0W.<ocmQ)N]J;=:(T%d]qO/=hmrKJl(]?C=E\K'H7*IMEB\k:4o>A_CaT%LS6htB)A=*i:f?nk4C>kdi\'Lm+Bo&XW8s<n0)9eJ%XJEA*l2,Md\3?J*PZk+Pni>lXe(]ttFM4/>).]&PI5P4p?0lsX2iBH&IQfd"Odk0FPVu$m=-`p&VQ866b.>*n?-I2i%$(Qk1F?N.%R+miO=?g2*M5#"dmd7DPfLS4jB?N*AA"TLZ+/!k+Qo6S(,qbcl1IQRqI[cs8H<bj&6+5"@[otFt`o>jo)To@G=_V#GQ=W@g+G28j%Y&pT4frCKA[`q83a+dLN'(obpbJO)%\.:s/)56%BJO]N+V:l0$C(u?#qF5Ped9%sMhB(kuGk+^mAg%UP.*Ta)[uY<C+Bs:oJ,?JD%7c\*SX-o"l.`->r;-BL4Q<UIOV0oeY,gOOCVp-=:S[:7G&7kVLd9b5O2C:H<1U%H2)lQ^]]nM"/Dp#PYS]2hjo<[sGFoa5=#MG*G%nM1](O-[nuJ4-A!/RC8c$O&D!Brg'7b#I(0M^YRh9'54^1JQH1pWu!<O$:Ck4HI,TKt/c'A/?jWf>p`XF8EiS`=`!\0qm6<h8_lo%GNZ5&#Zjo^]N7bKg<p)%*#[k[c"sZ6mp;!O%[uWVR&-9Qe@Doo:cWIWagp3^V;.o<V"d4u46Xb`1M(T#Dhb(]p#s2hpA34_eHj"i%QXQa;!VdJIN,k"@fdOPrQZFZ/D>e;'V98/[fYYnU<*(TJ2btfmkRU!;FfP&89k5ISD6mM4:'YC.[k]r;GL&B.c;E"^PAu&qM[AbJ%h<iF"5$.2:B]F!Tn]#b=ipM!dk]$JsS%boi94r4NIr^Pta*tOCe[[<0,o7MgX_dZn@)l,"Fdb<Pb7u(iB4l;KQ^\ub2`_o0$P/6p%eBUMe%XqX8cFmju27c;K$(G21:2c_'R1cZ*WJTu:;*I8clbODs\b`]$^VB>I0lO89!Jr-ekl,HHZeMUMLV^H$>"Co&-bM4JHiLsj%HtgNYFOb]OnLg8CEEh5LP#Hp?jkH9;3>V*@#`Uf]'08$5@m,)g.bVI1hlWN3FZL64<d%6qZO;&,JSP1[b:*J9r.<6k[o[a2h1ZGo%'/KFN_T6aQBH8u%ff<hk;0@Wfo@$cr*LUDCPSPO=YI(Jc;TG]A5B798ZNG](Q":e)Z)R0j9_nA"c/]YejG0Y!be%$(fj+&\H3K7E%"nKpuU7s<39P!`.$iASBXu_cqde)hM@k"%n:?r$Sf2&a-mA%4gVp39Fou2iC$a@NZT4_'qmIR\1W_eFZ/PiLXP&?Tl)q>>[E_&%\%adJ700+agfQ]1KFmj,Mb[JlEHff<']ai/96Kc>L8;3Eo0(d#jsO&"Jm@n`<(PAYTNo>d]gqVqM?S&F1AXK7P34i?WuXDKolI^51_%Lj%8o30r5;*LD4i/0CnOUj#!$MW[K)Fo",ir;?J[dQ>@%"S.3XoPRCkB=Q--Er,_rR2a`g+^NlFF^]Lq,`ZrM"draA1!+T[,AG&#%I-6kA-ql90J_snE=Fj,OS9nMNDMI'R&LIhD0$c#u@Hq5T\$Nf5DG&>#_hcOlo_R#'fcbCsA>Al-gaRh&LNi(-f'pr4L81@J+da:E%;b7dG&'<ua@59q9\\#`#@I!V:'ScsD6)8SGf$X^_>c]gKE[.o_3EJAcS#u%&r/IA'4$mVdYso;U^</W&*GH\deCU%N_p.Pf_:pus%=$g?naR[4fQ?6Kg&rS,q>-W/[98(,>J0<peS?KW.0<[:?KS1p;\a/88[G[=k,HT9)Ef8)dlZPe/fLW^B)>W7U\!t_scHFXI7Qmf[%B32OF4n7mYI7rZs;mq&N9UO5ICMN#V^"5%J6'fn;3;C1/m9nJ'[o4X9q+#]QHACW2VR^LTrfTKNI,bI>R9Vu6\Z?>\o)+-5WEoZ?%Bgs.Qot<gIg@Oh1qc^8kRrks*EZU^rdTqLkC:Eo6S>#J4n_B'UJU_6$+'5mg2O7KA@8BD.ahCZd?_'/ZBe@Y:/^Ls\5=V-qSaE>a%c'9B*(;q$VBW@4V]NP2!kh&K$[*(iplU],4MlUU(qHA1Y#O8*[Wp:%l"8CKjm*4E!`\_gVoHNYp**g`KUnocDiE[P*^OU:MR9X**%Grm>)^ZJX.,7EQ"l[.S-\EX/E2J'83juO/[_gL)A2g')JR84h^<pioKf$YdhV#1QB"i8R\nn.SZ]f\G9?6l8=11?0%53hr;lLm61%=^/2-]?%r69+pZ##XTq`anaW4ZhrIF]F:D93n:4iAgLeK$b9c2.JmXb48Y8b&P;!HI\di_UMhT&o6)X,3*&/_hH$dK_e.Sk8t?gn%)\GG2FAaK]RI*t%F65X#S1h>2gf-Ml,INIqHsqE#Y(GZPgA.K:Ye-F]\NSL7;iN#%md-fc@,2l6U'PfkSe:2gpe.nVG:Ku.Po4T[%g<&^4f&[aI'%LfDq/.I#1p_-2%Y@OhP#ScU4Ni%X8F"FUk-U;S<gsWLW$0)KL1:??3p<JS'A9KkjUhX+8Qh]t,?j_p<4,O<P:?^U%G!"BfKD-!n6pr,ClO'<!U8f?\16F)I=L[@/%(H0.%XNa#qr[E$](2/YC(h7K.t+g'4'*g&^e"pJ^6a7gF7Y&GcVK>e8g,]9?0#T.%->1e-q_$R*hs+N3o<^;CB$S_XbtMYs553%mE]$'%L@1eZ%J)Lljgc0D2`cJb<JHFBXaPI1HBfhgbqa$Fau7YD-//S9o@fGX86=tq%eb&1niHf[JFO\EM:JKs07W5E$T5GD%X:WEaI,oiM4i!1ib!"##BSdjf0h5(.^6m4\CT:'=\%A2%,!.Wq==P%](\dA>]D74DX[W<'%V@.L\:7XL*T;[<1>:H3;&DYOZj32t\I17/?]sKS]rK5@&-FVNm2`('rXX)_PN"YQKFpRJ.AoZFcK#B+56"o"O1Ncr0Qrs0H?#4an%UQ4B0j`?N0N'_:9H$^$K7O\:VrPsMtpinKTE]2Vl)JX5=>,X)m<9rVHhF]).#PuZo[+.<#^*N23Rfg96/u>Xef-Gb&<40sbZGVOP%U%+E@jGQC&RbQK)G#!Mu*g+%T5+<4N<9*(J``"l#OlH")&11#nfKnTf"H_;K?>c(do;TWMZBrPDG.6G>E*Ci)l5jSrRDN0OVQs%*%Qh=TDGQ"n6'.,m/E^HRdPC.gbknI#jEde-*U^cbN4M8*u+#Xr+fku]DO^F.TCRHG\;GZ\2Zp(%0>?XcW!Z)^DH+aQDYiJ5fpkCpM%8Xn3)Kj8=H9D"R'QY$(0]qY<!l"GNoZ@"-0G6[^(_-28ZIZs,a!9KL<jRR2+mP[4%^=Bk@Ttjj'li*iEcXsVlO-es<El1p:M0*`[%hg@Zq:gBFpaG[s0@NO2J+]A,5n8#1<T-i/:#TV^Mnrf$13r,bW_D6\pfjSRq0d],f:-A[\c"4A>T9S4#:";:SInET35/(ec7ZH6K%:L$-9ZVQS8=gVXWgI8n'/`!*oqK/John2VL>YdH<kp$_['tY]7cG?B,lKWHF9DSIqo0qPaC_Y7j:NHt3&!L&q6keTC&D]N78_@7b%#ob(2d'P]/NVE-5#iEr?1,AT_H=_G8EP$2(kO%/>$pPp;p0N2g@m%Lt`6)nI88A\I-Vc>7k-NgKUS^.p[54+!50fG/C;%X@C*OBZ%j)FM^fdGm-fk5Q?[F^c5P$Lm,mKjg]9b7N"/>O2`EZUR&Mkf=r;lM'>L=16nlVu-c52U*S:1Q^T&BuDA=<dLCZ:m1Cj$1*P`5Z]D%Ma*XPSoE"-CV0.RSL1PC[G5^V^$noQ'uo%lM\]I]-G8&s<\p$"S&sIP9^t9HN$[e'6QR.)LGL_9;*&G[,J6'ag]0_&\>oSD<KWO-%O+#2\-!STlY\gQf;P9@]IBb/&bBn`\s$.&^qpC1?TZ@E=D$Zm:jd+8,]@g1?qaU;OYc<p7:=es-X7#-&X7q7<G'&L9U"]0[nfco+%:b1e:c22OYeQOQS2lc&EO6MG5UJu!2Y21e5WTR$"[+*?oY5dN_-1X?m^hrqhB^9/9BRF&](2!:tA,0eX8RFRHUkpq6nHLnR!^W$N%<Um+J]5h`$$r8cWhhUB$?8mXPMt>uHF8)N#iAiK>1-Dtt-@:;uX*K-F,nt'i3R25^l0,1ml/a6pnog!E\T"'NIs]gS_nF8I[*<gc%\!(E"(UCfaPHUTn;sr0QiKL)E't82@XfV2jrToW6SaPk0`peZ/f%PIu=D("9=;lT3s4jQ9Dm-Hoj1F\ZCT2a<\m7?Z:_o"R.9nAu%8nOdGDQ#dYbEq%qcq//Je!lJ`>2&;ZE7C\EXh0;?$SmWi=uPVoH@#4b=ksOVZor_JV5#Bn>WoCYkCH35(7`sC^78IY*peSTg?LjQ%:<e_N%mP_AWoTGQjbQL1d4o:ua[Jl5frK,c6ckstO$\%OP&Dt5+&qro6RU\,D<qHRAbQA+S_W'Zp7_P7f(r7n[UIVK*q4'+>j13[%B9IXS1j[GhEK$DOS+^fA12s85WP)0J8]bgqbkWX"D;CdJ*_/o8G]01=Seo%2LW60)mujUGOd"K,:FD@bP:dAA\(ZbHmI3[Xm5m'2%_r%'![O5.[e;-]@Qg)V6Gp@]7A,:@lH)W.X'VgDr;_=B3moFWcCf2RoF-M]Pe/B>d*HNfAd]7_Han`s@C$8kn2TAcEG0;OOTp'@6%3Tj8th4."GcbIguF$JOP"NP$QO%d#1fB3^\1Hgq>hUg!GRAN:t[@>!(GIR9afq_]kWPD8a`bfdGrn<jm\(BrQZ<KDr_^F7YkrQFX%7433*K5,\\S!9G$J(gIhpZ>`!Uc5X&amOL7I*s&6DE"1p)\/@%SBL.tALhf)-[XG/6e%o7j]o?;_^F87Nh2R)B9mL7jS?O'T&6ZW%,:>XH.c31[-J_TQP&'<d8Vb=-[(4kJFf1K2"n;3?l!<AGY9TsWl%ho\=NYL>@2:3o*"2+Us/be"35.Tn3pGJVjaH3cNUkfQF4d9U%j"TklnrVVNL''DbVN+o)NjceOD70)$UMS@KI6)=]B&/lFNfss4X+c\]L7]qI[^pcSJP#$N-9YJ!HG@X/Y*2FY>(K7X(E6FsCsk7d%`g`4>A=.Q<l"5USE\2^9DYXUWZ'*kVfmlYX]f^F%3EFau%`tN7:(Y(Kh!7't$Kj10RgY=pajM`89)@1LB#d[SbHi_ErXDQ4co\3a%5-f4:\Oe.(*qgp,Z_0:SV%6nr?IosRjoYU4D62gTkbN!,]=WO]P(S12Bcp1t,1L$jr`/:6L:,"s,Eja+J+$,@l_Rc@r)[Bs>ae[!%*;+**+N%O)qpeIoNN5Dm[sX:4^\>eNf.5#3\ut"q]`e=\:"_[91W"T09YO7N];6MulKaD72gjRPrL-XpMHe+u^YUIgRC<ZY=RY];%F3;W#k]#%To?-=ohGi".VK+Tm54AFgi%Mu?X#k.(hg6g&VK.,D]L%)W?8LVR><.1.Y(ch3&A-Uq0#l[GeCXT?KpBhLrHbDIO4q'?%^V22,Qe+#5@QhL+Ya*tpVn&a5?01Kj8WW^j?+IH4?16AFNnq1oq3`6Zip4IGl98m.&\gMiWp,APHmHWO:Xkr1OmRt.M[ah/9rg\[%>+/Kq??[a5Il6][Vb>4(lR7R'mDIo)l0Wos<L[6ag@YE6)P5hk?_tLA.A,1j%PJdUYMQGc@[Z<$Z)iLNPtku@NV5O^HW33ck)P!B%V$Z"Ddp]7(;_H\Onb%U]A0uf;Am],Qo2hjCleM(/&@<q_9R=F?aeT_rAnCr.@Cus5dHQ&,bbP"[We*e'5gR"2.,Vn5;kI#)<\D"'%1N!J<Hs65=IrBG&ZLTtLDUD"Xm2R]!q?UtS7%7FA9N!bMHB(DTj[m]5cuU+V8`<on>3"l\V[]2=,[X`2S.tXdLe3G:9D"a+/<@o"%26J"s9Y-@.V+F;n';OE[./f&qFds/R,R.Y<rg3DU)c[u18#G?=NKZ)8;PF]%o9#62oIn<rH=3p!rVm.qe@<)HS<SQ5V?J:e)OCIu%V#SM-62E6'9j3RKeCd'toZ:VB]qS140r_Jc1<"[kUdotl*?&:`N%WD\"lS8TVD%Y5IX&W()#^D_[i9*NA,;;\UXVWb[JX&Kho3ia%M5EF]P7\Rn_JpK*3(dF8CqUe&Y0NT;F5i6"=]m-!#,!m9g[m1(LB3FS)NFf]%jr:"]SpJFo.3;P[Q-O3J&$VAa?hSMi'=@j$bB[d%]*)qG6fY68`n;MLQl'Ic'J:\gRG#gZ`?h'nZ>/g9]ch5o//^cNa4VPUHOU<$Y)@:?m-T>]@)`F:)=m$GQZ@6hrZDKWVJPp4&pBuH%-"9_m\N0KkK;TW"%QjfSGPd#?B\\5&gEGk4U&-nk*kX`8j#D",5)g(KON>Oj@4*IqhgK^'0:qGc@Jahr,M'CGB(-*rlu-Sr#(@'X%JCS;:\Z[,;h[;mINN;49@$^AZNa-jKLV*S3aG]iugmk&T^f%lHXJXlqoe>8/&0E\!>gkW_^q1,?*g$3>2E%?S,\+SWHDW&$0>h4B%2:q*-)TH.R%gG*PS;+g3pZ$W\MJS(*8ugNsge-"pmd,CBCWXu>f#5,o5Rm7]'@`K_!bJ[n_qO$S:!d0kHh!m.>tuiXh_)Wh<_\WB%cs*K)A,=3j6pOfI*E.,)"pQ8Ri4_S]k!#5,/*5(0!lH"/a](J2a5i6#p(mr)Z[B16F6amTGH/E*q;15LLpRnBP3D#l:(g]JDba-*%W<atUaD89@oT%RA`,WX9D!BFXI3eU%DhickkSn=j4iN^4YA6%:?-6)XreC5UHFJ0='IJP,3tgSek=FI"(@DOCDrJ&]0'OOk\njmA%,q:W9%UU<Gd6$6F+B8lVV1,<mlXHZ:BgXJ29l>E4o^q8UHe@ZUn4LK"H(5e/Ehs3sII1p-01i5Lrp]>KoV+f"H)5_,rQgPHquia4%@snN=dFdUu,1&'#`Ak[6Y`s1er[]ZWaM-9q_-Y=JT>W;6C<ZtS1R-2p7Yc;YI)#S;M#$/D01,#>EU*DT+9j[idt9Be(:V2'<o6'Z%'iB3h>YAG\7?X@*8B9&GOfI?dG`O<dcCd,4_m1.YYmF#0r)T[JhaY?A<c3L"A>_)@odIu3OjMLrQ?IF].EVcObRW+.T(m&-W#S66%F$DmF-;-*_e6W=k"lDY`omKq7I'"]8+bC&GqTC6oU;^DoF=t7"l$r)QRc37Q3.pLt[c(7Vo"-TH*8QeW+=$kS&sq[IZcQrg[g3]s%jSE%N!Y[s=272+]I=P1)-pTtj0$*A0+L.^!P%6/$/?1N&/HfH35QIPNrAXr<FXo'F(`HdRdV_.QP96LNTh@`O682huX:W<R-HcY!%G&8_`;.n=\q7ut`k3Cttob.-gZFfR>jhVU8h>$O>ARH[[aBh&T`VTWcnq)Ydb$JKOYP<M6'sDK7'ou>BL3b5'YV,0MM^'GgZ6ab"%o6=h`]8rQX&Z&r2V.P=q(6ZK\=gBo-1@E^;.=Z2=?TUL.)l+#=1N2Jem^j+Y/,L/CU84](1<Xqf`eK5f_bNkASUbPTEP'Pc]%r'b%(n%+J&hrGj>@5_]&n/&umVB!4,6a7,@;%bO9Wp#hFooOf^32CU_jD8m8pg</\`4L'56JO*1Nbfr2.W#61;]TT,TMgV1)l1b0?kM%%,Q-?J<i0kP_C,<`WoP`WaS_e%Ht^/'VCru"q`3Qs2Df<iZM!l:!'<@!XqrWVYlGGFFJ46L-d-PE&('jQ\d7N<P%?#_bbLAn/!aXb%L9s^p0R"%.@4tEn]G"]l?XK;s`aS8pgeLu06O*FX]esW)U%'dC5.EFa/=P?1=5hZ+VnRcQhW[h^I.cX[.'m?WE<#nB`gQ`!C4a/F%*%1P:gOB@`_kH4&8JgnZ(":XFo&f&5k@*<>=HI47[`=NH#.'emR!KRMXH1gXgrCdchg6uP#q_Gj8eOAc;)G#WR*ub5pUs^#lXC8g%/d=a+o-del\\t1TkDctcD6O0b#5]l='7(rBll.?Vqb@*F]+9qs:Jdc,*:&T5p^BTD;'ZM.o8A$=SGB[qM>"XB3"(j`rPD3;G(jF'%\1Ab,Xl7?5q`0?UfAT&pPemL8fMqs3B;W^-%]s^\@^#qm6[mYp,smbO5$0SP4R_a[N?kf<rd?QSLSak2F[>@]V!g/nRCR(Pd%uL%%?"Z,S0<FE%7"Lp.QUQ6^8sD*o\+U4OkAq!<cU%]n`!nlpIgtX=iY'7i+7%)Z$R6Us6!dY1fp-XtT@Ne5h!cM*oMIi4%s4oAZ">.+%PJOt+^Am^E`X>.MYl,/.*>r7+M9!RB,CA=``Q0GnO4@m`q1]/!*(Tgj?)[jQs3oa7%P6;bT)<SG\2Z>^i.fSo/I':9YVEX2=ia;b%<p5baL-]u)mR`(s74Y/t:jNp5b54Y-"c0Pc(0`X)(4!CfPX!I\^2LuRFFEos%5I0qPY6%[kK+6&WC7B\bJ'ihM@h&41Y/:0@RSQ(%@WoopA(&el=31GPlA;&+!*]fK>[:\/@n^kdf+*2oH5VaON^dBZE)as'L[%@$M7/,S@^241hi0j!Qjrap8=[C4R>>?K%eU;'SE.KD%>M1AFES2GgrISs!N/1`%B=GfJ72ptka/XI`9NfHoc\-'LljRP^Q@kN`l?V>0X0:U?Z1Ya,l0;\0/;LBX#$k'jqeQb5S-RQ560D6d%pf\/5rsUs\<e!IH?2k>ELhsm<kKqKIc(Ga'JmZ`qMjT`?d!=.3CH6M81[)Jf_6;tI78F7.FHP7.+3^GET0_X)rQjZRp!99EH$iuC%U$J=:7kGunc_9Zs5puJjVZnW62qbECQ[Ut7b6&*.JNoZLmiUm/HV)(6&>b3sBdZr-T\m[%'lkeGa\eB%S#fur*=SiZ9CLj#nFs`?%Ddj'3;i1s\!2K"B1\3&#]Q-Yi)P/Te-T4/B%0c[+5B=d#?_=tk+iF(u(qHSr3<eA7lHO\b3cbK,4`X,H/Q[AYjJOl?;W`;bPi<kQ%?1((R+;*;7\K;'=$MT<B6#pWqNa_13@5bjCp"*l4in1<Qep`Pf<l:[!l50g6a_pX#5mAUH7G3UZ>C%IG/[iPC?t,;i??7iQ5mB@i%#ZsD[5s3C9Q6IL`k0IZ'X4'n5h`"X[TA`X_"GDS]YrE0<A('F.XkWja@],S/7d`d$66iaE,anK^?bV!k,P]5AT\G)6;Z!u_bQfl;%i=KPU3PUtm!s"OC+\ouF=Htf@E&M&EfYB$lVt5mnI!=EG*9e\nI"Pt5);/]b>EUWDIWD8)R040jPkLrNoo"Ac3"AO-N6[D$'EeAt%4MGM#H//#_o(^Lo?QMlL2'3YbK^Zr'/D=ST(eS<JoGMI1^<O\@VLBW*K$jR)JscNpM"qLpZp^]CeEM7"OK@j`)p-os&?n(u-ggKJ%4tp1n.f1[7&;(5uhJG,>k2Z'qQ^']W.<X2GhJOr-7q>K!:%TN8B^cS6D1<6cT9G:e#]Sijq6L0!.,YsLj"E`tM+hn.G[1OU,8ec,%$#g;JNL^rE'6sQs1-T.V#YL4C]lIs>gBu#ag26_to)U^)&sEXnr/fUk'BsLW/rug27V>-.1[i8Da'Q6hkJdUg-3hY'n_b*nh?b=h%d!.*$IE]>;Bt9,DNJk5%oN>(Q77P`#@cJb?dRPiDrA3e(A<H,_Uqq>[IGj1qaK0K8()]Y7)AE>qcQZ<BNa\%f'W%[f/P_:Rfcie#%j4iH,aB.-qL'T!/2.Pq3L51:T]XIc]M[Z,$^`k"K7R!&k2S]V?YfML[mr*]270^'h3"tZud60J>*2!ri3N!BXp']%O]u"f2Vgfbf%GGCQp0hPR)q0Ll$[Dep26'3X:'b,TYb`5F=*?+s6;.o'UFi/To9K"j.*U.&sTaO0c&hgHVUNOJ#rF2-qpC0-Ej&3\7B;5]U@]#6G%7bK?qa`Z!#d"/Z-f\;c&(22c>d$%)U"s?8q7X'.K/bSrEk/.XV,c:"Yq/@Lk=#/EPkJM^/6M3_AE.&p0^G-hulPZ[Ao&4%j$[sNH%:825r7bi4N_auRaVk6Z5#e>]+HoP8%qJ`H(m!Q=:d#>Km\U67V:11BK!J$-=&*Lh>nG:<'@UJ7I^tqEP/E_r1Neo$6%7mB+!"`p3%LKCj5_4j(R+3=4<M<2#-T<!&L3tcT'33gV0o_7k73.CPrZb$P\i]iaNFnWp\UnO5GVLK'5)!M0S98HX7eX>>Qbl,WT#@P4&$ZZZ#%$)OTG:M*W:8B"t[r`Gl9POGbo:/kAa@#idXoYo05%1-kG\24[EKATN8(ruI+2<:O:9DFe+*B6eF?+PNf)]U6>BHJ\U;[RU&;ds?8%[AeW&%:jqh)]$U5MlTbM<N%&Gkr:MJiF?uri]Aqo0>9(ap#:<R;Lc?/91GpBP5LW)<&2`XA>I'jhiX$.j*X?d.cdeP.g$f`^#hO5%:VRD2M@PYK$=:XI<_mZV[#%Em<Rj4g22n"3kN?<:ffEJ6L%AM=+b/m'Ur)f,"935;E3VN^?VZ<=ouc,VP4)"sP@jVeRJMu@_@=J`%=Rs"%3(Yelm57cuHu/Q)cTY/;SoWnm?pWbTjjh$J.j=V2hdT&T_-la1h*7(uR+oV*%*1,)-\f2J989ta()d+IF+L3mof@%YWbM.,%c3qR<Tb#>)?k/=L[)esC[D"kk=3$\\SF`>lg)_F/aY/BE*KSnC@ee&!OdC6HP>:[tG\1S[*M1Fq?OY8OhjqQXiMXRLV^W#QFpS%%%_o\Hr'==RY2k.(IQ,]<+AF=7'-bE+G8Tm1#:h1F7X>BPcB7"[#+[:MB:Ni4R*'8V-a?,mjdI4WU];2(f#Emokej76Meu15R.[]RG%f/LTbA(V4E.shYLUNIk0%H_-mH+@d;psu'I'hA?e>!J<"%4&P;<R:@`-8f.Beh:X(;&OPseQ'@p[q@"-;C-h))4b1prjHeF(nG):%kVMIXZ5>T9X8T[o)OOLLYT*QrC7RcoGcoq![jD/h$J..le)T?\kr\du;ZE>ihn`td:;;pDQ2eV4n*Z2kBCc!(rXL7lCi!q,-]eOk%0edjnE>Xju@2Ng4%JS]QTDe,cP,)!f]A3seHgWo#HZk_S=jj'A.[<U@:=PSk,>.D%I.LKfOlMi'#bl%n6J[@KJ`Cj"/@GFND?hH>%qe*>Bc/`Yg.VhNbkst>^UtTNJCGJ0sX/k8J2,DXHcBPeZ4K`-<j5^oDX5h>J2b^h?1/m$nRH,]"]!EapAofgV0A=,X7gA>VNgN40%cVrAY^/n'k6uM#SeH(ef`.9!abTAXT61aT.?"33b\5)F,9K>D*Lg0;65Ap%;=pofhlVc"Z3S`E_&DhNHHDir(O3*l/`/G_C2r-0%%FEB.\_g9c@)qpm^)FsLu)s0dPo"FV@hK0"nHp"bpSQ_nlD*Ej.HFPoiYfhfrjC@bXgXcf/=M3lfS]Jk;9fIp[qWQdX_gL]^/B@$M%2o`;h(qo2-P0a#pA,X=Vj\7]#r5`jmNm4&2(i(/g.XE@Y\uJE_9;f.la5frRba4@'3KDRXDV4g9Rbm)oVAnYj2_+.NiP"IcrPEn(%Dn68Q/!%N9DO<*5d:[9fgc5V/Z&-0YL<nLlHd`FN7UaSlSDJA*)OQsRDK!*pHb3r]O3=#1QnR9_8/.hffZ0J!=9CF93=]u=@D6i9%3?O=M9fL:_Y1icni_;AUrFSG3RZZ'=YRBASKYr+$L\IYbkYetl*m>k:^&VKlh;c.(]/!@(W%IEaFJKk@VK/Jnd89)ep3sP%#Guum%[PQ$+2cR@J;SK_N$-FU>S$7CV\oBoLl<WcMIT\0KSu9=.O7.K@lAQe<rcr0WQc@Z^:6;JndOqeIa7ppePKqY@brdi*fpI'=2uDsg%0(%aSd&H.=/@1?hi_T<@Qca_)q7[<nM"]OE9qhh2RHEp&ekh,sF#V&;AT+<T"5+o"6^'?N8'tU9T&u'H#51W1G6DIcVn"mpII]d?%m\V?%0Ka*=43YjSDkaiMK@u8[F#QY3'3QJ"36g7[ikiOBE9`P'T[&lca6%%)mEU5pd3rAL#oqYP4?*OPSi[V=@dN:MG_5p@1g=a#%o1:L%VtP>140f1l[l\r_b/6rtra'<&-,RINBb.b$=U.%H;)GoZU5ZYI%Y)i*P1&L)2a^N7*Rq>E%-iQXD%/ohs)D1/On\lQmF9PT%n]711%I_>!Z"IcuJp%Xh;`i5#$/.C[DHC^en,>CBT#?7/RN.M=nTZ$hj^s(TL=n_M[Jt(2o9M5DgXeZZAhsD/r?XRBm+b-D2DWb"%8B\\:?RD46I>sc#o=YXf:d<e5Ul3lV*>q=m5@$Ee>Qo5j3kc#W:Q@5`iKHV5#T24k:VRr2;)P1U)s54\cl>F*cG:M=p?$muG)jJ4%F+,fhp0l\nP?P#m<Lqin)o;dsF8nGB$STS-Hab/+8+e6m9WTI[g`=bHCP4[NCe,o/L53ih2_o<ZjL@;2d4#t$Npc^&8VXj61?BP0%T."9n47Y9LS)NdcRIUiUiGM2PR4?85JJqH6T\4[D1>M9ApNeBF(1a4=QJq=\%"u6@>geOtZX;KbCht;&fWem\ddoh9iQ,(:R-i.l%^)%%JHp"?;D:\@h[W?Q2g1LLhld9tjpMX^8+B>2Ijg243i=>"gKTRVeNGFR:h`eucjuV1$4;iX!9t1Yim#:V@4FeB7G_@*eM2>h\%Uds)6B_C24Y3e&UInsH)3.We"p?V<<]5iKK>gErK`&.$kq.=963-=2OQnHT8dQ'DSgcq0e.s,L,'9e;45,"&'qOSL)_Suq;;j7*g%/jFjcEtjo+PE0TphRB95g!t^S[amtAEJ;EPL8Lt]R/MD;f67asmW%lX*EG>6G9u,t%X8F&_T2>gfHY=MlZo4"9h5l6%u6s30DkK9%r8YuIn&ZKLmI'>N+/d(Ln+ZebqY!(ls'.]A^TmPq](K>VhnDOoet5uej>-noPCHT8BfiqMAk2=93Y0t:GG-+@k3h;uWL8ldGWS.I%/tU\%;5^t:j?AUL3&cq'&([TJ')Qa?n)$?Qj@@J[LV&U:IWT>eN;`_"`[K`ZpZ(hK/O*,TX^0D!:]7u+r8DTr<YKlBqs!K1ecC91%\^=/s0YNfCB:OV)?gZ)dhnS='l%e$]odD3#=6'5;G!dQ'&,?.[>^6-fj@@O6cF/4`El)$#q9c/Zq!?_fO^m5#I<+GfaH)q&qWe"=%C/$YaoQg;"/Aou]h"<nhDbj2Mme+on0Dh&N:47V?j8$B>Eq5YqQ&L2#h8qC.IQN$b)\>&o7V6gjcdB<"F(^"Dl1^Nbe;_rkf@&rG%f:\H\_osG<Qc8=jg!pZaVP+okF!G8qQR`:sXW$"A&9mG"MMLl5=re]EBCa7t.he:NNE#'Nh"Y3Y*6bd)j?1sZmZG01cAfJA*RlTV%T6pljl"O6uV!Gq<%Uc1lG'l[K]8X0>*9Z=)+=f&-dRZ%:Mu/s<:YMZ2M_C-(^K_aqfU=tip0,MfltUDk]6\nc5W\&T3E'f86TEd9%$\Q!^%e#C!j0,B@n'X!jP?rcX*6TkYMt;]]WMuEDL?l5WU`VrW^dC7ff2aio"aF"k1AUt\#41,T4$)'5*&(p`BKaS!O`jnAlGpV=%;W"UcG4422])046)Kuf(o5=6rm`=_njS1?%:&O:93l/]<],D:i)CB5n0`25VFosdjceUP@0QgQe5m?;B9tbH\\SZ#EZ\,)cgK/9f%N,4]g!q$`bi'9J,lN`8f0KN.faal&b:`?OK<3&+$3<I?[4N8,?k4aXPjWmF^rQTbshG!:Y\MMH(BAdBAJB%<Sma=hWM*.Z?IC&-2%e1Y&CCi"TiT6-/.q!q,8fR>K?#F_oGoB@6*`l:!6m;Wp`.34HB!N]V/%Ws"b`!8!:+ZYc'i1rPeqafcEGQF+e)=IZP&:O-.1[8OD%5*QjkeV>kCJ:"ViNLH'+ACSf:U5/:@<!U6A+2C$G2C#-[-lM]6o,lZoE6*Qa\daY5,>[;&3(,NI12Ko<Nt"&ir.:_l,pV0J9Zf:h%$[6tiq*o,XN\r9CeAP$j+()miilU&D`*\XkYKiL,X-3$J&52C-P4J!M"+O!9q'^aSb)[bmjf?##3HY!N:VP!Mg!;O#9O>L(\(h:!%6VWfsDgtQcj2gQ,Sm9;P)esV(^B7Zo*\sqVpoJq"M@DEgYM]*U%G/E;4KmYhANH.0:cbf;GVbP3/Vb^tlSm[$8o`$!jn0QCYhqI$%r*l&FDa0f@U_it!H2Yb;1KCm7bD4F0<tB.%OkV&OQ:(9?NMk*2fbk9`f5I&.h(`$1%cm:%^N%<i<ut$*O6i'TD!je<Zhj']^N-Wm%IcGY.jBcOj8ImM:CZ*QbrJ(!GS9@Elk'6W4U;U:MjPu`^(O1=.^LPF,[u^.D`;03%am1n"(%E/%EaHMl97u)H_n"mFoD7R>1Gl/i%?jrdIk4K\^T#1?/UZ_;KB@i6E9^?`K]RJnIqB_2rUZV5"Y#</*pHs2%m5*m5El;qMo&+fl`b4s+L:pB.r?cfl5'gPMnZA%'Hq3pX%(nK4Gi;*-XPFR!HRq$AC^Vfq3PfV(d@rrgJmpUTE^X;eBKB;bf\l[T2H2Ya@o@[X;LjAsaILY-L%j?oCc0KRmC&BZ1rC40bo]qWX%Y<&lEpf8`_a*3nf37&#[fKL4X8Y&FBBD">c7%GKHrT;.4p"T@!1=k,fA7!"QH_h`aqI5`?Dj4o561ar4Q^RQ,g,*5E^PVOO:#Ldg%8KPQBg8oqhj#`b8F&,!6,KI/0P1@n/2nm2moc*J%1dUL#KBDhGYLcAbpnR!E)s6`Kj:j[b?GD%W%U@bD`47p.?GH$^p8MQElSnf#%;pEsWo(l?:\L4H8\9m<C`\fTVhdNVl&!kgc]O8giUnd,G)^cK*n"NPFETHf)1,c0Th(4R0YM]*k)j84%+g9eU#;c"T4dNa0=2nkF%X5B'MT@\"GVK5_tQG_hW)r2esb9*/>pY\VM2tss@&iO-q<-Oa+L4+Z@RL`1H/.JV&!?9h<[>c@f43I&A^hp?NVf)Yu/6JG>f?8TH%?C/.m?h>V*Rm;.JH?\r'Fd^S*QrJF=H$s>gb/7"VQ[W39rL3,F4`Y2=S6Va3kY6cF4HJsGgGq"[fDM$MW!YS*p@YQ&:FoiOkM#jQ%/)U7"9,A\aR",%uo2g"n`]m,Y`]rW>R+48/<m9j\:M]+TKDrMd]7'F5=kirFdG3L1r7a@1_tW<`m8$O&PMNu<R&B'Om`MH20E3lT%c9IjWIkEjO1U#A*hD;?B5Q>-J4S1k^>Q=W&H2GYKK:SR()bW9)Iso#?o@&/6](>Mf2nOFF4bEgP_]S*qH1q06pUBSH]%__EqXi=1%+&ACg1\:PDl0dOH8:<;g+5Qknbho%*:7gg=m`qEXg6fDkqD7lss*;>!l!/644RmLO>IaQrQA")NY,sm:4C_-)^'F$(f:a0Pen#<#%-1kYj(EH-":7P[?&QB*.aWl%=H,O6!#V[8`^RM^!?I/$*gc[kdEhrJq0_]toP!=<DX=iC52QIoXIQ'4Sh;-pNot"9rhpiD2]dquY%b[9f+^,/K`Dbcs$iWF8^C&<Y5r0aC.RgT>1WGJ3fpSnO:G.ZsBe^2J'P@jquj33@j96\:1o1N_gU;uZDM:4!2dYW[gX&fo1rP\Vd%PBWp:d.-f^ropm*kHF^U-Pl]+Id=q_n#'Qpn%O!4e!rVNbp2+.D9lLs(U&=7[q'JXDm!DO40_/2Z[0OfdD<R=IBs;'5@/nj4oI!Z%I^A\Bj<E.JVu,j'`lp%fd8+;1Zgt;L2U=[[>BB_U%qiZ'j3N#HH"$D/r]Dhuf7GgZ>i<Y^NR-L/r(=V=Y&/YogV%dnfs=bq"b-*l%d4=Thq1Ba)Q-8da&+<8#^RY:BrI"En>Q469DtF;4b*C^Sj\I"GICtm2gp?eeY@57Z[`m1EbNB50^O5YLK)1,ro$,pIFB1#aK;7e:%H"cBjS9q[@cVO>b6VBZBDbj-Dchgd:gM]VN"Di2]MjskeHZPUb#r9@-Gj/B:m-#KAm/;9(W**H"Zh"!-!1m#nkBM!4m_ABeIm!So%U%Vu`r_o.YiEtd,",koGl,?hoR()<1DdhUo5L6Ma]t8CK_T+<BT<)A1&cPXlSD5i;5(B4YY/;=)gfg?Fk*T`c)P*=bT\77lWS+i>%]*Eb.F7nhOc,V?Dhb0D1(uKD(./C-;?Wicl\N5*'p2)atp#acR%$;GBH5H,t][MPBId]BoecJNaqZVF4=e[JJs*ASLqV(<spt&0^%ddPW\CNlVim9nJqhg,'"ege`YG[2D;5YmgLjSa?(#&jnKofN092q\#G#8Y%']/Q5\%-GlA3eKehQ2:]gBGnh'c#^6.iNR`PN^f)d%]NZ5fSF_V-6V[@5T&"Y#qI]0W*Sg@H\=I7mdH9TZB/FVBF\[+h4h9WScG,m)*IW2VXTn3A&/P>Y^51djF1t;bJ*+&,**8J].n>+G%,iV1s8@/DE2U%m,^M)KMc<a'=p]:n7f%tY"iDROq/eF#56CHilG5tY['n^b=]Dd)$lf=C4]C>4!=o&$E=0n58^t"p@%[_hOGlW-N%h0E23qLt93'U3"KdU'K^XdFGJ3QFE+>o$6@`"s%6jtAs1n_UpNq6I<4F*Ze>/]3Z(Ep4'@TW#B4rcgR?!K8^+n,#UiipE<AI]hT.%%YnEcPERqtq:#:K=a(F'ipr#p,V\RKW<+1beV4n7FVF<2l<j_np<1n"UQe\Z`'p%,,TtcfX)H:p\aAJo.<O.tI/VG8:!X.>me]#\%5+e@coo&E#Sj'oCC\>E1GGKX(1S">,hh&dL,p%L?$ugZ\@mo5m8:R"rrU&^4&md"i/Ot_$fmT*;,%)2Kraa,iN86V<d`%,*1;n!4%Qfcf^p>Of_U$7I]"XHhOLR&K#"N6g'pU,[cm_7]VK$3r\m8^=o1iqp"f@"RIpU%Ee""C8e1=?#JmcBI9:U8aZ4!5nLJeI>i23EQf%9,G&Z-M_?C3WA!eOK?b<%CC;6om1A-5:[+M(Ip*2s6]=e1[.47/;)aPq*d23rl@gHdS4Q5qdW_Al7H^L+!dKRaBig!(_,p^I3=%#%]X3H/K(U0pV\7!)Fr6a:@W)p`#&%@>q-GgU>.E6_F$&#`)*R(XcN-C>%[8J,KWj`VEBf?>-8N]2>:Ycco;B=PjlZ&?3@h.K<Z`tZ%(lVojZ2f^%96,VhIM!&=S7D2G8j*,"_E#A5.Im>&#j5,B"60,0&^F7K=Gc4U6oZR-V&%C,M/YX91L?)**o[#N1B51EF4`.RGlC?h%Eu^)Rc^2i7dB64'nF,+0&L:W<MsjF?:)eOD'nHf!Pd?/i/'cCH]D0u(&j)JDrrShs&r;k,*rP3l2u)'h4Go[/;363K@J5'%='*^H%PTeh+ItELSFGEAoH+t*.!LrT?#iE*%YHRqjjleMrFm?PD3;YY'0]/9KF)2Zh+1U_,b\M$3*r#XShYVKTFh9XkPPEEDBVKp$lh]A^%fA7`2h-pulr9;scV]p?JZM_=NDm#X9'Z'h3eThiKr^_@Ih>b/DeTP5gmUFdC00T6D[CL?skL7II?`"X:/l"!(]5?r!0CQZYmVHc)%hY`uf.pk5aDJt""0n!JVl.Vou[r6J1ATQntqp"AZ.U/^sGZG_D^YJXfq6ScRo@!HDX'aUohRqaH^O,_:k18"2esG:nn_i-/KeN/M%`S^%2DWTCFT/WWZ<j(?VlP7h$&.L24lkf2>=C1gMhu%lfeAKJu<^)le=-Q*K'(=LlO2%GblPAc#AkjniH2mHRJm3YF@eSA*N!4bK%/5PdVU"49/b:cK8JO_s<l`W-$f70t$\[qU,qL/=mc%jW7]@Yr4,h:u+V;:k^Ve0!,;kNO9G]qWP^A-mFQRacTkC6dLeXT_hZ7Zqm%HIK=oT3D_\p#:*tjZgHn?C8^u[rD/t>*KC>k<QTk?O6<WrKp#Fm`c9q<H7PFqNma!O]lq5g)RT:d=m^3!r%)Q6[-LKD0:\;#CY^"%d3O,5msJ"CdegZSLB4.,aF?1QrrD+UJ"WtFq5Z`.]DaP:Z0DiYQbVS6HM<rLT$4A#*O;@<n1hT%IosXm^eGd9P#i+aS6P/XnS#FJ%GrsmZm32IVT\EfQ30,lm@"F5PS8L!9-ipemhM3'50B5La_%L&"iFL[;m5FOj#L_tYK.#0M<sR*S2`lEL]=IM6=i04jRQ^[oojXfn%LW`n[+4"6)^[Y`Ljj*6,O,V4QagWRDb,O9H"tX/Jh;#-_9B04rf&"od(*BV`0"Wn<\:8hrk,U_YO4PHO4T4NaTC;4f*0i,JlX'O;%I9"RY(U&6NR6l$OXo-a^@X5t0d]GXANnj<\P-Ed;%,,$;KuUIFCcX2?O_X&0rlaoJC2G]?WKcS31Y&q[]CGsVrkb^_?Y=:>>Q3[W%jghLaqnN1M316(NR)R*m[sdBhZL,tq"F@1396*iI`r3*H".t'T+dF*>=mGp,o)9L>Cg\e:GOD=QD38`R+u[Coa2d.u^TQSB$hHr:%Ebci%`a;R&.B_%"7=#nB5G^d]1uOh;Ld"/7Q:C!u#C_b*jGYkdJXni[0#ul:K)+sqn(r,+em4oiS+Ma-VM-C@On\jLhYSBJ0.!19%RPAg\c>Q([5Qet!nK,#g.keULB:S!1H>;E&B!@;Z;X"CBSG1Z"mb&1reKK#1`p9#B.LuaO]qeHZ4g-_!)r7&JWgt6<]=EdqHW</j%DD$ZJf=$kEl0Gn6rd],fkPn@>W7h0(YB3UcW=q)2VcS`oCQB*DGtBl$=.eBWjY`(*l6mrcIPFK.daG$D:Mp_t/q$p5E.qsd@8FWc%m)@8uVgDe5rTQtAhNIT\s7Z*QSVm-K<[6GZ-e2uT"!=P&)6;<7Q=o<64SCs#2jkG<66brM?;k+YXJd!BFo&ZG2Mi2`KVm\26/B\/%V+6+ahQ$(<nf/MHSm=SZn1Qcb_bH_d4\i0.Dr#4*-nIa5XGp+3;:`I6/qip_gAO-81i%kE'uIrdg]W%mRMjS-4ZS#!5$XI\324Fa%_tD"?P>3FNf[(u/`ICDld"cOsp-D.e5%?GfU=SB$bksj\5-`mgfGj:Gk(a22`H'k=Rt:9D/CckBTbtEJ=o$Rl>Kc,,3)AF33B/#@%;O@Bf;_t929Xq_*<o/j&0QtVmltuUbO[\hOEW0`BEk#8JkFGs.P#jTj?RCrb]%gTh`?I<R<^*kgMa_Y,(\QC:jFbnUY7\lj>onc.%-^*Nc&lTjl,<V8en5P9*p5\oM3l+`Dq\gL>Z#kSq;WPqiHn>6R.oR7^Al/6nk/Nb^>447)1BY^nbo]0b@=e2cH1U'o05L%U]=B_/%Vp2T>`r?tRDqe&lf1ijoiC?:XD1-/bb"g^%l*W0C1N/S^mJL)^[.32*f.ZT9r]>N/+?R9Dr:TC,o^'!?O&hlIhtWg^?[$rmF1%p<%G!E*ID,*=p3dptSUH):7N@h?W/Ns,DmE+a\kmPtqLH!S8Mce/k2p_s-':4?6^R6k+fAQ\#s(CW[PW/)A#CbKu1=Q09TAa,fo<15S%7RdhErX1r>LO]4XD&3*BJ#<0RfD'OcO6N"7bk-6uoAPr*h4jGERJ)'@fX5^F>=3D8D^%kZ6,K?$L_/l6#Dc`GNJZ+'<6t9c"6LBr%/d*ZcD'0sUVC/#qI7m+E\rNf`M\ailKK8m6^Y$&N&`5Gt+e=I,6+C7i>[Ni_)pdF5Y-U"FRQdTp$+$c$\b.:ga/ub@HP"oF+?[:R%UXQ'n7;o9Z/[^M^fX;o)Y?eNT1qHXkls`;kV7>``$ha6<9R<YO(D_?NNCOX3+HNZj1'IZb^<tC4%JS,_A3pN)<u6`p7O"lG(E6Jh%HL7.ie+K8<i<E>hNLC+kkZhn=;J?n09X#kBN+A[+#ZIV#((@S'3B+VTR"t\:Nj7L[K*ggo1^J.f\B`jJf!\i+FIiL/E%issdfaFB%_?'a8,6hH9C+orG+kH<L+XZmu&=?Ol5H8AST.OOnoRHr!70;27IWr%-kr2].N,uQu)uGYbLb@7Lht4&#&e)A#89\n:*K@,cCr](B%,Ai!\J-'t'0L_Qe)]K[/m/eHI[X(+Si*+Me9i\(`SguhRZdUn]5W2lj[ZP:@/U!iNC)2!11bMX8q!4eo)<bJU$3J`ZoWaI*_6sX8%IB]_`!;c$k,M"*5!n*OGmR$E$`^K'iDdg;/fM71a>$,Z1>SEQXE'98@TIQ3=SiMe+q(5^T(kS$!aKTW[9[d!tXK^2I=OR>f;QiDt%;?AW>\EAii$6nMGBWb;`""\t,MLkXRF+>7Hd#&%_P>UNk!'tKWAf=HI)e=srka86;$&BFk"Bn^V@iONoW:o5d@58O#T5kCB[1/Zj%F:+9+ImF^.BTQn5X>gMqD:&1bOO/?PGZ*R0cZ_80!Y!.?o/Ar"1BnG)ZEG*V"3Y,CeYN6PY#-`O,De'hN)'I>9^kpLGO0lR$sl\[%#5;@.\s->+D/48eE5&fp3mk1'!=BUfbb\bZ,gtsV/p</hgSXfg@*\UFQa4&>lIaKT)P>#o((c>ZX-pi5>8+(5`'-TTl;H`6Tp5YS%CQ5II%n6XFJlSi[#]M;l-ioD@)ILl"@'De?79'L_PZNrone;A+#O'uE_1FC,j1XObG-pE4l&6`;F9TLhn@0UT.bGMHciIDc:5H?D%[]o?@aaN*U"Nrm05^>I0a^^(O[9^J0U?,7Nq8:*=p5$pI:nrh3Gp-R:\ZXE)7=VBShOundYjfH;)t3&iSIr^S&lM7I1kc6EisF(7%9sW,uY3fu@`WK!)2OFRSjKBMSR8*gMCngu/*J,'s!g0D;+FohCeCun>EWl>$5h`[2eMbiH)P+lm%^786"uT2,oY.;;1Z7u-Qkpl/%$DZU'!@3!?<N?@,T3)(HEBlG0CFL;9CP]Y<@KF[j,+q>%"\E6+OM$Pc'F_9aa+o&^!\cMlknJ^n0MNU1U#C'nBi7UTRm>")8BF!,%*_1oTK/+$5J`Th@1FA+5`k[9hO-3S5?UA5FldDG>OV(od(qZXt'fnuQDp/4.fi3kQ&/G&-QS,^P-,.0HpRs5GGEPKjPnGi'Jrn?Z%QCnjVX$TMOV&]R4hR_ufYZYABFWhkNe*ClfUl;FmBEGC]Dq,OjTl`G[a=aQ.FXarTotF9r!_<u1]l9)ZE>D1)/9&hN+pi^C.r`.r%H^ePl-Bl;8'.FYAO]t,).'%[hQ,[RYMHCZl3n.EHo*r$fbhEH_ZQl(CK^m`X:C=)#:(q>I+k28VIHHb'<3SKZN9!h<@R=Er%<S;#%S_?ASJss,F3sa0ld.d3*F=:M(HG/C8=)/-oWcdtM!j(]TX@m]E$(?N(OpEXLR2hoC)tYc"*dFlER)__f:+;H=U9[(JjJ97^P-7h6%Ohk!iaIQO>IBO4m>*U9`6Krb]b4mHFAcZ+N6Eb"$_#ph(WqjRs,_hLU3@?n?=/N6M8_*-^no5(=m3Iq'H`o=?!\jmR/P-j6,ZTpo%Fp0<6Bi*=:)@#/c5\-<gG?\SQ$Q7("5V8)"#TFnr$@>4oJ@(.j0jt/ndUA7cL6PV3:EQ*o\J.go*%A[5l@m#``n7keYV0/+niJG7%+IOpV%<"*qj0qDECD%kC<qGV-^erKmOp2%;\gHYWq39ZWV%d0$@GWgR'0/XVYT@$U?.;sO[Xhp9*ER>)DXil\$ltGDUUq[WhH91\%.gcjP'%/#>"!i;T!3R*dm5pSi;,3k@:.D0P;D%1_M:ui0DkK!*a5??4Ah4]7DX&PB.>jpR8FV!C[at!4A0`j;X\I\o?/SpK9O6^>%!,A)X[r4N^BA%lU4deB3$KskL6IF<`YrJ`&(smXe*A(:Kad(\+83VQG?"BaNXC>r+5#9'(d8MLP:hgW)%%mmtBl?*eH=5GVgS_GJ%Z=4$ci]Y)UZPVrDWSO#W0%G4$Q.@J(2DUg@"'TSnQFCT[H6Q.J#oEu]aLMh5?s=aZR'nIJ,E/n,Oks82U2:j;/!?>-MbQQ[eKb.5%%%cJ*3'u=_:U)I(SC"WF9je"R6lL)u(OoX#Tci2JWg$<k+>u%p!I:>NnQB@=gNq[:$kGc=l9Q6^VV64MC!&feGG-O?k'K)Hkr,8u%B_kJf*b$0JeeMYB?t'i3\KF4bW*?;p&LTl_=k%P-"?9c<r$M036BJ]j?)6SrC"([C,9qC&0j79S@V;+b!O[''a=..O5uF07ae="o%L^,2(^0e@RMjVH:nll]O<JF&0&C_+g8E5<!EHMV'M"i;?VIS-Z0]tp7K_r-7W@>Q2U*e$'W?-`q]WlU1B[u,PYlHmkg'=Vhb`WdE%8k+WTZ"_[k9!kG>g_&]<<(3T;L@t?Oli]XY:D\KT8>_ocm29Ya?Z`5bVV`LP'@PWA+]sY%Wf8X-&=SI`8KUlmVh5pQf8@R$ZZbRE%$<LLO)k7Ogi>9e^LQV^Jd4GpH9Vs\P.Rc+N<ple_=R-S26`I(8'l9dj!e;,_FDZEh2o^\(_0%mI0=K:\J?/_UP'STe$)@$fY=h<V%Su\U,,oOg^8qi*_;ktP4nq=H`!IYIOTkQ"L.I%@oIb4b@FT_Ib*+%g8"p1X/:7e%FV2Gk+^/j;@;,F6I1QkbZ)9EeQ4`]]9:i(Oe%mL!t15?##2lPPe3e+'_^.h"<SSIQ"CSI,c4Og[V\!YPiWK?"C//g,n3Nho)32["YaEUZ4&aN&Wo>SF(T@$\5`@'h1%$3Ab5&JB[>%-R/&V=:hRc&O3?(=i]n4g\2FJF3g*a"<t=Q19SUPNC_rG/`:EL+?VL@AL(N\#IY=Mrd5*j3Zt4@#R/%jYj*!HhPCpgVeubX<UB%t%_(gI9F]Bk'g.TIDP")?(ScV/BY3XUh!>=?^X/6O,d)bs%.GG`<('WAL^?OmY"+hi8!&4jZcSQhb9JfEFD/b.bG_T:ai`T-SkU@aE%jq<h*;qGdd5/#uJ;m=pG>mG]pEA2XFN]tm!HB2?f:#_0Kp.W78f#PjZ#>Q`#77`m[7N13rm8.>G%VGc"QuVA+\I]1C_&7u^g5'"i%i!eWq7!or7Zn^f*%;-3ZrB8:Aq!<ei;a=A-PSF>H#@o)b:GA2j/VU%3;M`OE,&jH(HI`[LSaguTQ;4:TM-]TIf]YbIoPu::bUaDL%O=R'B8a)]l+KU>$e$utge$a*:cO(7.XtV&BC<;7:)mBFQF&q`I#;S6nID%7eU0$&)\G6\m`[_2X_8JC4[]$Nehj@&0equVHqAs%<%F.k5:jLn8.f16gO`cr*rM,kso-OLFB%88/CU$;6G6U1In`#<?KYcbWdE8EukE2;\eKZ)3L7hH%ubS@OI0O<(*7P`dGV!Ls4iKY>d%\tq-oCS?+aL`qYp=#3b'i8\j=:Dg<s8@um;5VN!uHG6.?;7HtmliBFV<(G85Zm,ajbmiYg?MlQJS<7,B!,5<W;g]gq1r\h8coY@J%)(!jr:-MW37]4R!fVOnF\b?Zk)N(Xm3To$!",BTD[S<+t&iNpK%rHhb]Jh!tl!(Yh3ToAN5QN[8^r`;S?uY:A<^^DLF0K_sKQo?(%E+iNCdjtdUMgPYn6F`Qg,:'`tL_n@71"M<a@N<f.+JqY8L`O:qcH$2!YA7UJ9>M+BT'MLr%3d@)-Nra<j@MY&Z9ZO3D.h>s<aPrf%DfDP;-s3Gh1d05O)P"fl$7oq#SXrJj\rk=8\^Xp+V)fgn]IM9Fp^ui"1OO8>(%sHfL(-P,*-'^]Ugm+GfCP#I.L>dM9IN^fpF8[R%2faJ0.1;8mH&!Nt<:=MHk>J6>'h6NT.NiTWa`687ZBr\@9aXpVG9)h]XPC8+PQo;fGiLL"FK7cWMaptPdLUWuE'n0m(P=WO=s:$k%Hkq_,/G1$NJI@I)?$*bg8X#T."QgpAdRWBX^.$j$o0"JMLW4'mG]f6rkb+3)KR"u7GVpDm+T&E-\=cL61hP\*r&oa%\3-[8$#A5T%9!usB"sD<K[Q7WcT06pU<@QkQd5C3R!i54Ii$rAB0Ofd!9*I'H.P7@m9B.OJ'=#i)\lWE^ds%hT)G/u<(s`9:gW1hf1Be'AJCJrJ%(0q2g.:3GjA0#52Gn\6MajJ6$8jH+5iFRe8'/^uS(0>;AAJi?Me+8E\Toe,=@>b9$@DDok[1'j6q[CR<U((-UPLff'EVP41QD6F"%EiS&4[Wi=<cbl^qa?[tWW3C$`:+dZ=LHAZB7SeUfCStTBd;8r-krgb4QU^+>&QEqOc]n^\Q`ZquS4(^ALRl<<f_&dNPT_"n]gN/<%E@]Fh=i7[H3#%I0pq[Am8]U";^iLHWef/%B.*(>2(@P!`)S#4Y6^orRUp61$MT3Z7_hoMG3n%%Z(JSDn\d\RfinQ`;$:sMh6%"ms%@,%=b'E!)9K$n'oo".(n**sCOAQ;pN,<F=E(Z#Uk$q*]J^+H:LXDAUL4hM)C[Oqa8p0JcN)TflqR*5RRNR<N/']*(h-#PHhkYdE_%HdncL&ZbTQ!W>(>oE'BE;_(69iftZ2:o&]k=B?)6641tK6jQ`C;jX/9ARVqg8RTM$oE1F&`5q@+?%VWTOJs@0UEM_0+fA6L+8[i1%A*Y/bT'CZE=['ghE$9UO^7a#.$2P:1O`X7C(uHY1P%GbpV?Mfh-;L-=XcuGrR*UFZZKgMlKO%1ri\)m7!#5:4rZ8cj\u%(p6eCRo%.jU0O@5832nD!5e,pArQomCqWf.NoR,R`[uJ^<7!K0D:>b=gq0KWNBI4TtmNdX!BP&I)>c.KPt$'$i*FTL$l72%3Y9rG76-@X@Ku%)#t-TU0)4$Ci3&eMQ6X#nOjaK&_7l/G3;;&MAgA;=SO.LD/B"Hf&@,?J?BPGO[uuKaRl%(AZR14$6/9l9$*P'&5fa0XjD?ups2S5%SSYqF2<)3Eh?ne<@=BY:foV^8&m[AX84@#^:`[hVUGR'm%h`U)ka^K:*R7c^YPK7h^k38eY[1j#>*X]U#NKo!*UB)nn"Ji6B^/Ji%<`<t`'p=4uNU^'53n=S9RHb,@aR]^BTi0r[5=nqXO@HCd-l.$4Ie[%3X:jH"`4_qnaLa&K[/<Jj`q)!5#L)&R#5*!P+XN4(g[o(U%pot/Ys&&'h4n*#n8\j@X&WL<2!["$:Z)+p/gp/?NTSSmUL79;uIt!==I@]j+o[;s']0AIM\BsM=;/SVo=D`&&JYf_%ec8Ff[eDal%HH\\*3R3_+MG#e9T1%V5>mkaVmM'An1jE&9RFdS,T[Sf&]V)u;ClfNW)e36AC6EV--#APd'%.UilgR'gY@M)F,Z_tjNR(^*Q,8%C%qA]L\B$kj1D\9d8H0[6i*uRap3l,CSoVVU/>nDXl9<km;hBEk0j3ni`&O?+LR:cl]:29Y_T7?sI<M_tK[uJ*&i[^:\dkKSknXZ\D%e`)Jk,(*m7fV5W;Lc2&8_K[;6l\7kK;5racl0'u6T.rd\20]gO%>3T[5XdTUH[2_B=?_oUP)_+^poU?^D1-``:4a$@3`r-^NJdA:%WNT_)IZ`+h4FsI%n+DNrRPgjQ*NOI52KO!iQh6HRVA`%M?XlbOJFLCG8-luf\69<XkDM65hN.-P+V>WTCu6]S9*cK@Hncqk)p_$L%6=<j+<!KtA1$-f-V,R9;di/8h*DMlW=bf_L$WlWB/g;f!O*2``?NOFG[;ZK#rM4S@+BYfZ<rcMU1]H0-7]8gT04?]Pe9[4UUGlEB%!DaAd/68cBVkWCEdE@K&2rJcP8?[al8fARR_^>`DN6i"&kIiubj3'dT6UA3t:RioQ7mf=p.`Cj=8VKU?O[18bL4t,cr'u)X0*7_>%>qA@<ET##ffB(uOnlsT4NYY?TV`,`HL$3m7BU*'/hi^[2`(QmX4Qi3F:ubO()Bc/J<'glcEb!au8O:)V>-:=uf;9iea7=?RYalgM%'Vu3JN)+[%cq^9XA)raV+d<3*BLhY=%&fHC%rs!b[=+6_?^^bf'?_@Pgp6KIi-6'WU`pM+ld6d$KpZD>Nif`(!gFa9Y*LcuX/0eQ%SElR;)UaR%%J+!sC+-.@X'd(p3%Oef9d@(o.kHC"f%j@t6ihp2%Gr?c,/b79,Nr%D2=T8->n(m$PnZX#YCXd\J[9kk8R9T!`gVkY%!2Gi7MF\/6%AJ`Tkoc0F->Tp(Td_27)mlMXA^9Kr6c*:QXrrV'FWmVXBGrk-!lRu4PBFD\ALLi4cq9/u#eV$UqZF$L/oN4'cQ`dB%:,X=gP2p^INPg>]Urrau1spb)'3Mao5bdNf+;3;ljF&N);P5$W8k/&J)%j1Eb>6GhXUXjl9CdcaUYLU3gq3u-g.@SM$,Lqi>VSi"%KbtMn'r&F?Yf:p"f.<C;jc&I<b.94uPE.nTC[:Z@P6%r89E8*Kij1%p,6PIJ8jo\_I*=&D=cX@KfBQ6^BfAm\qgb%^I3aK,Fk./#%[iDcN18;TodCp,BKknA*:\S,m"GJTu;GkU"'U&*')IpHaP'+(I$nWS_.?`1qfS(Y3>q1X>6rpA]pgA"99!-[&!GbQ5ouTBJX4>;.%_q7S`QK>f]<\&3";QCP.W7CT4P?UDZor3!sVsO&*VSi$J;]];B=OeO_L$]eR@fkP`-j5'jO9k?T9]gIC&gGmeV]M!`4q(%>,\)0+%f6S*?6*M8b'qm*G::R$qTq,<tpo]PQ\V0(N`/3/)]i#$`ca\_cE0+'WE_=.ApurMHHDnQ56-E#;,289-k=$&V&?I76@]C-tJ*Ac1%R)rSE?g:HQV]uIS-?r]V9hXb=R9jF]Urq.Wcgq"jL"RB%I=S/!RIV,Rb,D`J)%h`t^Cs?#mmt8+$KWEHBZ2`>!Q83EqtCk,]X*Tp%FN!`k2XL`;N,+Z(g=p_(Q^rgI4i19s=O]lGZpJ:J<u>du7'\kD=99]B3F*I,p52Z@;Q>os]u7Ge#u5J&XOfi0W;%<p[V-XY9DG#E%U8IdY95`7UPipX?eWN8Ipb^!sJ;Defs+o%(:<t<]!Uk02PS="1?5_O_^2'eB_tW6+;\&k>K4dfL=(kOG'bu&=<)k>,d9T$nVlDFS%&5CoXlCc6O4!t>-AUbHbbltA]'Dmck.CGie69rK>FEmn?:X%;ji=$0e#1uig=ce,T!=.#FSNFt)^iaH\ZdA:V@6J^VUpXo=+S$@m%KB-R54bFF60bT-V%5^COph\$L5sXa1r(ZTTKj$U-C=OS`:WYEs$%qbWX;Bbu>nN'hJl9$W80TjL0q%",]?q.2LkH?)D2Sr'1%`&A%ZF@m\1LhCY9-j9jn)`(2.3BeHF:HP/YIO=IUQ$*4,]G-5-nXpWO5qXS*9A+r4R$FJ>$jkG:oL)W5#!Q$@6>H&"P.J=[3Pif9$^fs%$:B_>*0ET=i0NaN8L?eC&?@TN*q=$&:uL?hT_WUOYb\NPS$V<9E&3ZFG:j#g-JL2XH3/@fX5A8c+*G^9JP.<7<a#R]lElfso1b]K%nPUgrN7-<XLhLWTN-%/2;UF,X6s.A[>,&mk9.:IaPI?=.%c:8%`,t4M^*p,q+?uPNIiq#3ZREW;!LK$]q7!<Mnq!08Fp8K%XWbc@%WH1j3?8?K@%YUu/MsD@[l<d-Js*%%LpKpMW?V0Ni8a9YSl<d-J?V0Ni8a<f3WEkaa=H(\u5^fkG,D-,[a"<%sCSS1p-Nq?2Oa<4m%TaHCG!4/k\iV8O1!F[o8Zq`sFBgdP=reHeqQKJN.f8J=&K+s)3+2pg%Qk^`<kX.YG*]n$!;WMuh.>CI]C.'$l'dg(N'uJrG)U"9l%LT4dkmdXuS9<9G!f`umDMrN\`C>7*k=JuqMTbj#c94@0<Af$F0ega52:5i"&A&'(#+IN@.,+L(jn3It+%N34J"8a'J(Kd*]M#5(*%Fe-$\UXl-:)92DmdZbQdV8.Wh6PVc4E?9*TEq]SV',j*;9]:!0XCf_RT]Zc@YAM>JV4MKS]m?d!&Si_GnU[E7:V[gE93Y4kKuLtZ%;N]6orS4K:_uhj9`c`2=N)hd'4Y*<j^_R?3C5:BZLc?bgG''%E0fZ=t!*i10`(Cmg=LR&h^sWr#N_S!!>.0?o]ZKa*TPY+O(Qk[@%4an0LJJP4[*!=/beti%JE@4/#U$,&c_:;.Qo;*/8$laZ8-1uWdnurISqu`dd5`l\HVAc11r#1t';Z%/Vf`uh;M'_.qL6BLk%5rIg%A1GUN%o4^/d;CZ1KL/'F_Z;,9DreR:pk$FNT1Ou/>^r,'.?5_])<AGh0tc.^>&9^J;L7a"`$;.H$*')"pM2Kj+(1oaK=hq!s*1=)%aQul3E!hn!c&?1Q'W0(#el>%P,K?'=[&(fUE?Sf](T0H!<sd"4OA1*JMpc9XenXXn6lLs'W2(^P2l-+OWb6dPj=ZE;ktGT7<C!JL%FJ?"0LV[_'R3Ws8,<bo/jAJjPUU1^a$B2^Zi$Gh4mPloP/A.:'dRMcZF4l[K$<`Cc>@^NhjO#DMk.i;+e3$O0aH1[*SaZ_]-p,Yq%ZCkc:2m@PjE7\:,`+\u/.l+o`618Su&OrWg.NsN41/`!L"j8Q$"j8)]6%Z]#1qrNZjpP%iZnH\YaZ^IP.?_sUE+7NL-?C_R;)Be?%Y*Kl"a_]Zn$<O3BQ'\ERd_VS!Q6>cck#2RNghJ?W?4j';;CYOO5)0c=.a^3(E[d7:]efjRe^fbdM"TK:*Oh'RKt-"Iab*NZbQ'KL%Rqe*?.RWOe=mRCPV_/]n[2PS=O\q8pE[!/l/2O709kL.Un0<TqZ>1(ES?EK%7P_5[IT[rS4a_Bf-jCY.Xa5E?J2<EJ63?^a!J&&j%Wu]`%]i3X/JFJ,ZpL]3S'QW_<3uA&V,d0u"kC@)e(?Pe6WLZYT>+]X6<$;T?<B-%/&qA>s"C!gh=fl.^e:G'-\7%;;/qk42*URKs%L`B$@qkCV[=jrX6BJ.Y4T5u2PlL29(@F(bO.3UJDeOUUM`cr+W=2]-N-u?M6lba/.co,&n!<)Q3YuK9X:3n!t%9")(G#QsOYQ\S]%K4H("M'XF(1m:m*$Ir^`YhtDIU'_+9mP)YaA`Y_9X8teB[Fi^.#`IHD&M5oAQ-ffE&bA+<8dR6Smoe$(U3LYHjU&%$8_V*0>m`5.%!c$0<,0"pS%PB&^Kqqbhn4tqj"RF%f-C[ZIZK#)IXcYGi)Jci^;sZumB*M-H\KWkTVrrO"m42D$;Z*4ph,r1>PWK9p87XZI$fP0]%[L"7dHZ@3l)U$ZWjiB]2&m-]W4c!bt42W5;oO37nDVAEbe&%9BAT"CJTO@7-B=-\%Kg%8smXmFKASX32o8.K2iseXY93_M-)QU8g%Tf.n$k>!79L's;R9@36t/c]QI8g^DRTf(tYK#tEU3Ya5RKQq9pJPoGQf;!Eq<@PM>AK05V"/>[U=^a[1fumTQnOV'(JIHI:LA>q.%`(I,?DuoR5Cpo=D?KaO4E2j>#eu+,adFUi56AJl>"nF+N4rhHSZ3cL'HV,[e8$8!;T?-_[M")37fc7kWRKLdm*POHH)pq6%LU7[r%%g//Dei47CUd.CE!h#-]+@V6IU)9-1Q&)t'0_)Df1I`q][%[tk/.*[(K&Wm)FWkAd=VB,<paB+/:k,,*adN#&`;p3)MLXJ1dAs/F%X0B"+<\YfHQptpDSs@SIQYe>Y$nB:9ig+%.n'9h.NMONJ$EBHr->?$p1;!r=>=h5g,<8I+`Ka+h:7&\ML2O<-BbbYnam>3j+YCma%'h7A=C.[d=eb9cC`?^Y)D0iEXSnK%&H\+daDTq4I0OPG-$N5NB*l_e;/Zt"CgVRR`ZkD%Z#cggE:8QSKoL^JHoX#YS_HQ74,'m5u%M&QeMXu#`eimV(OZ_9/XOk,t-Xc#Xe%[U4),]Zs<0ce((S;fCKg/c(eQVsC<+>U>)65_O8FTP$p2bPTTLIh!qUR!UtLXQ9NTUs&$%E-7l*-XAcU>U*s-)WOE)L>#[RV,X(NXcAt;P?3L'144]:lPr_ZVk2!O?T:1#fhigL.G1kii4@V3LLu7X$=u.jS4s>aRXHB3FW;;"%LlR->"<94+1#?NjA@$HjZsmFfJp7V+TE&EL\m!N@Dq,]hZPCoc0#4TPFc'<?7#V8m,VignD=qca/=[WmX^k5G@]/&(K10L];c5.j%/-H\j(U7eKS4dur#=_U4KnsPN@3j#@6K`f`d]!JbN`q).P"/"kAVsr%=u$p>WHt+)bU)'LQ_KjG?@U;BPD]2V`na6_oMVWM*$FM2%:a'Ot)WOCSdr'*sFAh1-XVp0fKbS;FQ_FbdARS7[1:gXQPEJ5m75g^4gWG2"JXh+9dEDYY-E.D!W`+F1O6dH8[Y@)5/M`&^Z(9u8%h?InEgD[t$Ne%;K?rU*dd:JCG@N5oE3td.M4m9_nf;2[0F<3SB.1&C3Cejef+G[3j,ZbTU*?QfZ>TVq:"^u-PO8ppJQRN`nr?gj!%hG3M[h8YNg-\G`_.FP!"!jdNqFe.Y=@8<Dn.IUE8G?^^iK*LGa3>0=eJqJsFiA?n<6lIKL\<bItJp>=MFuH33eoHFDCl+pd@M1^s%ggS<F56F"r[Yr4\b$^rs4P_g+N?LY1DgnOH"TD%U6p&$\dS?L,&J*/,5QdE:j`P'*.9OL!Ck]6l-?mBanICI#Jb\JeYg>-p:TK:>%;DM^Q85EqLcn*3.Y[)$C!#-3'!@+?n6itB@-c?s\@hN!Q&?a%TZ7a+"$q0Ro\O%]G("^VG46U0I]sQX8Jg'd(oh@_sHl2!Q'ggM5%cQ+B["IK%n1;XVZ$jBDJV&Hu]H!_e4d#biG6+JNppD[PJJM?mdBUThG:0MC1b[K:+OnU@D1E]#UAJidNrT>a:L9Lj?C2N.g\eH+'%k_:jUo%@`9AscbBdS4<jfE$kWL3>fp;'3'YVEk75+p:_e8#3DMgPHA::Rdo@b2?I;r=OY7;%OnF_`9G"kmP;73<#3n_aYs)%).s*%#`,BRWb%-*?3i8;,EroU&U(%lNI[)TZ?#RAjXIDe0/$q?,g.Shl-2KA&<!R0&[X9M9C%#Z59*lR`l@7+KomX5/N#%H/pn#tXRP,q%Qt&''C>H=MT[a;?JY$Th_XXH^`"lg`@%j)IA@[mX)H#KSN$+OtA:EXgCTeq(I'#i03fF\`/Xr`E7jUo;Do?J8FX\%3jo"V41),(m%Fr2Vk!>$tcN*7/dA-KSWTTkOiQWT%^nP/=aK&J59C>?(NP[ccdB(Jbu&2?OghPP*5\_gF3g_<.C'NUu]HXmDj/k$<BMB)u>Ze7@O%<pNY#f.k.7;aAO''84c59+M:67-I\2Pr:(gU::'G/o*rm@pY*&-n,ZEm!4ql9D&p`h.PJ$U7Yh]as_Oo,>/t?J7Q596t3?^TnP+a%.@=(l'k1)!YDf0\2msIg]2!Au'En*RPQ;>*lp`o%2F9[]0+-:t:h_H=hceNN44.)<5UJO-:aYC;WpjmkMJ'kdjBXTJb=Is%5S6pg%L]j75]WXu5c4pq5\ulT:OM^ZG7WE"<-&Mof3*nF3U_D-%EiPI^<Xa3bc"/U'K5G`eks.lI8(6I-YEY360t63)SP=OUM\VX06\0io%&LU(k!qNQ&,\'W%6(&fJR@X"%HHEdu9D,EG<7W:M\kB51&/Wm&[R'P;H23)[k@bc*_GR#&N+?\H!gM'm`XpO5CFGLdfi-6?kL*Z@%0"S/>$pl(^BESnSVpIbiiDZf<G^t;6nJd<^i"H_URI>i,[29P.Mqm3p#_`"TOsiUd1?GBP>nX\O!_?NJ^UXt]H0-;W65lN<5R4)S%@M:_(L;N_Y_hQ6$)oZ7`#U2Ht+[eXB;3K%!Wl=43&V]?V@l,(`qLWN[GVV90;Q7rLk!ITZ7Y%cY77M^/ZP'oMQYNVoPC'Hp1d6oh%/7;-8p-fYFTuj0Z:*pX$5\=H8N03%eGtC'Xe"Nl[Xqq6f9&d5X!9$na,W3qHpAAs2W2(70S3fgcalJa";l2<Y)!7%2H5FZ"=Y^VQ%%X!kX1j;M@[2j&Q3Qr@G9%h@Q6FU?q/mteE=nm.gW+!cN&54JXLCa!M\#L-+Z]i#5'sdnl>BuC>4ko(nf=7$+@]2CHi];!,l@JPS%r$_b9*Unk@Q=aPu@qi(QP3*Di1;tf.NX8s"B[t\XS]Z;c[h:8m/MUWfD_iSjhQZfjVA7<`6)L</SpDVnn>]/QoYb:>O[Qi#@hS6i%=RG3eJ=hmrWAY,2(hr'J,,Kl:Gg>%R?i;BeL"`&]0Ldt.P`!?+91t6I[FX5N`VZEp_Y9RBpYh\o,`b`01(3kPTr+gN,Zo@B)p(%.%bCH\0i_]`(.s$rA/P=;(gmPOX;8RY@NJRoYFXeSlao<P`;FWFLAYe\:N4G7.h(=V3I^5]`':iP:4c]Hp9<rft4_1G.1gnB6`_%^4%%+.QoqT*N2EnmGg$#)70,,+_oV7r0<?OUfYr>#aL^sM2VAGf$5+;f-hNnJg.iHkiE<=70Y+2PsY;fc_&[QXkq^sVcDZmRSQ>@W]N%N=1=MgI]Pm?37Xq_iS=(<#\5HN4s4@f7g5MH8DgcG]]Xc"4<3IOrfPDKFDc1UZbGIEn(IHMfemU5=c>]#eQb;'F70p@_YM0#MlU7%`/Anm`a!Q[+C@9ZTd*JjRi^H#_S`.LVCL\0N`-BIM'.unX@JDW)dUU*o]"X;VGeV(-M9CK_df94<N;7]-T9XDBdA[5@lt!pj,[Nm%-L0R3;F\nXVMoKBoit*)/[#P:d<#!?)6s2i95OCu;.O(Qc;,+3Q+1@YU_6SH/gE)>ngbP,;=M0,`K>%?+!U)jEMP*#!*LIr0nS%e%*OQYnrJ!%j(hn'#N"`r6hhWR&^<=tiP3*Pm^(5KD<8r35^$T8kGgarI:bd9_pW7L-,iV?#fCQ!7>`-GbGU/Wi#"\<KC'iqR_iB'U%ak-XrO^:esL9Dj:-n1%D6qPlV*ZFjI"r+VQ^Niuq_Y$Hd:mGLJ6/SU(8O8r`Z#(6RXm\Zn,S#EgME60c;1,,ao.nK9V^s3T$a2lX%@9^u]&R?u@Q@tALZLO.DJkM\PfMSs;FB2_jK+WilY+99OVDs+3Fc.lk8=hr'Ua[ou-f.MK3Zn++ZU.k@cLb"/TI<hQfM,\eaB(Zj%,O*pQ&93&l7t+a$]`WWhUK47b@0]T2a0qa6enBuV72YnQj!tF_D&U-UdOlaDFVH.dU?U37:</"@PC!e*iE.+YaBQpjM.[^F,Ma]*%h^fF1#bJ6&8W#B*,am]h+BFp*9%&T<B1V=='Kj[9qdeU788i";`dXX;O%hMta#=qb!\rB5BgB8_MSP[BN?JDZ)N%*[+.)=$D9pFB%S)#=2&hZa%Li=3:b^iW^5asSbDYEI/LD2d@44[$N]1cZ.+:ND?eAhVuCgs56OiU&u9IE/+7aa#e0g;Zm&jU:+.I2S=)ck"N9CG*A%'T-`n+4h!>:tk2r`J:b_>$\'C8,D!P#X06Y;16_/nbge2Lq7WA'p&Wt+M#0p0SN8Y-`$AW/un*?(U)nQD%W'[#+=A/F%DC_6D;4&%dZWQNO&mG@\>'j04QRGoaa4Z6D*tO]HC4[c:GC'LjUPkmZQ6<ijE6=u;0&KZ05c'pjQgDE2TTsmP##H%fR'&nkZ#f%Zk_4S4X1T#%YZrOB0_Eh1RlnD:6<N3$hRHEf3SUEe*XLCdR#/oSrA"s*'03ep-<_!'9ndfugo<*+*rMOn--cePN\b+"%pH$Q7!*n=o3<O,-*!mr%Zsj>B8n#487<IX8RdYjL3*L=Qc\)s06sN0$qWh$Oohad!MYER)`2N$da$C>WrlNePKHq2>agW"W&90q2/!Kbd1,B;cZ(a%0'fmq\%K/Ra&M*=F7<:ME+9HEZ-jbHI5&2+ZONtNC:aX-0F:79F#W?C1R[RBK,#K`"gqf91WEn7@dfE$T=r-NN?[eoO@p$^<$n'UgsdIltU%p&F[J)AR)kI2FE'Z;UH4/88EGP-m(_/:dGQdc$iB4lt/;R[uG!&'bS(:$WHG90/h+QM"n0;CbP$AZa?Q@#t]b$XR+po;Z>,QUVV`%C!:-i2WGN6V%0:VM:D'lc!.5A3H<Cr/NIg,;@L7XUnb3HV/S^NL5sQ`hUGa;SOpG.9;:`f`R#?]7].B#!m5]Cl!k7;C>2QZAKu,&%W_b@G#C01ngYRe42(tL4fq^1'8SZXH"CcOOObs1nVC5l@TFt.Y/gEg@=0R^Mr`_8"C'mR?c_h4BCVU2e]Y=W$VU0"MmmFq"(o+Dc%f>Q;rBUVU#48(1X]"i.h<jWeL9*<=-*]/>,!n+$HM639tGllBX+pb_M+>aFrhGm4"[b!\p%kSXP,MBf]Me_>#="c^K6[#.U7HQ^i%L(odW9jo[MNH,*!9X*0%=A)(r"l^Fpqd^^L#s=SZZ.Jj[lQraK;@;)OciO`4gIRe2r&o.4Ch$bnk>LY2XH58$NU\8:dTOh5@WEtq%dtrL/:2`'`5hG5o%(+Z[^fc!ZK"+mH71LMS'LG&X"(*ii[+M%XY7O]#$K5Qlm%fT*pE,+2".DQ>XUl];6^qHBW*AneOIg6elUK_S%9dB2gXZSqmZQII,q4+8$g+pM8=@b_j9P$eH6"S\A3g[*,hs$Q76KBl-_Ust^g,>26->SP0o;R[2Se`4pV%Oe\]lU&OV6S<&>tQES%0.h=g7T+XFm=3lj'H/FaBBBQCj&;>h6CQFe;8#*+WQE((h,Y9TOs+:@P-1/qkB0/P<-bWYs*lk#2<q`<3$%*U<()n:?_O9SA89;D%.5RqWP(G17g5@4\(cPYs..5qbG#rel0Z6Hd*u%VR*$qTCN24ec6V)'bJu-9t,RkS&$>*IR"Zm:E9/g]%4?lQ8XH4hC:$_+&BR5Nm%P#j+To4]p6.Y^f=nLPXKF\%eV\$&I`)G.lD0da^@]qBt+C;J5[f=`Bj/EZ"k=VT$5+q%(Zo45,+PY.ZOBdp@XI.b0TSp#-'cJb1<%Y)tP)NU\R,aV?p4<1BCHb@I?sC>,O7,DIa`:"n[jVH/^n\n#b\geU@GPBII/gRY_eSKn6K&5u%R_.BG/Siu*3ekg1rpfsL9!_=R;%7^cTO7?QQ;f]L!M&Il]Q`s,68$;1C"cs`K.T58MO/W*&m0FU$q%W/dp`l^5f14:+![Ihqk]A;C@<<KQk!s&ma/4GBRf;coCm=o)M%.]S`[FaYZ-S^?sgphP<CajeP(V/&.W<^(Buq"47&]:Jss?N=aTV\B)CDL1QpO.B'R5#0EV043Jdppp@ml]66lFDcC*$DK3$d_j=R%>LTq1DYMVh\%d@Iq(]S\p#h\9]C>iLr:mkJ"YkVkaF]JfIZm[.l5EsriMV`ds59%U;co&4\[M<"$=8DcS*HnakGFk9S,.uae'=?F%CHE4ua`i!kks:u;^]Oq$*1h).`(\>/2%6cAGH?W4g\MLaW=%f+=dKZ>\0Gd9qhD+XMKi`<q1JlCUK]0Zblc(*N?AN/OWn4u6HRj`%bAb)oUiX*62.Cg#0Q)eIA7EeYg'[HXN#?9lS\@DaGuQFo<Z2GrLVC_If`9)&m??*Le.o%;1^:V6];kU=[d59"LQsj9b`tdB]YlhX%^%W/<;YT#U2l5^SFG%f6JcomYKJYC2"`B3_I<m?5A.u+#<p-Dmo5&iVTfd-"S^XI8i$WY@5"K"c(jMQMO(`1IYlpd<R:79QhkW5L%jSPLQ28U>S1f[If#7W$`M;3ZDf32d`oM`DY.tlBVl7ig2TKGe.+cXe=pJ[&f['f"pR;9:lRi>_kYJ'i%k0Eeo;_p6(hgO:-]^tR?%f&k9-a5(t>B63q*QS6ET2S[(8VEaKbmf*!mZT5_rpXfEf!``.gR@,#g<i>pMNYqh/~>%AI9_PrivateDataEnd